{
  "id": "http://schemas.wbeme.com/json-schema/eme/solicits/request/search-submissions-request/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "_schema": {
      "type": "string",
      "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
      "default": "pbj:eme:solicits:request:search-submissions-request:1-0-0"
    },
    "account_id": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "The EME account that this message is associated with.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "request_id": {
      "type": "string",
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "pbj": {
        "type": "uuid",
        "rule": "single"
      }
    },
    "occurred_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single"
      }
    },
    "ctx_retries": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 255,
      "description": "The \"ctx_retries\" field is used to keep track of how many attempts were made to handle this request. In some cases, the service or transport that handles the request may be down or over capacity and is being retried.",
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "ctx_causator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_correlator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_user_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/app"
        }
      ],
      "description": "The \"ctx_app\" refers to the application used to make the request. This is different from ctx_ua (user_agent) because the agent used (Safari, Firefox) is not necessarily the app used (cms, iOS app, website)",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/cloud"
        }
      ],
      "description": "The \"ctx_cloud\" is set by the server making the request and is generally only used internally for tracking and performance monitoring.",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_ip": {
      "type": "string",
      "format": "ipv4",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "ipv4",
        "overridable": true
      }
    },
    "ctx_ipv6": {
      "type": "string",
      "format": "ipv6",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "ipv6",
        "overridable": true
      }
    },
    "ctx_ua": {
      "type": "string",
      "minLength": 0,
      "maxLength": 65535,
      "pbj": {
        "type": "text",
        "rule": "single",
        "overridable": true
      }
    },
    "derefs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "description": "Field names to dereference, this serves as a hint to the server and is not necessarily gauranteed since authorization, availability, etc. are determined by the server not the client.",
      "pbj": {
        "type": "string",
        "rule": "set"
      }
    },
    "q": {
      "type": "string",
      "minLength": 0,
      "maxLength": 2000,
      "pbj": {
        "type": "text",
        "rule": "single"
      }
    },
    "count": {
      "type": "integer",
      "default": 25,
      "minimum": 0,
      "maximum": 255,
      "description": "The number of results to return.",
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "page": {
      "type": "integer",
      "default": 1,
      "minimum": 1,
      "maximum": 255,
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "cursor": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "A cursor is a string (normally base64 encoded) which marks a specific item in a list of data. When cursor is present it should be used instead of \"page\".",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "sort": {
      "type": "string",
      "default": "relevance",
      "enum": [
        "unknown",
        "relevance",
        "date-desc",
        "date-asc"
      ],
      "pbj": {
        "type": "string-enum",
        "rule": "single"
      }
    },
    "occurred_after": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "occurred_before": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "fields_used": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "description": "The fields that are being queried as determined by parsing the \"q\" field.",
      "pbj": {
        "type": "string",
        "rule": "set"
      }
    },
    "parsed_query_json": {
      "type": "string",
      "minLength": 0,
      "maxLength": 65535,
      "pbj": {
        "type": "text",
        "rule": "single"
      }
    },
    "ids": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "time-uuid",
        "rule": "set"
      }
    },
    "solicit_id": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "cf_filters": {
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/search-filter"
        }
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message",
        "rule": "list"
      }
    },
    "first_name": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "last_name": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "email": {
      "type": "string",
      "format": "email",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "email"
      }
    },
    "email_domain": {
      "type": "string",
      "format": "hostname",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "hostname"
      }
    },
    "address": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/address"
        }
      ],
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "age_min": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 120,
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "age_max": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 120,
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "height_min": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 120,
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "height_max": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 120,
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "gender": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        9
      ],
      "pbj": {
        "type": "int-enum",
        "rule": "single"
      }
    },
    "sexual_orientation": {
      "type": "string",
      "enum": [
        "unknown",
        1,
        2,
        3,
        4,
        "U",
        "Z"
      ],
      "pbj": {
        "type": "string-enum",
        "rule": "single"
      }
    },
    "has_notes": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 2,
      "pbj": {
        "type": "trinary",
        "rule": "single"
      }
    },
    "is_blocked": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 2,
      "pbj": {
        "type": "trinary",
        "rule": "single"
      }
    },
    "is_read": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 2,
      "pbj": {
        "type": "trinary",
        "rule": "single"
      }
    },
    "last_read_after": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "last_read_before": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "last_read_by_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "is_verified": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 2,
      "pbj": {
        "type": "trinary",
        "rule": "single"
      }
    },
    "is_rejected": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 2,
      "pbj": {
        "type": "trinary",
        "rule": "single"
      }
    }
  },
  "required": [
    "_schema",
    "request_id"
  ],
  "definitions": {
    "app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json"
        }
      ]
    },
    "cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json"
        }
      ]
    },
    "search-filter": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\search-filter\\1-0-0.json"
        }
      ]
    },
    "address": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\geo\\address\\1-0-0.json"
        },
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\geo\\address\\1-0-1.json"
        },
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\geo\\address\\1-0-2.json"
        }
      ]
    },
    "..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::app:1-0-0"
        },
        "_id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "pbj": {
            "type": "uuid",
            "rule": "single",
            "useTypeDefault": false
          }
        },
        "vendor": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "name": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "version": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "build": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "variant": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::cloud:1-0-0"
        },
        "provider": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20,
          "pbj": {
            "type": "string",
            "rule": "single",
            "format": "slug"
          }
        },
        "region": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20,
          "pbj": {
            "type": "string",
            "rule": "single",
            "format": "slug"
          }
        },
        "zone": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20,
          "pbj": {
            "type": "string",
            "rule": "single",
            "format": "slug"
          }
        },
        "instance_id": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "instance_type": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\search-filter\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:eme:solicits::search-filter:1-0-0"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_]{1}[\\w-]*$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "operator": {
          "type": "string",
          "default": "eq",
          "enum": [
            "unknown",
            "eq",
            "ne",
            "gt",
            "gte",
            "lt",
            "lte",
            "exists",
            "in",
            "contains",
            "not_contains"
          ],
          "pbj": {
            "type": "string-enum",
            "rule": "single"
          }
        },
        "bool_vals": {
          "type": "array",
          "items": [
            {
              "type": "boolean"
            }
          ],
          "additionalProperties": false,
          "pbj": {
            "type": "boolean",
            "rule": "list"
          }
        },
        "date_vals": {
          "type": "array",
          "items": [
            {
              "type": "object",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          ],
          "additionalProperties": false,
          "pbj": {
            "type": "date",
            "rule": "list"
          }
        },
        "int_vals": {
          "type": "array",
          "items": [
            {
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 4294967295
            }
          ],
          "additionalProperties": false,
          "pbj": {
            "type": "int",
            "rule": "list"
          }
        },
        "string_vals": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 255
            }
          ],
          "additionalProperties": false,
          "pbj": {
            "type": "string",
            "rule": "list"
          }
        }
      },
      "required": [
        "_schema",
        "name"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\..\\gdbots\\geo\\address\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:geo::address:1-0-0"
        },
        "geo_hash": {
          "type": "string",
          "pattern": "^\\w+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "geo_point": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "pattern": "^Point$"
            },
            "coordinates": {
              "type": "array",
              "items": [
                {
                  "required": true,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180
                },
                {
                  "required": true,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90
                }
              ]
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "additionalProperties": false,
          "pbj": {
            "type": "geo-point",
            "rule": "single"
          }
        },
        "is_verified": {
          "type": "boolean",
          "pbj": {
            "type": "boolean",
            "rule": "single"
          }
        },
        "street1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "street2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "po_box": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "city": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "region": {
          "type": "string",
          "pattern": "^[A-Z0-9]{2}$",
          "description": "A two letter alpha or numeric code indicating the region, e.g. \"CA\". @link http://www.maxmind.com/download/geoip/misc/region_codes.csv",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "region_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 150,
          "description": "The full name of the region, e.g. \"California\".",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "postal_code": {
          "type": "string",
          "pattern": "^[\\w\\s-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "country": {
          "type": "string",
          "pattern": "^[A-Z]{2}$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "continent": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\..\\gdbots\\geo\\address\\1-0-1.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:geo::address:1-0-1"
        },
        "geo_hash": {
          "type": "string",
          "pattern": "^\\w+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "geo_point": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "pattern": "^Point$"
            },
            "coordinates": {
              "type": "array",
              "items": [
                {
                  "required": true,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180
                },
                {
                  "required": true,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90
                }
              ]
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "additionalProperties": false,
          "pbj": {
            "type": "geo-point",
            "rule": "single"
          }
        },
        "verified": {
          "type": "boolean",
          "description": "Indicates if a verification has been run on this address.",
          "pbj": {
            "type": "boolean",
            "rule": "single"
          }
        },
        "is_verified": {
          "type": "boolean",
          "description": "Indicates if this is a valid adddress or not. Generally only true if the verified field is also true.",
          "pbj": {
            "type": "boolean",
            "rule": "single"
          }
        },
        "street1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "street2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "po_box": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "city": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "region": {
          "type": "string",
          "pattern": "^[A-Z0-9]{2}$",
          "description": "A two letter alpha or numeric code indicating the region, e.g. \"CA\". @link http://www.maxmind.com/download/geoip/misc/region_codes.csv",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "region_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 150,
          "description": "The full name of the region, e.g. \"California\".",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "postal_code": {
          "type": "string",
          "pattern": "^[\\w\\s-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "country": {
          "type": "string",
          "pattern": "^[A-Z]{2}$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "continent": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\..\\gdbots\\geo\\address\\1-0-2.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:geo::address:1-0-2"
        },
        "geo_hash": {
          "type": "string",
          "pattern": "^\\w+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "geo_point": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "pattern": "^Point$"
            },
            "coordinates": {
              "type": "array",
              "items": [
                {
                  "required": true,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180
                },
                {
                  "required": true,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90
                }
              ]
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "additionalProperties": false,
          "pbj": {
            "type": "geo-point",
            "rule": "single"
          }
        },
        "verified": {
          "type": "boolean",
          "description": "Indicates if a verification has been run on this address.",
          "pbj": {
            "type": "boolean",
            "rule": "single"
          }
        },
        "is_verified": {
          "type": "boolean",
          "description": "Indicates if this is a valid adddress or not. Generally only true if the verified field is also true.",
          "pbj": {
            "type": "boolean",
            "rule": "single"
          }
        },
        "street1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "street2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "po_box": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "city": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "county": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "region": {
          "type": "string",
          "pattern": "^[A-Z0-9]{2}$",
          "description": "A two letter alpha or numeric code indicating the region, e.g. \"CA\". @link http://www.maxmind.com/download/geoip/misc/region_codes.csv",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "region_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 150,
          "description": "The full name of the region, e.g. \"California\".",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "postal_code": {
          "type": "string",
          "pattern": "^[\\w\\s-]+$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "country": {
          "type": "string",
          "pattern": "^[A-Z]{2}$",
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        },
        "continent": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "pbj": {
            "type": "string",
            "rule": "single"
          }
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}