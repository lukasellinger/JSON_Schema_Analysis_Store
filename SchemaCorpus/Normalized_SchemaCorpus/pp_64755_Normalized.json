{
  "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/observables/process.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "process",
  "description": "The Process Object represents common properties of an instance of a computer program as executed on an operating system.",
  "type": "object",
  "allOf": [
    {
      "$ref": "#/definitions/..\\common\\cyber-observable-core.json"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "The value of this property MUST be `process`.",
          "enum": [
            "process"
          ]
        },
        "id": {
          "title": "id",
          "pattern": "^process--"
        },
        "extensions": {
          "$ref": "#/definitions/process-extensions-dictionary",
          "description": "The Process Object defines the following extensions. In addition to these, producers MAY create their own. Extensions: windows-process-ext, windows-service-ext."
        },
        "is_hidden": {
          "type": "boolean",
          "description": "Specifies whether the process is hidden."
        },
        "pid": {
          "type": "integer",
          "description": "Specifies the Process ID, or PID, of the process."
        },
        "created": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies the date/time at which the process was created."
        },
        "cwd": {
          "type": "string",
          "description": "Specifies the current working directory of the process."
        },
        "command_line": {
          "type": "string",
          "description": "Specifies the full command line used in executing the process, including the process name (which may be specified individually via the binary_ref.name property) and any arguments."
        },
        "environment_variables": {
          "$ref": "#/definitions/..\\common\\dictionary.json",
          "description": "Specifies the list of environment variables associated with the process as a dictionary."
        },
        "opened_connection_refs": {
          "type": "array",
          "description": "Specifies the list of network connections opened by the process, as a reference to one or more Network Traffic Objects.",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "creator_user_ref": {
          "description": "Specifies the user that created the process, as a reference to a User Account Object.",
          "type": "string"
        },
        "image_ref": {
          "description": "Specifies the executable binary that was executed as the process image, as a reference to a File Object.",
          "type": "string"
        },
        "parent_ref": {
          "description": "Specifies the other process that spawned (i.e. is the parent of) this one, as represented by a Process Object.",
          "type": "string"
        },
        "child_refs": {
          "type": "array",
          "description": "Specifies the other processes that were spawned by (i.e. children of) this process, as a reference to one or more other Process Objects.",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    }
  ],
  "anyOf": [
    {
      "required": [
        "extensions"
      ]
    },
    {
      "required": [
        "is_hidden"
      ]
    },
    {
      "required": [
        "pid"
      ]
    },
    {
      "required": [
        "name"
      ]
    },
    {
      "required": [
        "created"
      ]
    },
    {
      "required": [
        "cwd"
      ]
    },
    {
      "required": [
        "arguments"
      ]
    },
    {
      "required": [
        "command_line"
      ]
    },
    {
      "required": [
        "environment_variables"
      ]
    },
    {
      "required": [
        "opened_connection_refs"
      ]
    },
    {
      "required": [
        "creator_user_ref"
      ]
    },
    {
      "required": [
        "image_ref"
      ]
    },
    {
      "required": [
        "parent_ref"
      ]
    },
    {
      "required": [
        "child_refs"
      ]
    }
  ],
  "definitions": {
    "process-extensions-dictionary": {
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\dictionary.json"
        }
      ],
      "patternProperties": {
        "^windows-process-ext$": {
          "type": "object",
          "description": "The Windows Process extension specifies a default extension for capturing properties specific to Windows processes.",
          "allOf": [
            {
              "properties": {
                "aslr_enabled": {
                  "type": "boolean",
                  "description": "Specifies whether Address Space Layout Randomization (ASLR) is enabled for the process."
                },
                "dep_enabled": {
                  "type": "boolean",
                  "description": "Specifies whether Data Execution Prevention (DEP) is enabled for the process."
                },
                "priority": {
                  "type": "string",
                  "description": "Specifies the current priority class of the process in Windows."
                },
                "owner_sid": {
                  "type": "string",
                  "description": "Specifies the Security ID (SID) value of the owner of the process."
                },
                "window_title": {
                  "type": "string",
                  "description": "Specifies the title of the main window of the process."
                },
                "startup_info": {
                  "$ref": "#/definitions/startup-info-dictionary",
                  "description": "Specifies the STARTUP_INFO struct used by the process, as a dictionary."
                },
                "integrity_level": {
                  "$ref": "#/definitions/windows-integrity-level-enum",
                  "description": "Specifies the Windows integrity level, or trustworthiness, of the process."
                }
              }
            },
            {
              "anyOf": [
                {
                  "required": [
                    "aslr_enabled"
                  ]
                },
                {
                  "required": [
                    "dep_enabled"
                  ]
                },
                {
                  "required": [
                    "priority"
                  ]
                },
                {
                  "required": [
                    "owner_sid"
                  ]
                },
                {
                  "required": [
                    "window_title"
                  ]
                },
                {
                  "required": [
                    "startup_info"
                  ]
                }
              ]
            }
          ]
        },
        "^windows-service-ext$": {
          "type": "object",
          "description": "The Windows Service extension specifies a default extension for capturing properties specific to Windows services.",
          "properties": {
            "service_name": {
              "type": "string",
              "description": "Specifies the name of the service."
            },
            "descriptions": {
              "type": "array",
              "description": "Specifies the descriptions defined for the service.",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "display_name": {
              "type": "string",
              "description": "Specifies the displayed name of the service in Windows GUI controls."
            },
            "group_name": {
              "type": "string",
              "description": "Specifies the name of the load ordering group of which the service is a member."
            },
            "start_type": {
              "type": "string",
              "description": "Specifies the start options defined for the service. windows-service-start-enum",
              "enum": [
                "SERVICE_AUTO_START",
                "SERVICE_BOOT_START",
                "SERVICE_DEMAND_START",
                "SERVICE_DISABLED",
                "SERVICE_SYSTEM_ALERT"
              ]
            },
            "service_dll_refs": {
              "type": "array",
              "description": "Specifies the DLLs loaded by the service, as a reference to one or more File Objects.",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "service_type": {
              "type": "string",
              "description": "Specifies the type of the service. windows-service-enum",
              "enum": [
                "SERVICE_KERNEL_DRIVER",
                "SERVICE_FILE_SYSTEM_DRIVER",
                "SERVICE_WIN32_OWN_PROCESS",
                "SERVICE_WIN32_SHARE_PROCESS"
              ]
            },
            "service_status": {
              "type": "string",
              "description": "Specifies the current status of the service. windows-service-status-enum",
              "enum": [
                "SERVICE_CONTINUE_PENDING",
                "SERVICE_PAUSE_PENDING",
                "SERVICE_PAUSED",
                "SERVICE_RUNNING",
                "SERVICE_START_PENDING",
                "SERVICE_STOP_PENDING",
                "SERVICE_STOPPED"
              ]
            }
          },
          "anyOf": [
            {
              "required": [
                "service_name"
              ]
            },
            {
              "required": [
                "descriptions"
              ]
            },
            {
              "required": [
                "display_name"
              ]
            },
            {
              "required": [
                "group_name"
              ]
            },
            {
              "required": [
                "start_type"
              ]
            },
            {
              "required": [
                "service_dll_refs"
              ]
            },
            {
              "required": [
                "service_type"
              ]
            },
            {
              "required": [
                "service_status"
              ]
            }
          ]
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/..\\common\\dictionary.json",
        "description": "Custom file extension"
      }
    },
    "startup-info-dictionary": {
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\dictionary.json"
        }
      ],
      "patternProperties": {
        "^lpDesktop|lpTitle|dwFillAttribute|dwFlags|wShowWindow|hStdInput|hStdOutput|hStdError$": {
          "type": "string"
        },
        "^lpReserved|lpReserved2$": {
          "type": "null"
        },
        "^cb|dwX|dwY|dwXSize|dwYSize|dwXCountChars|dwYCountChars$": {
          "type": "integer"
        },
        "^cbReserved2$": {
          "type": "integer",
          "minimum": 0,
          "maximum": 0
        }
      },
      "additionalProperties": false
    },
    "windows-integrity-level-enum": {
      "type": "string",
      "enum": [
        "low",
        "medium",
        "high",
        "system"
      ]
    },
    "..\\common\\cyber-observable-core.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "cyber-observable-core",
      "description": "Common properties and behavior across all Cyber Observable Objects.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-?$",
          "minLength": 3,
          "maxLength": 250,
          "description": "Indicates that this object is an Observable Object. The value of this property MUST be a valid Observable Object type name, but to allow for custom objects this has been removed from the schema.",
          "not": {
            "enum": [
              "action"
            ]
          }
        },
        "spec_version": {
          "type": "string",
          "enum": [
            "2.0",
            "2.1"
          ],
          "description": "The version of the STIX specification used to represent the content in this cyber-observable."
        },
        "object_marking_refs": {
          "type": "array",
          "description": "The list of marking-definition objects to be applied to this object.",
          "items": {
            "$ref": "#/definitions/..\\common\\identifier.json"
          },
          "minItems": 1
        },
        "granular_markings": {
          "type": "array",
          "description": "The set of granular markings that apply to this object.",
          "items": {
            "$ref": "#/definitions/..\\common\\granular-marking.json"
          },
          "minItems": 1
        },
        "defanged": {
          "type": "boolean",
          "description": "Defines whether or not the data contained within the object has been defanged."
        },
        "id": {
          "$ref": "#/definitions/..\\common\\identifier.json",
          "description": "Specifies the identifier of the observable object, as a string."
        },
        "extensions": {
          "description": "Specifies any extensions of the object, as a dictionary.",
          "type": "object",
          "minProperties": 1,
          "patternProperties": {
            "^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-ext$": {
              "type": "object",
              "minProperties": 1,
              "allOf": [
                {
                  "$ref": "#/definitions/..\\common\\properties.json"
                }
              ]
            },
            "^extension-definition--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
              "allOf": [
                {
                  "$ref": "#/definitions/..\\common\\extension.json"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\properties.json"
        }
      ],
      "not": {
        "anyOf": [
          {
            "required": [
              "severity"
            ]
          },
          {
            "required": [
              "action"
            ]
          },
          {
            "required": [
              "username"
            ]
          },
          {
            "required": [
              "phone_numbers"
            ]
          }
        ]
      },
      "required": [
        "type",
        "id"
      ]
    },
    "..\\common\\identifier.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "identifier",
      "description": "Represents identifiers across the CTI specifications. The format consists of the name of the top-level object being identified, followed by two dashes (--), followed by a UUIDv4.",
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]+[a-z0-9]--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    },
    "..\\common\\granular-marking.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "granular-marking",
      "description": "The granular-marking type defines how the list of marking-definition objects referenced by the marking_refs property to apply to a set of content identified by the list of selectors in the selectors property.",
      "type": "object",
      "properties": {
        "selectors": {
          "type": "array",
          "description": "A list of selectors for content contained within the STIX object in which this property appears.",
          "items": {
            "type": "string",
            "pattern": "^([a-z0-9_-]{3,249}(\\.(\\[\\d+\\]|[a-z0-9_-]{1,250}))*|id)$"
          },
          "minItems": 1
        },
        "lang": {
          "type": "string",
          "description": "Identifies the language of the text identified by this marking."
        },
        "marking_ref": {
          "allOf": [
            {
              "$ref": "#/definitions/..\\common\\identifier.json"
            },
            {
              "pattern": "^marking-definition--",
              "description": "The marking_ref property specifies the ID of the marking-definition object that describes the marking."
            }
          ]
        }
      },
      "required": [
        "selectors",
        "marking_ref"
      ]
    },
    "..\\common\\properties.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "properties",
      "description": "Rules for custom properties",
      "patternProperties": {
        "^[a-z][a-z0-9_]{0,245}_bin$": {
          "$ref": "#/definitions/..\\common\\binary.json"
        },
        "^[a-z][a-z0-9_]{0,245}_hex$": {
          "$ref": "#/definitions/..\\common\\hex.json"
        },
        "^([a-z][a-z0-9_]{2,249})|id$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "..\\common\\binary.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "binary",
      "description": "The ​binary data type represents a sequence of bytes. In order to allow pattern matching on custom objects, for all properties that use the binary type, the property name MUST end with \u0027_bin\u0027. The JSON MTI serialization represents this as a base64-­encoded string as specified in RFC4648​. Other serializations SHOULD use a native binary type, if available.",
      "type": "string",
      "pattern": "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}\u003d|[A-Za-z0-9+/]{2}\u003d\u003d)$"
    },
    "..\\common\\hex.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "hex",
      "description": "The hex data type encodes an array of octets (8-bit bytes) as hexadecimal. The string MUST consist of an even number of hexadecimal characters, which are the digits \u00270\u0027 through \u00279\u0027 and the letters \u0027a\u0027 through \u0027f\u0027.  In order to allow pattern matching on custom objects, all properties that use the hex type, the property name MUST end with \u0027_hex\u0027.",
      "type": "string",
      "pattern": "^([a-fA-F0-9]{2})+$"
    },
    "..\\common\\extension.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "extension_type": {
          "description": "The type of extension.",
          "$ref": "#/definitions/..\\common\\extension.json_definitions_extension-type-enum"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\properties.json"
        }
      ],
      "required": [
        "extension_type"
      ],
      "definitions": {
        "extension-type-enum": {
          "type": "string",
          "enum": [
            "new-sdo",
            "new-sco",
            "new-sro",
            "property-extension",
            "toplevel-property-extension"
          ]
        }
      }
    },
    "..\\common\\extension.json_definitions_extension-type-enum": {
      "type": "string",
      "enum": [
        "new-sdo",
        "new-sco",
        "new-sro",
        "property-extension",
        "toplevel-property-extension"
      ]
    },
    "..\\common\\timestamp.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "timestamp",
      "description": "Represents timestamps across the CTI specifications. The format is an RFC3339 timestamp, with a required timezone specification of \u0027Z\u0027.",
      "type": "string",
      "pattern": "^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?Z$"
    },
    "..\\common\\dictionary.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "dictionary",
      "description": "A dictionary captures a set of key/value pairs",
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        "^[a-zA-Z0-9_-]{0,250}$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    }
  }
}