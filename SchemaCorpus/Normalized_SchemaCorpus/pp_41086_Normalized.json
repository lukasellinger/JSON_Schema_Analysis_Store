{
  "id": "testcase.json",
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "Testcase",
  "description": "A single test case",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of this testcase/scenario"
    },
    "assertion": {
      "type": "string",
      "description": "Description of what this testcase asserts"
    },
    "inputs": {
      "description": "The inputs send to the fixture input ports, or a sequence of such inputs",
      "oneOf": [
        {
          "type": "object"
        },
        {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      ]
    },
    "expect": {
      "description": "Expected data on fixture output ports.\nCan either be an object, or a sequence of such objects.\n",
      "oneOf": [
        {
          "$ref": "#/definitions/outputdata.json"
        },
        {
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/outputdata.json"
            }
          ]
        }
      ]
    },
    "timeout": {
      "type": "number",
      "description": "Timeout (in milliseconds). Overrides that set in the suite",
      "default": 2000
    },
    "skip": {
      "type": "string",
      "description": "Flag to skip testcase.\nShould be a description of the reason for skipping.\n"
    }
  },
  "required": [
    "name",
    "assertion",
    "inputs",
    "expect"
  ],
  "definitions": {
    "outputdata.json": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Output data",
      "description": "Data expected in a testcase.\nEach key refers to a port, and the value is a description of the expected message on that port.\nThere can be one expectation (check) on each message, or an array of them.\n",
      "type": "object",
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/expectation.json"
          },
          {
            "$ref": "#/definitions/testsuites.json"
          }
        ]
      }
    },
    "expectation.json": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Expectation",
      "description": "An expectation on data.",
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/base.json_definitions_JsonPath",
          "description": "JSONPath to run messages data through. Result is passed to assertion predicate."
        },
        "equals": {
          "description": "Strict equality"
        },
        "above": {
          "description": "Greater than (\u003e)",
          "type": "number"
        },
        "below": {
          "description": "Less than than (\u003c)",
          "type": "number"
        },
        "type": {
          "description": "JSON type",
          "type": "string"
        },
        "haveKeys": {
          "description": "Object has only these keys",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeKeys": {
          "description": "Object has at least these keys",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contains": {
          "description": "String or array contains substring/item"
        }
      }
    },
    "base.json_definitions_JsonPath": {
      "type": "string",
      "description": "JsonPath, see http://goessner.net/articles/JsonPath/",
      "format": "jsonpath",
      "example": "products.book[2]"
    },
    "testsuites.json": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Expectation list",
      "description": "Array of Expectation",
      "type": "array",
      "items": {
        "$ref": "#/definitions/expectation.json"
      }
    }
  }
}