{
  "id": "http://schemas.triniti.io/json-schema/triniti/notify/mixin/sms-notification/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "_id": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "pbj": {
        "type": "identifier",
        "rule": "single",
        "overridable": true
      }
    },
    "status": {
      "type": "string",
      "default": "draft",
      "enum": [
        "unknown",
        "published",
        "scheduled",
        "pending",
        "draft",
        "expired",
        "archived",
        "deleted"
      ],
      "pbj": {
        "type": "string-enum",
        "rule": "single"
      }
    },
    "etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "created_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single"
      }
    },
    "creator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user.",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "updated_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single",
        "useTypeDefault": false
      }
    },
    "updater_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\"",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "last_event_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\"",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "title": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "app_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the app this notification is being sent to.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "content_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the content this notification will include.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "send_status": {
      "type": "string",
      "default": "draft",
      "enum": [
        "unknown",
        "draft",
        "scheduled",
        "sent",
        "canceled",
        "failed"
      ],
      "pbj": {
        "type": "string-enum",
        "rule": "single"
      }
    },
    "send_on_publish": {
      "type": "boolean",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "send_at": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "sent_at": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "body": {
      "type": "string",
      "minLength": 0,
      "maxLength": 2000,
      "description": "The body of the notification to use (format depends on app/platform). If present this value should take precedence over the body derived from content_ref.",
      "pbj": {
        "type": "text",
        "rule": "single"
      }
    },
    "notifier_result": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/notifier-result"
        }
      ],
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    }
  },
  "required": [
    "_id"
  ],
  "definitions": {
    "notifier-result": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\notifier-result\\1-0-0.json"
        }
      ]
    },
    "..\\..\\notifier-result\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:triniti:notify::notifier-result:1-0-0"
        },
        "tags": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
              "type": "string",
              "pattern": "^[\\w\\/\\.:-]+$"
            }
          },
          "additionalProperties": false,
          "description": "Tags is a map that categorizes data or tracks references in external systems. The tags names should be consistent and descriptive, e.g. fb_user_id:123, salesforce_customer_id:456."
        },
        "ok": {
          "type": "boolean",
          "default": true
        },
        "code": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "error_name": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        },
        "error_message": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535
        },
        "raw_response": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535,
          "description": "When a notification is sent the platform/vendor often responds with a payload that describes the result. This field should contain a (de)serializable string, JSON is preferred."
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    }
  },
  "additionalProperties": true
}