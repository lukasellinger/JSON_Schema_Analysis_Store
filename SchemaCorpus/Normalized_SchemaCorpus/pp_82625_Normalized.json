{
  "id": "http://schemas.triniti.io/json-schema/triniti/apollo/mixin/vote-casted/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "event_id": {
      "type": "string",
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "pbj": {
        "type": "time-uuid",
        "rule": "single"
      }
    },
    "occurred_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single"
      }
    },
    "ctx_causator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_correlator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_user_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/app"
        }
      ],
      "description": "The \"ctx_app\" refers to the application used to send the command which in turn resulted in this event being published.",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/cloud"
        }
      ],
      "description": "The \"ctx_cloud\" is usually copied from the command that resulted in this event being published. This means the value most likely refers to the cloud that received the command originally, not the machine processing the event.",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_ip": {
      "type": "string",
      "format": "ipv4",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "ipv4",
        "overridable": true
      }
    },
    "ctx_ipv6": {
      "type": "string",
      "format": "ipv6",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "ipv6",
        "overridable": true
      }
    },
    "ctx_ua": {
      "type": "string",
      "minLength": 0,
      "maxLength": 65535,
      "pbj": {
        "type": "text",
        "rule": "single",
        "overridable": true
      }
    },
    "poll_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "answer_id": {
      "type": "string",
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "pbj": {
        "type": "uuid",
        "rule": "single"
      }
    },
    "s256": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 255,
      "description": "\"s256\" means shard 256. Used to distribute read/write from storage and speed up replay/reindex processes. It can also be used to distribute workload in front end user interfaces or notifications (like isles in a grocery store). This value should NOT change once set.",
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "s32": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 255,
      "description": "\"s32\" means shard 32. See field \"s256\" for explanation.",
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "s16": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 255,
      "description": "\"s16\" means shard 16. See field \"s256\" for explanation.",
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    }
  },
  "required": [
    "event_id",
    "poll_ref"
  ],
  "definitions": {
    "app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json"
        }
      ]
    },
    "cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json"
        }
      ]
    },
    "..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::app:1-0-0"
        },
        "_id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "vendor": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "name": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "version": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "build": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "variant": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::cloud:1-0-0"
        },
        "provider": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "region": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "zone": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "instance_id": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "instance_type": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    }
  },
  "additionalProperties": true
}