{
  "id": "http://schemas.triniti.io/json-schema/triniti/ovp.kaltura/command/sync-entry/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "_schema": {
      "type": "string",
      "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
      "default": "pbj:triniti:ovp.kaltura:command:sync-entry:1-0-0"
    },
    "command_id": {
      "type": "string",
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "pbj": {
        "type": "time-uuid",
        "rule": "single"
      }
    },
    "occurred_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single"
      }
    },
    "expected_etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$",
      "description": "Used to perform optimistic concurrency control. @link https://en.wikipedia.org/wiki/HTTP_ETag",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "ctx_retries": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 255,
      "description": "The \"ctx_retries\" field is used to keep track of how many attempts were made to process this command. In some cases, the service or transport that handles the command may be down or an optimistic check has failed and is being retried.",
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "ctx_causator": {
      "type": "object",
      "description": "The \"ctx_causator\" is the actual causator object that \"ctx_causator_ref\" refers to. In some cases it\u0027s useful for command handlers to copy the causator into the command. For example, when a node is being updated we may want to know what the node will be after the update. We can derive this via the causator instead of requesting the node and engaging a race condition.",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_causator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_correlator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_user_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/app"
        }
      ],
      "description": "The \"ctx_app\" refers to the application used to send the command. This is different from ctx_ua (user_agent) because the agent used (Safari, Firefox) is not necessarily the app used (cms, iOS app, website)",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/cloud"
        }
      ],
      "description": "The \"ctx_cloud\" is set by the server receiving the command and is generally only used internally for tracking and performance monitoring.",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_ip": {
      "type": "string",
      "format": "ipv4",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "ipv4",
        "overridable": true
      }
    },
    "ctx_ipv6": {
      "type": "string",
      "format": "ipv6",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "ipv6",
        "overridable": true
      }
    },
    "ctx_ua": {
      "type": "string",
      "minLength": 0,
      "maxLength": 65535,
      "pbj": {
        "type": "text",
        "rule": "single",
        "overridable": true
      }
    },
    "entry_id": {
      "type": "string",
      "pattern": "^[\\w-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "partner_id": {
      "type": "string",
      "pattern": "^[\\w-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "entry": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/entry"
        }
      ],
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "flavors": {
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/flavor"
        }
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message",
        "rule": "list"
      }
    },
    "captions": {
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/caption"
        }
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message",
        "rule": "list"
      }
    }
  },
  "required": [
    "_schema",
    "command_id"
  ],
  "definitions": {
    "app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json"
        }
      ]
    },
    "cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json"
        }
      ]
    },
    "entry": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\entry\\1-0-0.json"
        }
      ]
    },
    "flavor": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\flavor\\1-0-0.json"
        }
      ]
    },
    "caption": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\caption\\1-0-0.json"
        }
      ]
    },
    "..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::app:1-0-0"
        },
        "_id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "vendor": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "name": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "version": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "build": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "variant": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::cloud:1-0-0"
        },
        "provider": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "region": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "zone": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "instance_id": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "instance_type": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\entry\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:triniti:ovp.kaltura::entry:1-0-0"
        },
        "entry_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535
        },
        "partner_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "user_id": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "creator_id": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "tags": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 255
            }
          ],
          "uniqueItems": true,
          "additionalProperties": false
        },
        "categories": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 255
            }
          ],
          "uniqueItems": true,
          "additionalProperties": false
        },
        "categories_ids": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "pattern": "^[\\w-]+$"
            }
          ],
          "uniqueItems": true,
          "additionalProperties": false
        },
        "categories_normalized": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 255
            }
          ],
          "uniqueItems": true,
          "additionalProperties": false
        },
        "status": {
          "type": "string",
          "enum": [
            "unknown",
            -2,
            -1,
            "virusScan.ScanFailure",
            0,
            "virusScan.Infected",
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ]
        },
        "moderation_status": {
          "type": "string",
          "enum": [
            "unknown",
            1,
            2,
            3,
            4,
            5,
            6
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "unknown",
            -1,
            "conference.CONFERENCE_ENTRY_SERVER",
            "externalMedia.externalMedia",
            1,
            2,
            5,
            6,
            7,
            8,
            10
          ]
        },
        "created_at": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "updated_at": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "rank": {
          "type": "number",
          "default": 0
        },
        "flavor_params_ids": {
          "type": "array",
          "items": [
            {
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 4294967295
            }
          ],
          "uniqueItems": true,
          "additionalProperties": false
        },
        "data_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
        },
        "download_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
        },
        "version": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "thumbnail_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "thumbnail_created_at": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "thumbnail_ext": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "thumbnail_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
        },
        "start_date": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "end_date": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "reference_id": {
          "type": "string",
          "pattern": "^[\\w\\.:,\\/-]+$"
        },
        "replacing_entry_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "replaced_entry_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "redirect_entry_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "root_entry_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "parent_entry_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "display_in_search": {
          "type": "string",
          "enum": [
            "unknown",
            -1,
            0,
            1,
            2
          ]
        },
        "plays": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 4294967295
        },
        "views": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 4294967295
        },
        "last_played_at": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "width": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "height": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "duration": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "duration_ms": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 16777215
        },
        "media_type": {
          "type": "string",
          "enum": [
            "unknown",
            1,
            2,
            5,
            201,
            202,
            203,
            204
          ]
        },
        "source_type": {
          "type": "string",
          "enum": [
            "unknown",
            "limeLight.LIVE_STREAM",
            "velocix.VELOCIX_LIVE",
            1,
            2,
            5,
            6,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            42
          ]
        },
        "metadata": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
              "type": "string",
              "minLength": 0,
              "maxLength": 65535
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\flavor\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:triniti:ovp.kaltura::flavor:1-0-0"
        },
        "entry_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "flavor_params_id": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 4294967295
        },
        "id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "width": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "height": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "bitrate": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "frame_rate": {
          "type": "number",
          "default": 0
        },
        "is_original": {
          "type": "boolean"
        },
        "is_web": {
          "type": "boolean"
        },
        "container_format": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "video_codec_id": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "enum": [
            "unknown",
            -1,
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ]
        },
        "language": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "is_default": {
          "type": "boolean"
        },
        "version": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "tags": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 255
            }
          ],
          "uniqueItems": true,
          "additionalProperties": false
        },
        "created_at": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "updated_at": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "size": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 4294967295
        },
        "file_ext": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535
        },
        "url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\caption\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:triniti:ovp.kaltura::caption:1-0-0"
        },
        "id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "entry_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "version": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "size": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 16777215
        },
        "file_ext": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "created_at": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "updated_at": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "deleted_at": {
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "language": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "language_code": {
          "type": "string",
          "pattern": "^\\w+$"
        },
        "is_default": {
          "type": "boolean"
        },
        "accuracy": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
        },
        "status": {
          "type": "string",
          "enum": [
            "unknown",
            -1,
            0,
            2,
            3,
            7,
            9
          ]
        },
        "format": {
          "type": "string",
          "enum": [
            "unknown",
            1,
            2,
            3,
            4
          ]
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}