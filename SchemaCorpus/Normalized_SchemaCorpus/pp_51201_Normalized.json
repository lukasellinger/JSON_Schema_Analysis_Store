{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "x509-certificate",
  "description": "The X509 Certificate Object represents the properties of an X.509 certificate.",
  "type": "object",
  "allOf": [
    {
      "$ref": "#/definitions/..\\common\\cyber-observable-core.json"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "The value of this property MUST be `x509-certificate`.",
          "enum": [
            "x509-certificate"
          ]
        },
        "is_self_signed": {
          "type": "boolean",
          "description": "Specifies whether the certificate is self-signed, i.e., whether it is signed by the same entity whose identity it certifies."
        },
        "hashes": {
          "$ref": "#/definitions/..\\common\\hashes-type.json",
          "description": "Specifies any hashes that were calculated for the entire contents of the certificate."
        },
        "version": {
          "type": "string",
          "description": "Specifies the version of the encoded certificate."
        },
        "serial_number": {
          "type": "string",
          "description": "Specifies the unique identifier for the certificate, as issued by a specific Certificate Authority."
        },
        "signature_algorithm": {
          "type": "string",
          "description": "Specifies the name of the algorithm used to sign the certificate."
        },
        "issuer": {
          "type": "string",
          "description": "Specifies the name of the Certificate Authority that issued the certificate."
        },
        "validity_not_before": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies the date on which the certificate validity period begins."
        },
        "validity_not_after": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies the date on which the certificate validity period ends."
        },
        "subject": {
          "type": "string",
          "description": "Specifies the name of the entity associated with the public key stored in the subject public key field of the certificate."
        },
        "subject_public_key_algorithm": {
          "type": "string",
          "description": "Specifies the name of the algorithm with which to encrypt data being sent to the subject."
        },
        "subject_public_key_modulus": {
          "type": "string",
          "description": "Specifies the modulus portion of the subject’s public RSA key."
        },
        "subject_public_key_exponent": {
          "type": "integer",
          "description": "Specifies the exponent portion of the subject’s public RSA key, as an integer."
        },
        "x509_v3_extensions": {
          "$ref": "#/definitions/x509-v3-extensions-type",
          "description": "Specifies any standard X.509 v3 extensions that may be used in the certificate."
        }
      }
    }
  ],
  "definitions": {
    "x509-v3-extensions-type": {
      "type": "object",
      "properties": {
        "basic_constraints": {
          "type": "string",
          "description": "Specifies a multi-valued extension which indicates whether a certificate is a CA certificate."
        },
        "name_constraints": {
          "type": "string",
          "description": "Specifies a namespace within which all subject names in subsequent certificates in a certification path MUST be located."
        },
        "policy_constraints": {
          "type": "string",
          "description": "Specifies any constraints on path validation for certificates issued to CAs."
        },
        "key_usage": {
          "type": "string",
          "description": "Specifies a multi-valued extension consisting of a list of names of the permitted key usages."
        },
        "extended_key_usage": {
          "type": "string",
          "description": "Specifies a list of usages indicating purposes for which the certificate public key can be used for."
        },
        "subject_key_identifier": {
          "type": "string",
          "description": "Specifies the identifier that provides a means of identifying certificates that contain a particular public key."
        },
        "authority_key_identifier": {
          "type": "string",
          "description": "Specifies the identifier that provides a means of identifying the public key corresponding to the private key used to sign a certificate."
        },
        "subject_alternative_name": {
          "type": "string",
          "description": "Specifies the additional identities to be bound to the subject of the certificate."
        },
        "issuer_alternative_name": {
          "type": "string",
          "description": "Specifies the additional identities to be bound to the issuer of the certificate."
        },
        "subject_directory_attributes": {
          "type": "string",
          "description": "Specifies the identification attributes (e.g., nationality) of the subject."
        },
        "crl_distribution_points": {
          "type": "string",
          "description": "Specifies how CRL information is obtained."
        },
        "inhibit_any_policy": {
          "type": "string",
          "description": "Specifies the number of additional certificates that may appear in the path before anyPolicy is no longer permitted."
        },
        "private_key_usage_period_not_before": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies the date on which the validity period begins for the private key, if it is different from the validity period of the certificate."
        },
        "private_key_usage_period_not_after": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies the date on which the validity period ends for the private key, if it is different from the validity period of the certificate."
        },
        "certificate_policies": {
          "type": "string",
          "description": "Specifies a sequence of one or more policy information terms, each of which consists of an object identifier (OID) and optional qualifiers."
        },
        "policy_mappings": {
          "type": "string",
          "description": "Specifies one or more pairs of OIDs; each pair includes an issuerDomainPolicy and a subjectDomainPolicy"
        }
      }
    },
    "..\\common\\cyber-observable-core.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "core",
      "description": "Common properties and behavior across all Cyber Observable Objects.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^\\-?[a-z0-9]+(-[a-z0-9]+)*\\-?$",
          "minLength": 3,
          "maxLength": 250,
          "description": "Indicates that this object is an Observable Object. The value of this property MUST be a valid Observable Object type name, but to allow for custom objects this has been removed from the schema.",
          "not": {
            "enum": [
              "action"
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Specifies a textual description of the Object."
        },
        "extensions": {
          "$ref": "#/definitions/..\\common\\dictionary.json",
          "description": "Specifies any extensions of the object, as a dictionary."
        }
      },
      "patternProperties": {
        "^[a-z0-9_]{3,250}$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false,
      "not": {
        "anyOf": [
          {
            "required": [
              "action"
            ]
          }
        ]
      },
      "required": [
        "type"
      ]
    },
    "..\\common\\dictionary.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "dictionary",
      "description": "A dictionary captures a set of key/value pairs",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_-]{3,256}$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "..\\common\\hashes-type.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "dictionary",
      "description": "A dictionary captures a set of key/value pairs",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_-]{1,}$": {
          "type": "string",
          "description": "Custom hash key"
        },
        "^MD5$": {
          "type": "string",
          "description": "Specifies the MD5 message digest algorithm.",
          "pattern": "^[a-fA-F0-9]{32}$"
        },
        "^MD6$": {
          "type": "string",
          "description": "Specifies the MD6 message digest algorithm.",
          "pattern": "^[a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{56}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128}$"
        },
        "^RIPEMD-160$": {
          "type": "string",
          "description": "Specifies the RIPEMD­-160 (R​ACE​ Integrity Primitives Evaluation Message Digest)​ cryptographic hash function.",
          "pattern": "^[a-fA-F0-9]{40}$"
        },
        "^SHA-1$": {
          "type": "string",
          "description": "Specifies the SHA­-1 (secure-­hash algorithm 1) cryptographic hash function.",
          "pattern": "^[a-fA-F0-9]{40}$"
        },
        "^SHA-224$": {
          "type": "string",
          "description": "Specifies the SHA-­224 cryptographic hash function (part of the SHA­2 family).",
          "pattern": "^[a-fA-F0-9]{56}$"
        },
        "^SHA-256$": {
          "type": "string",
          "description": "Specifies the SHA-­256 cryptographic hash function (part of the SHA­2 family).",
          "pattern": "^[a-fA-F0-9]{64}$"
        },
        "^SHA-384$": {
          "type": "string",
          "description": "Specifies the SHA-­384 cryptographic hash function (part of the SHA­2 family).",
          "pattern": "^[a-fA-F0-9]{96}$"
        },
        "^SHA-512$": {
          "type": "string",
          "description": "Specifies the SHA-­512 cryptographic hash function (part of the SHA­2 family).",
          "pattern": "^[a-fA-F0-9]{128}$"
        },
        "^SHA3-224$": {
          "type": "string",
          "description": "Specifies the SHA3-224 cryptographic hash function.",
          "pattern": "^[a-fA-F0-9]{56}$"
        },
        "^SHA3-256$": {
          "type": "string",
          "description": "Specifies the SHA3-256 cryptographic hash function.",
          "pattern": "^[a-fA-F0-9]{64}$"
        },
        "^SHA3-384$": {
          "type": "string",
          "description": "Specifies the SHA3-384 cryptographic hash function.",
          "pattern": "^[a-fA-F0-9]{96}$"
        },
        "^SHA3-512$": {
          "type": "string",
          "description": "Specifies the SHA3-512 cryptographic hash function.",
          "pattern": "^[a-fA-F0-9]{128}$"
        },
        "^ssdeep$": {
          "type": "string",
          "description": "Specifies the ssdeep fuzzy hashing algorithm.",
          "pattern": "^[a-zA-Z0-9/+:.]{1,128}$"
        },
        "^WHIRLPOOL$": {
          "type": "string",
          "description": "Specifies the whirlpool cryptographic hash function",
          "pattern": "^[a-fA-F0-9]{128}$"
        }
      },
      "additionalProperties": false
    },
    "..\\common\\timestamp.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "timestamp",
      "description": "Represents timestamps across the CTI specifications. The format is an RFC3339 timestamp, with a required timezone specification of \u0027Z\u0027.",
      "type": "string",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?Z$"
    }
  }
}