{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://raw.githubusercontent.com/washingtonpost/ans-schema/master/src/main/resources/schema/ans/0.10.4/story_operation.json",
  "description": "An operation on a story",
  "additionalProperties": false,
  "type": "object",
  "properties": {
    "type": {
      "description": "Identifies this as an ANS operation",
      "type": "string",
      "enum": [
        "story_operation"
      ]
    },
    "operation": {
      "type": "string",
      "description": "The identifier of the operation being performed",
      "enum": [
        "create",
        "update",
        "delete",
        "publish_edition",
        "unpublish_edition"
      ]
    },
    "date": {
      "description": "When the operation should be considered performed",
      "type": "string",
      "format": "date-time"
    },
    "display_date": {
      "description": "The date that is displayed with this story to readers.",
      "type": "string",
      "format": "date-time"
    },
    "publish_date": {
      "description": "When the story was published.",
      "type": "string",
      "format": "date-time"
    },
    "submit_date": {
      "description": "When this operation was submitted to Content API. Used for latency checking.",
      "type": "string",
      "format": "date-time"
    },
    "story_id": {
      "type": "string",
      "description": "The id of the story being operated"
    },
    "revision_id": {
      "type": "string",
      "description": "The id of the specific revision that this operation occurs on, if any"
    },
    "editions": {
      "type": "array",
      "description": "A list of identifiers of editions that are changed in this operation, if any",
      "items": {
        "type": "string"
      }
    },
    "branch": {
      "type": "string",
      "description": "The name of the branch within Story API that this operation occurs on, if any"
    },
    "version": {
      "type": "string",
      "description": "The version of ANS this Story is written in"
    },
    "priority": {
      "$ref": "#/definitions/traits\\trait_priority.json"
    },
    "app_name": {
      "$ref": "#/definitions/traits\\trait_app_name.json"
    },
    "story": {
      "description": "The story object being created/updated/deleted/published/unpublished",
      "$ref": "#/definitions/story.json"
    }
  },
  "required": [
    "type",
    "operation",
    "story_id"
  ],
  "definitions": {
    "traits\\trait_priority.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Priority",
      "description": "The priority identifier of this operation. This is used by downstream consumers to make decisions about optimization. The value \u0027standard\u0027 indicates an operation generated from a UI or live update. The value \u0027ingestion\u0027 indicates an operation generated by a migration script or background import.  Note that this represents a request for priority consideration from event-generating apps and downstream applications are not obligated to honor it.",
      "type": "string",
      "enum": [
        "standard",
        "ingestion"
      ]
    },
    "traits\\trait_app_name.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Application Name",
      "description": "The name of the application that generated an operation. This is used by downstream consumers in conjunction with \u0027priority\u0027 to make decisions about optimization.",
      "type": "string"
    },
    "story.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "A story.",
      "description": "Holds attributes of an ANS story. In the Arc ecosystem, these are stored in the Story API. ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "story"
          ]
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "version": {
          "$ref": "#/definitions/traits\\trait_version.json"
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "channels": {
          "$ref": "#/definitions/traits\\trait_channel.json"
        },
        "alignment": {
          "$ref": "#/definitions/traits\\trait_alignment.json"
        },
        "language": {
          "$ref": "#/definitions/traits\\trait_locale.json"
        },
        "copyright": {
          "$ref": "#/definitions/traits\\trait_copyright.json"
        },
        "canonical_url": {
          "$ref": "#/definitions/traits\\trait_canonical_url.json"
        },
        "canonical_website": {
          "$ref": "#/definitions/traits\\trait_canonical_website.json"
        },
        "website": {
          "$ref": "#/definitions/traits\\trait_website.json"
        },
        "website_url": {
          "$ref": "#/definitions/traits\\trait_website_url.json"
        },
        "short_url": {
          "$ref": "#/definitions/traits\\trait_short_url.json"
        },
        "created_date": {
          "$ref": "#/definitions/traits\\trait_created_date.json"
        },
        "last_updated_date": {
          "$ref": "#/definitions/traits\\trait_last_updated_date.json"
        },
        "publish_date": {
          "$ref": "#/definitions/traits\\trait_publish_date.json"
        },
        "first_publish_date": {
          "$ref": "#/definitions/traits\\trait_first_publish_date.json"
        },
        "display_date": {
          "$ref": "#/definitions/traits\\trait_display_date.json"
        },
        "location": {
          "$ref": "#/definitions/traits\\trait_location.json"
        },
        "geo": {
          "$ref": "#/definitions/traits\\trait_geo.json"
        },
        "address": {
          "$ref": "#/definitions/traits\\trait_address.json"
        },
        "editor_note": {
          "$ref": "#/definitions/traits\\trait_editor_note.json"
        },
        "status": {
          "$ref": "#/definitions/traits\\trait_status.json"
        },
        "headlines": {
          "$ref": "#/definitions/traits\\trait_headlines.json"
        },
        "subheadlines": {
          "$ref": "#/definitions/traits\\trait_subheadlines.json"
        },
        "description": {
          "$ref": "#/definitions/traits\\trait_description.json"
        },
        "credits": {
          "$ref": "#/definitions/traits\\trait_credits.json"
        },
        "vanity_credits": {
          "$ref": "#/definitions/traits\\trait_vanity_credits.json"
        },
        "taxonomy": {
          "$ref": "#/definitions/traits\\trait_taxonomy.json"
        },
        "promo_items": {
          "$ref": "#/definitions/traits\\trait_promo_items.json"
        },
        "related_content": {
          "$ref": "#/definitions/traits\\trait_related_content.json"
        },
        "owner": {
          "$ref": "#/definitions/traits\\trait_owner.json"
        },
        "planning": {
          "$ref": "#/definitions/traits\\trait_planning.json"
        },
        "workflow": {
          "$ref": "#/definitions/traits\\trait_workflow.json"
        },
        "pitches": {
          "$ref": "#/definitions/traits\\trait_pitches.json"
        },
        "revision": {
          "$ref": "#/definitions/traits\\trait_revision.json"
        },
        "syndication": {
          "$ref": "#/definitions/traits\\trait_syndication.json"
        },
        "source": {
          "$ref": "#/definitions/traits\\trait_source.json"
        },
        "distributor": {
          "$ref": "#/definitions/traits\\trait_distributor.json"
        },
        "tracking": {
          "$ref": "#/definitions/traits\\trait_tracking.json"
        },
        "comments": {
          "$ref": "#/definitions/traits\\trait_comments.json"
        },
        "label": {
          "$ref": "#/definitions/traits\\trait_label.json"
        },
        "slug": {
          "$ref": "#/definitions/traits\\trait_slug.json"
        },
        "content_restrictions": {
          "$ref": "#/definitions/traits\\trait_content_restrictions.json"
        },
        "rendering_guides": {
          "$ref": "#/definitions/traits\\trait_rendering_guides.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "content_aliases": {
          "$ref": "#/definitions/traits\\trait_content_aliases.json"
        },
        "corrections": {
          "$ref": "#/definitions/traits\\trait_corrections.json"
        },
        "content_elements": {
          "$ref": "#/definitions/traits\\trait_content_elements.json"
        },
        "publishing": {
          "$ref": "#/definitions/traits\\trait_publishing.json"
        },
        "voice_transcripts": {
          "$ref": "#/definitions/traits\\trait_voice_transcripts.json"
        },
        "websites": {
          "$ref": "#/definitions/traits\\trait_websites.json"
        }
      },
      "required": [
        "type",
        "version"
      ]
    },
    "traits\\trait_id.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Globally Unique ID trait",
      "description": "A globally unique identifier of the content in the ANS repository.",
      "type": "string"
    },
    "traits\\trait_version.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Describes the ANS version of this object",
      "description": "The version of ANS that this object was serialized as, in major.minor.patch format.  For top-level content objects, this is a required trait.",
      "type": "string",
      "enum": [
        "0.10.4"
      ]
    },
    "traits\\trait_subtype.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Subtype or Template",
      "type": "string",
      "description": "A user-defined categorization method to supplement type. In Arc, this field is reserved for organization-defined purposes, such as selecting the PageBuilder template that should be used to render a document."
    },
    "traits\\trait_channel.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Channel trait",
      "description": "An optional list of output types for which this element should be visible",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "traits\\trait_alignment.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Alignment",
      "type": "string",
      "description": "A property used to determine horizontal positioning of a content element relative to the elements that immediately follow it in the element sequence.",
      "enum": [
        "left",
        "right",
        "center"
      ]
    },
    "traits\\trait_locale.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Locale",
      "description": "The primary language of the content. The value should follow IETF BCP47. (e.g. \u0027en\u0027, \u0027es-419\u0027, etc.) ",
      "type": "string"
    },
    "traits\\trait_copyright.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Copyright information",
      "description": "A copyright notice for the legal owner of this content. E.g., \u0027© 1996-2018 The Washington Post.\u0027 Format may vary between organizations.",
      "type": "string"
    },
    "traits\\trait_canonical_url.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Canonical URL",
      "description": "The relative URL to this document on the website specified by the `canonical_website` field. In the Arc ecosystem, this will be populated by the content api from the arc-canonical-url service if present based on the canonical_website. In conjunction with canonical_website, it can be used to determine the SEO canonical url or open graph url. In a multi-site context, this field may be different from the website_url field.",
      "type": "string"
    },
    "traits\\trait_canonical_website.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Canonical Website",
      "description": "The _id of the website from which this document was originally authored. In conjunction with canonical_url, it can be used to determine the SEO canonical url or open graph url. In a multi-site context, this field may be different from the website field.",
      "type": "string"
    },
    "traits\\trait_website.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Website",
      "description": "The _id of the website on which this document exists. This field is only available in Content API. If different from canonical_website, then this document was originally sourced from the canonical_website. Generated at fetch time by Content API.",
      "type": "string"
    },
    "traits\\trait_website_url.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Website URL",
      "description": "The relative URL to this document on the website specified by the `website` field. In a multi-site context, this is the url that is typically queried on when fetching by URL. It may be different than canonical_url. Generated at fetch time by Content API.",
      "type": "string"
    },
    "traits\\trait_short_url.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Short_Url",
      "description": "A url-shortened version of the canonical url.",
      "type": "string"
    },
    "traits\\trait_created_date.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Created Date",
      "description": "When the content was originally created (RFC3339-formatted). In the Arc ecosystem, this will be automatically generated for stories in the Story API.",
      "type": "string",
      "format": "date-time"
    },
    "traits\\trait_last_updated_date.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Last Updated Date",
      "description": "When the content was last updated (RFC3339-formatted).",
      "type": "string",
      "format": "date-time"
    },
    "traits\\trait_publish_date.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Publish_Date",
      "description": "When the story was published.",
      "type": "string",
      "format": "date-time"
    },
    "traits\\trait_first_publish_date.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "First Publish Date",
      "description": "When the story was first published.",
      "type": "string",
      "format": "date-time"
    },
    "traits\\trait_display_date.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Display_Date",
      "description": "The RFC3339-formatted dated time of the most recent date the story was (re)displayed on a public site.",
      "type": "string",
      "format": "date-time"
    },
    "traits\\trait_location.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Location related trait",
      "description": "A description of the location, useful if a full address or lat/long specification is overkill.",
      "type": "string"
    },
    "traits\\trait_geo.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Geo",
      "description": "Latitidue and Longitude of the content",
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      }
    },
    "traits\\trait_address.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Address",
      "description": "An Address following the convention of http://microformats.org/wiki/hcard",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "post_office_box": {
          "type": "string"
        },
        "extended_address": {
          "type": "string"
        },
        "street_address": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "country_name": {
          "type": "string"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        }
      },
      "dependencies": {
        "post_office_box": [
          "street_address"
        ],
        "extended_address": [
          "street_address"
        ]
      }
    },
    "traits\\trait_additional_properties.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Has additional properties",
      "description": "A grab-bag object for non-validatable data.",
      "type": "object",
      "additionalProperties": {}
    },
    "traits\\trait_editor_note.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Editor_Note",
      "description": "Additional information to be displayed near the content from the editor.",
      "type": "string"
    },
    "traits\\trait_status.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Status",
      "description": "Optional field to story story workflow related status (e.g. published/embargoed/etc)",
      "type": "string"
    },
    "traits\\trait_headlines.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Headlines",
      "description": "The headline(s) or title for this content.  The \u0027basic\u0027 key is required.",
      "type": "object",
      "$ref": "#/definitions/utils\\dictionary.json"
    },
    "utils\\dictionary.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "basic": {
          "type": "string"
        }
      },
      "patternProperties": {
        ".*": {
          "type": "string"
        }
      },
      "required": [
        "basic"
      ]
    },
    "traits\\trait_subheadlines.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Sub-Headlines",
      "description": "The sub-headline(s) for the content.",
      "type": "object",
      "$ref": "#/definitions/utils\\dictionary.json"
    },
    "traits\\trait_description.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Description",
      "description": "The descriptions, or blurbs, for the content.",
      "type": "object",
      "$ref": "#/definitions/utils\\dictionary.json"
    },
    "traits\\trait_credits.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Credit trait",
      "type": "object",
      "description": "A list of people and groups attributed to this content, keyed by type of contribution. In the Arc ecosystem, references in this list will be denormalized into author objects from the arc-author-service.",
      "properties": {
        "by": {
          "title": "By",
          "description": "The primary author(s) of this document. For a story, is is the writer or reporter. For an image, it is the photographer.",
          "type": "array",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/definitions/utils\\author.json"
              },
              {
                "$ref": "#/definitions/utils\\reference.json"
              }
            ]
          }
        },
        "photos_by": {
          "title": "Photos by",
          "description": "The photographer(s) of supplementary images included in this document, if it is a story. Note that if this document is an image, the photographer(s) should appear in the \u0027by\u0027 slot.",
          "type": "array",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/definitions/utils\\author.json"
              },
              {
                "$ref": "#/definitions/utils\\reference.json"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^[a-zA-Z0-9_]*": {
          "type": "array",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/definitions/utils\\author.json"
              },
              {
                "$ref": "#/definitions/utils\\reference.json"
              }
            ]
          }
        }
      }
    },
    "utils\\author.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "An author of a piece of content.",
      "description": "Models attribution to an individual or group for contribution towards some content item. In the Arc ecosystem, these are stored in the arc-author-service.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "type": {
          "description": "Indicates that this is an author",
          "type": "string",
          "enum": [
            "author"
          ]
        },
        "version": {
          "$ref": "#/definitions/traits\\trait_version.json"
        },
        "name": {
          "title": "Name",
          "description": "The full human name of contributor. See also byline, first_name, last_name, middle_name, suffix.",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/image.json"
        },
        "url": {
          "description": "A link to an author\u0027s landing page on the website, or a personal website.",
          "type": "string"
        },
        "social_links": {
          "$ref": "#/definitions/traits\\trait_social.json"
        },
        "slug": {
          "$ref": "#/definitions/traits\\trait_slug.json"
        },
        "first_name": {
          "title": "First Name",
          "description": "The real first name of a human author.",
          "type": "string"
        },
        "middle_name": {
          "title": "Middle Name",
          "description": "The real middle name of a human author.",
          "type": "string"
        },
        "last_name": {
          "title": "Last Name",
          "description": "The real last name of a human author.",
          "type": "string"
        },
        "suffix": {
          "title": "Suffix",
          "description": "The real suffix of a human author.",
          "type": "string"
        },
        "byline": {
          "title": "Byline",
          "description": "The public-facing name, or nom-de-plume, name of the author.",
          "type": "string"
        },
        "location": {
          "title": "Location",
          "description": "The city or locality that the author resides in or is primarily associated with.",
          "type": "string"
        },
        "division": {
          "title": "Division",
          "description": "The desk or group that this author normally reports to. E.g., \u0027Politics\u0027 or \u0027Sports.\u0027",
          "type": "string"
        },
        "email": {
          "title": "E-mail",
          "description": "The professional email address of this author.",
          "type": "string",
          "format": "email"
        },
        "role": {
          "title": "Role",
          "description": "The organizational role or title of this author.",
          "type": "string"
        },
        "expertise": {
          "title": "Expertise",
          "description": "A comma-delimited list of subjects the author in which the author has expertise.",
          "type": "string"
        },
        "affiliation": {
          "title": "Affiliation",
          "description": "The name of an organization the author is affiliated with. E.g., The Washington Post, or George Mason University.",
          "type": "string"
        },
        "languages": {
          "title": "Languages",
          "description": "A description of list of languages that the author is somewhat fluent in, excluding the native language of the parent publication, and identified in the language of the parent publication. E.g., Russian, Japanese, Greek.",
          "type": "string"
        },
        "bio": {
          "title": "Short Biography",
          "description": "A one or two sentence description of the author.",
          "type": "string"
        },
        "long_bio": {
          "title": "Long Biography",
          "description": "The full biography of the author.",
          "type": "string"
        },
        "books": {
          "title": "Books",
          "description": "A list of books written by the author.",
          "type": "array",
          "items": {
            "title": "Book",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "book_title": {
                "title": "Title",
                "description": "The book title.",
                "type": "string"
              },
              "book_url": {
                "title": "URL",
                "description": "A link to a page to purchase or learn more about the book.",
                "type": "string"
              }
            }
          }
        },
        "education": {
          "title": "Education",
          "description": "A list of schools that this author has graduated from.",
          "type": "array",
          "items": {
            "title": "School",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "school_name": {
                "title": "School Name",
                "description": "The name of the school.",
                "type": "string"
              }
            }
          }
        },
        "awards": {
          "title": "Awards",
          "description": "A list of awards the author has received.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "award_name": {
                "title": "Award Name",
                "description": "The name of the award.",
                "type": "string"
              }
            }
          }
        },
        "contributor": {
          "type": "boolean",
          "title": "Contributor",
          "description": "If true, this author is an external contributor to the publication."
        },
        "org": {
          "title": "Org",
          "description": "Deprecated. In ANS 0.5.8 and prior versions, this field is populated with the \u0027location\u0027 field from Arc Author Service. New implementations should use the \u0027location\u0027 and \u0027affiliation\u0027 field. Content should be identical to \u0027location.\u0027",
          "type": "string"
        },
        "socialLinks": {
          "description": "Deperecated. Included for backwards-compatibility. Content should be identical to social_links.",
          "$ref": "#/definitions/traits\\trait_social.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "image.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "An image.",
      "description": "Holds attributes of an ANS image component. In the Arc ecosystem, these are stored in Anglerfish.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "image"
          ]
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "version": {
          "$ref": "#/definitions/traits\\trait_version.json"
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "channels": {
          "$ref": "#/definitions/traits\\trait_channel.json"
        },
        "alignment": {
          "$ref": "#/definitions/traits\\trait_alignment.json"
        },
        "language": {
          "$ref": "#/definitions/traits\\trait_locale.json"
        },
        "copyright": {
          "$ref": "#/definitions/traits\\trait_copyright.json"
        },
        "canonical_url": {
          "$ref": "#/definitions/traits\\trait_canonical_url.json"
        },
        "short_url": {
          "$ref": "#/definitions/traits\\trait_short_url.json"
        },
        "created_date": {
          "$ref": "#/definitions/traits\\trait_created_date.json"
        },
        "last_updated_date": {
          "$ref": "#/definitions/traits\\trait_last_updated_date.json"
        },
        "publish_date": {
          "$ref": "#/definitions/traits\\trait_publish_date.json"
        },
        "first_publish_date": {
          "$ref": "#/definitions/traits\\trait_first_publish_date.json"
        },
        "display_date": {
          "$ref": "#/definitions/traits\\trait_display_date.json"
        },
        "location": {
          "$ref": "#/definitions/traits\\trait_location.json"
        },
        "geo": {
          "$ref": "#/definitions/traits\\trait_geo.json"
        },
        "address": {
          "$ref": "#/definitions/traits\\trait_address.json"
        },
        "editor_note": {
          "$ref": "#/definitions/traits\\trait_editor_note.json"
        },
        "status": {
          "$ref": "#/definitions/traits\\trait_status.json"
        },
        "headlines": {
          "$ref": "#/definitions/traits\\trait_headlines.json"
        },
        "subheadlines": {
          "$ref": "#/definitions/traits\\trait_subheadlines.json"
        },
        "description": {
          "$ref": "#/definitions/traits\\trait_description.json"
        },
        "credits": {
          "$ref": "#/definitions/traits\\trait_credits.json"
        },
        "vanity_credits": {
          "$ref": "#/definitions/traits\\trait_vanity_credits.json"
        },
        "taxonomy": {
          "$ref": "#/definitions/traits\\trait_taxonomy.json"
        },
        "promo_items": {
          "$ref": "#/definitions/traits\\trait_promo_items.json"
        },
        "related_content": {
          "$ref": "#/definitions/traits\\trait_related_content.json"
        },
        "owner": {
          "$ref": "#/definitions/traits\\trait_owner.json"
        },
        "planning": {
          "$ref": "#/definitions/traits\\trait_planning.json"
        },
        "workflow": {
          "$ref": "#/definitions/traits\\trait_workflow.json"
        },
        "pitches": {
          "$ref": "#/definitions/traits\\trait_pitches.json"
        },
        "revision": {
          "$ref": "#/definitions/traits\\trait_revision.json"
        },
        "syndication": {
          "$ref": "#/definitions/traits\\trait_syndication.json"
        },
        "source": {
          "$ref": "#/definitions/traits\\trait_source.json"
        },
        "distributor": {
          "$ref": "#/definitions/traits\\trait_distributor.json"
        },
        "tracking": {
          "$ref": "#/definitions/traits\\trait_tracking.json"
        },
        "comments": {
          "$ref": "#/definitions/traits\\trait_comments.json"
        },
        "label": {
          "$ref": "#/definitions/traits\\trait_label.json"
        },
        "slug": {
          "$ref": "#/definitions/traits\\trait_slug.json"
        },
        "content_restrictions": {
          "$ref": "#/definitions/traits\\trait_content_restrictions.json"
        },
        "image_type": {
          "$ref": "#/definitions/traits\\trait_image_type.json"
        },
        "alt_text": {
          "$ref": "#/definitions/traits\\trait_alt_text.json"
        },
        "focal_point": {
          "$ref": "#/definitions/traits\\trait_focal_point.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "subtitle": {
          "description": "Subtitle for the image.",
          "type": "string"
        },
        "caption": {
          "description": "Caption for the image.",
          "type": "string"
        },
        "url": {
          "description": "URL for the image.",
          "type": "string"
        },
        "width": {
          "description": "Width for the image.",
          "type": "integer"
        },
        "height": {
          "description": "Height for the image.",
          "type": "integer"
        },
        "licensable": {
          "description": "True if the image can legally be licensed to others.",
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "version"
      ]
    },
    "traits\\trait_vanity_credits.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Vanity Credits trait",
      "type": "object",
      "description": "Similar to the credits trait, but to be used only when ANS is being directly rendered to readers natively. For legal and technical reasons, the `credits` trait is preferred when converting ANS into feeds or other distribution formats. However, when present, `vanity_credits` allows more sophisticated credits presentation to override the default without losing that original data.",
      "properties": {
        "by": {
          "title": "By",
          "description": "The primary author(s) of this document. For a story, is is the writer or reporter. For an image, it is the photographer.",
          "type": "array",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/definitions/utils\\author.json"
              },
              {
                "$ref": "#/definitions/utils\\reference.json"
              }
            ]
          }
        },
        "photos_by": {
          "title": "Photos by",
          "description": "The photographer(s) of supplementary images included in this document, if it is a story. Note that if this document is an image, the photographer(s) should appear in the \u0027by\u0027 slot.",
          "type": "array",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/definitions/utils\\author.json"
              },
              {
                "$ref": "#/definitions/utils\\reference.json"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^[a-zA-Z0-9_]*": {
          "type": "array",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/definitions/utils\\author.json"
              },
              {
                "$ref": "#/definitions/utils\\reference.json"
              }
            ]
          }
        }
      }
    },
    "utils\\reference.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Representation of a normalized element",
      "description": "This represents a reference to external content that should be denormalized",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "reference"
          ]
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "channels": {
          "$ref": "#/definitions/traits\\trait_channel.json"
        },
        "alignment": {
          "$ref": "#/definitions/traits\\trait_alignment.json"
        },
        "referent": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "description": "The ANS type that the provider should return.",
              "type": "string"
            },
            "service": {
              "description": "The type of interaction the provider expects. E.g., \u0027oembed\u0027",
              "type": "string"
            },
            "id": {
              "description": "The id passed to the provider to retrieve an ANS document",
              "type": "string"
            },
            "provider": {
              "description": "A URL that can resolve the id into an ANS element",
              "type": "string"
            },
            "website": {
              "description": "The website which the referenced id belongs to. Currently supported only for sections.",
              "type": "string"
            },
            "referent_properties": {
              "additionalProperties": {},
              "description": "An object for key-value pairs that should override the values of keys with the same name in the denormalized object",
              "type": "object"
            }
          },
          "dependencies": {
            "website": {
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "section"
                  ]
                }
              }
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "required": [
        "type",
        "referent"
      ]
    },
    "traits\\trait_taxonomy.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Taxonomy",
      "description": "Holds the collection of tags, categories, keywords, etc that describe content.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils\\keyword.json"
          },
          "description": "A list of keywords. In the Arc ecosystem, this list is populated by Clavis."
        },
        "named_entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils\\named_entity.json"
          },
          "description": "A list of named entities. In the Arc ecosystem, this list is populated by Clavis."
        },
        "topics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils\\topic.json"
          },
          "description": "A list of topics. In the Arc ecosystem, this list is populated by Clavis."
        },
        "auxiliaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils\\auxiliary.json"
          },
          "description": "A list of auxiliaries. In the Arc ecosystem, this list is populated by Clavis."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils\\tag.json"
          }
        },
        "primary_site": {
          "description": "Deprecated in 0.10.4. (See `primary_section` instead.) A primary site object or reference to one. In the Arc ecosystem, a reference here is denormalized into a site from the arc-site-service.",
          "oneOf": [
            {
              "$ref": "#/definitions/utils\\site.json"
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/utils\\reference.json"
                },
                {
                  "properties": {
                    "referent": {
                      "properties": {
                        "type": {
                          "enum": [
                            "site"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        "primary_section": {
          "description": "A primary section object or reference to one. In the Arc ecosystem, a reference here is denormalized into a site from the arc-site-service.",
          "oneOf": [
            {
              "$ref": "#/definitions/utils\\section.json"
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/utils\\reference.json"
                },
                {
                  "properties": {
                    "referent": {
                      "properties": {
                        "type": {
                          "enum": [
                            "section"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          ]
        },
        "sites": {
          "description": "Deprecated in 0.10.4. (See `sections` instead.) A list of site objects or references to them. In the Arc ecosystem, references in this list are denormalized into sites from the arc-site-service.  In a multi-site context, sites will be denormalized against an organization\u0027s default website only.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/utils\\site.json"
              },
              {
                "allOf": [
                  {
                    "$ref": "#/definitions/utils\\reference.json"
                  },
                  {
                    "properties": {
                      "referent": {
                        "properties": {
                          "type": {
                            "enum": [
                              "site"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        },
        "sections": {
          "description": "A list of site objects or references to them. In the Arc ecosystem, references in this list are denormalized into sites from the arc-site-service.  In a multi-site context, sites will be denormalized against an organization\u0027s default website only.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/utils\\section.json"
              },
              {
                "allOf": [
                  {
                    "$ref": "#/definitions/utils\\reference.json"
                  },
                  {
                    "properties": {
                      "referent": {
                        "properties": {
                          "type": {
                            "enum": [
                              "section"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        },
        "seo_keywords": {
          "type": "array",
          "description": "A list of user-editable manually entered keywords for search purposes. In the Arc ecosystem, these can be generated and saved in source CMS systems, editors, etc.",
          "items": {
            "type": "string"
          }
        },
        "stock_symbols": {
          "description": "A list of stock symbols of companies related to this content. In the Arc ecosystem, these can be generated and saved in source CMS systems, editors, etc.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "associated_tasks": {
          "description": "A list of WebSked task IDs that this content was created or curated to satisfy.",
          "type": "array",
          "maxItems": 200,
          "items": {
            "type": "string",
            "pattern": "^[0-9a-fA-F]{24}$"
          }
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        }
      }
    },
    "utils\\keyword.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Keyword",
      "description": "Models a keyword used in describing a piece of content.",
      "type": "object",
      "required": [
        "keyword",
        "score"
      ],
      "additionalProperties": false,
      "properties": {
        "keyword": {
          "type": "string",
          "description": "The keyword used to describe a piece of content"
        },
        "score": {
          "type": "number",
          "description": "An arbitrary weighting to give the keyword"
        },
        "tag": {
          "type": "string",
          "description": "The Part of Speech tag for this keyword."
        },
        "frequency": {
          "type": "integer",
          "description": "An optional count of the frequency of the keyword as it appears in the content it describes"
        }
      }
    },
    "utils\\named_entity.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Named Entity",
      "description": "Models a named entity (i.e. name of a person, place, or organization) used in a piece of content.",
      "type": "object",
      "required": [
        "_id",
        "name",
        "type"
      ],
      "additionalProperties": false,
      "properties": {
        "_id": {
          "type": "string",
          "description": "A unique identifier for the concept of the named entity."
        },
        "name": {
          "type": "string",
          "description": "The actual string of text that was identified as a named entity."
        },
        "type": {
          "type": "string",
          "description": "A description of what the named entity is. E.g. \u0027organization\u0027, \u0027person\u0027, or \u0027location\u0027."
        },
        "score": {
          "type": "number",
          "decription": "An optional relevancy for this named entitiy."
        }
      }
    },
    "utils\\topic.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Topic",
      "description": "Models a topic used in describing a piece of content.",
      "type": "object",
      "required": [
        "_id",
        "score",
        "uid"
      ],
      "additionalProperties": false,
      "properties": {
        "_id": {
          "type": "string",
          "description": "The unique identifier for this topic."
        },
        "name": {
          "type": "string",
          "description": "The general name for this topic."
        },
        "score": {
          "type": "number",
          "description": "An arbitrary weighting to give the topic"
        },
        "uid": {
          "type": "string",
          "description": "A short identifier for this topic. Usually used in cases where a long form id cannot work."
        }
      }
    },
    "utils\\auxiliary.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Auxiliary",
      "description": "Models a auxiliary used in targeting a piece of content.",
      "type": "object",
      "required": [
        "_id",
        "uid"
      ],
      "additionalProperties": false,
      "properties": {
        "_id": {
          "type": "string",
          "description": "The unique identifier for this auxiliary."
        },
        "name": {
          "type": "string",
          "description": "The general name for this auxiliary."
        },
        "uid": {
          "type": "string",
          "description": "A short identifier for this auxiliary. Usually used in cases where a long form id cannot work."
        }
      }
    },
    "utils\\tag.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Tag",
      "description": "Models a keyword used in describing a piece of content.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "type": {
          "enum": [
            "tag"
          ]
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "text": {
          "type": "string",
          "description": "The text of the tag as displayed to users."
        },
        "description": {
          "type": "string",
          "description": "A more detailed description of the tag."
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "slug": {
          "$ref": "#/definitions/traits\\trait_slug.json"
        }
      },
      "required": [
        "text"
      ]
    },
    "traits\\trait_slug.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Slug",
      "description": "A short reference name for internal editorial use",
      "type": "string"
    },
    "utils\\site.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Site",
      "description": "A hierarchical section or \u0027site\u0027 in a taxonomy. In the Arc ecosystem, these are stored in the arc-site-service.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "enum": [
            "site"
          ]
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "version": {
          "$ref": "#/definitions/traits\\trait_version.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "name": {
          "description": "The name of this site",
          "type": "string"
        },
        "description": {
          "description": "A short description or tagline about this site",
          "type": "string"
        },
        "path": {
          "description": "The url path to this site",
          "type": "string"
        },
        "parent_id": {
          "description": "The id of this section\u0027s parent site, if any",
          "type": "string"
        },
        "primary": {
          "description": "Is this the primary site?",
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "version",
        "name"
      ]
    },
    "utils\\section.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Section",
      "description": "A hierarchical section in a taxonomy. In the Arc ecosystem, these are stored in the arc-site-service.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "enum": [
            "section"
          ]
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "_website": {
          "$ref": "#/definitions/traits\\trait_website.json"
        },
        "version": {
          "$ref": "#/definitions/traits\\trait_version.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "name": {
          "description": "The name of this site",
          "type": "string"
        },
        "description": {
          "description": "A short description or tagline about this site",
          "type": "string"
        },
        "path": {
          "description": "The url path to this site",
          "type": "string"
        },
        "parent_id": {
          "description": "The id of this section\u0027s parent section in the default hierarchy, if any.",
          "type": "string"
        },
        "parent": {
          "description": "The id of this section\u0027s parent section in various commonly-used hierarchies, where available.",
          "type": "object",
          "properties": {
            "default": {
              "type": "string"
            }
          }
        },
        "primary": {
          "description": "Is this the primary site?",
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "version",
        "name"
      ]
    },
    "traits\\trait_promo_items.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Promo Items",
      "type": "object",
      "description": "Lists of promotional content to use when highlighting the story. In the Arc ecosystem, references in these lists will be denormalized.",
      "properties": {
        "basic": {
          "oneOf": [
            {
              "$ref": "#/definitions/content.json"
            },
            {
              "$ref": "#/definitions/utils\\reference.json"
            },
            {
              "$ref": "#/definitions/story_elements\\raw_html.json"
            },
            {
              "$ref": "#/definitions/story_elements\\custom_embed.json"
            }
          ]
        }
      },
      "patternProperties": {
        ".*": {
          "oneOf": [
            {
              "$ref": "#/definitions/content.json"
            },
            {
              "$ref": "#/definitions/utils\\reference.json"
            },
            {
              "$ref": "#/definitions/story_elements\\raw_html.json"
            },
            {
              "$ref": "#/definitions/story_elements\\custom_embed.json"
            }
          ]
        }
      }
    },
    "content.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "A content object.",
      "description": "Holds common attributes of ANS Content objects.",
      "type": "object",
      "additionalProperties": {},
      "properties": {
        "type": {
          "type": "string"
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "version": {
          "$ref": "#/definitions/traits\\trait_version.json"
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "channels": {
          "$ref": "#/definitions/traits\\trait_channel.json"
        },
        "alignment": {
          "$ref": "#/definitions/traits\\trait_alignment.json"
        },
        "language": {
          "$ref": "#/definitions/traits\\trait_locale.json"
        },
        "copyright": {
          "$ref": "#/definitions/traits\\trait_copyright.json"
        },
        "canonical_url": {
          "$ref": "#/definitions/traits\\trait_canonical_url.json"
        },
        "short_url": {
          "$ref": "#/definitions/traits\\trait_short_url.json"
        },
        "created_date": {
          "$ref": "#/definitions/traits\\trait_created_date.json"
        },
        "last_updated_date": {
          "$ref": "#/definitions/traits\\trait_last_updated_date.json"
        },
        "publish_date": {
          "$ref": "#/definitions/traits\\trait_publish_date.json"
        },
        "first_publish_date": {
          "$ref": "#/definitions/traits\\trait_first_publish_date.json"
        },
        "display_date": {
          "$ref": "#/definitions/traits\\trait_display_date.json"
        },
        "location": {
          "$ref": "#/definitions/traits\\trait_location.json"
        },
        "geo": {
          "$ref": "#/definitions/traits\\trait_geo.json"
        },
        "address": {
          "$ref": "#/definitions/traits\\trait_address.json"
        },
        "editor_note": {
          "$ref": "#/definitions/traits\\trait_editor_note.json"
        },
        "status": {
          "$ref": "#/definitions/traits\\trait_status.json"
        },
        "headlines": {
          "$ref": "#/definitions/traits\\trait_headlines.json"
        },
        "subheadlines": {
          "$ref": "#/definitions/traits\\trait_subheadlines.json"
        },
        "description": {
          "$ref": "#/definitions/traits\\trait_description.json"
        },
        "credits": {
          "$ref": "#/definitions/traits\\trait_credits.json"
        },
        "vanity_credits": {
          "$ref": "#/definitions/traits\\trait_vanity_credits.json"
        },
        "taxonomy": {
          "$ref": "#/definitions/traits\\trait_taxonomy.json"
        },
        "promo_items": {
          "$ref": "#/definitions/traits\\trait_promo_items.json"
        },
        "related_content": {
          "$ref": "#/definitions/traits\\trait_related_content.json"
        },
        "owner": {
          "$ref": "#/definitions/traits\\trait_owner.json"
        },
        "planning": {
          "$ref": "#/definitions/traits\\trait_planning.json"
        },
        "workflow": {
          "$ref": "#/definitions/traits\\trait_workflow.json"
        },
        "pitches": {
          "$ref": "#/definitions/traits\\trait_pitches.json"
        },
        "revision": {
          "$ref": "#/definitions/traits\\trait_revision.json"
        },
        "syndication": {
          "$ref": "#/definitions/traits\\trait_syndication.json"
        },
        "source": {
          "$ref": "#/definitions/traits\\trait_source.json"
        },
        "distributor": {
          "$ref": "#/definitions/traits\\trait_distributor.json"
        },
        "tracking": {
          "$ref": "#/definitions/traits\\trait_tracking.json"
        },
        "comments": {
          "$ref": "#/definitions/traits\\trait_comments.json"
        },
        "label": {
          "$ref": "#/definitions/traits\\trait_label.json"
        },
        "slug": {
          "$ref": "#/definitions/traits\\trait_slug.json"
        },
        "content_restrictions": {
          "$ref": "#/definitions/traits\\trait_content_restrictions.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "content_aliases": {
          "$ref": "#/definitions/traits\\trait_content_aliases.json"
        }
      },
      "required": [
        "type",
        "version"
      ]
    },
    "traits\\trait_related_content.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Related_Content",
      "description": "Lists of content items or references this story is related to, arbitrarily keyed. In the Arc ecosystem, references in this object will be denormalized into the fully-inflated content objects they represent.",
      "type": "object",
      "properties": {
        "redirect": {
          "description": "An attached redirect. In Arc, when this content item is fetched by url, content api will instead return this redirect object with appropriate headers.  In all other cases, this content should be treated normally.",
          "type": "array",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/redirect.json"
          }
        }
      },
      "patternProperties": {
        ".*": {
          "type": "array",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/definitions/content.json"
              },
              {
                "$ref": "#/definitions/utils\\reference.json"
              },
              {
                "$ref": "#/definitions/story_elements\\custom_embed.json"
              }
            ]
          }
        }
      }
    },
    "redirect.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "A redirect object.",
      "description": "A redirect to another story.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "redirect"
          ]
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "version": {
          "$ref": "#/definitions/traits\\trait_version.json"
        },
        "owner": {
          "$ref": "#/definitions/traits\\trait_owner.json"
        },
        "revision": {
          "$ref": "#/definitions/traits\\trait_revision.json"
        },
        "canonical_url": {
          "$ref": "#/definitions/traits\\trait_canonical_url.json"
        },
        "redirect_url": {
          "$ref": "#/definitions/traits\\trait_canonical_url.json"
        }
      },
      "required": [
        "type",
        "version",
        "canonical_url",
        "redirect_url"
      ]
    },
    "traits\\trait_owner.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Owner information ",
      "description": "Various unrelated fields that should be preserved for backwards-compatibility reasons. See also trait_source.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The machine-readable unique identifier of the organization whose database this content is stored in. In Arc, this is equivalent to ARC_ORG_NAME.",
          "type": "string"
        },
        "name": {
          "description": "Deprecated in 0.10.4. See `distributor.name`. (Formerly: The human-readable name of original producer of content. Distinguishes between Wires, Staff and other sources.)",
          "type": "string"
        },
        "sponsored": {
          "description": "True if this content is advertorial or native advertising.",
          "type": "boolean"
        }
      }
    },
    "traits\\trait_revision.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Revision",
      "description": "Trait that applies revision information to a document. In the Arc ecosystem, many of these fields are populated in stories by the Story API.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "revision_id": {
          "description": "The unique id of this revision.",
          "type": "string"
        },
        "parent_id": {
          "description": "The unique id of the revision that this revisions was branched from, or preceded it on the current branch.",
          "type": "string"
        },
        "branch": {
          "description": "The name of the branch this revision was created on.",
          "type": "string"
        },
        "editions": {
          "description": "A list of identifiers of editions that point to this revision.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user_id": {
          "type": "string",
          "description": "The unique user id of the person who created this revision."
        },
        "published": {
          "type": "boolean",
          "description": "Whether or not this revision\u0027s parent story is published, in any form or place"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        }
      }
    },
    "story_elements\\custom_embed.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Custom Embed",
      "description": "A custom embed element. Can be used to reference content from external providers about which little is known.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "custom_embed"
          ]
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "channels": {
          "$ref": "#/definitions/traits\\trait_channel.json"
        },
        "alignment": {
          "$ref": "#/definitions/traits\\trait_alignment.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "embed": {
          "title": "Embed",
          "description": "The embed data.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "id": {
              "title": "Embed ID",
              "description": "Foreign ID of embedded item.",
              "type": "string",
              "maxLength": 128,
              "minLength": 1
            },
            "url": {
              "title": "Embed Provider URL",
              "description": "Provider URL for this embed item. When concatenated with Embed ID, should produce a URL that returns json metadata about the embedded content.",
              "type": "string",
              "maxLength": 512,
              "minLength": 1
            },
            "config": {
              "title": "Embed Configuration",
              "description": "Arbitrary configuration data generated by a plugin. Users are responsible for maintaining schema.",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^(?!(referent|type|version)$)[a-zA-Z0-9_]*$": {}
              }
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      "required": [
        "type",
        "embed"
      ]
    },
    "traits\\trait_planning.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Scheduling information",
      "description": "Trait that applies planning information to a document or resource. In the Arc ecosystem, this data is generated by WebSked. Newsroom use only. All these fields should be available and editable in WebSked.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "websked_sort_date": {
          "type": "string",
          "format": "date-time",
          "description": "Date to be used for chronological sorting in WebSked."
        },
        "deadline_miss": {
          "type": "integer",
          "description": "The delta between the story\u0027s planned publish date and actual first publish time, in minutes."
        },
        "internal_note": {
          "type": "string",
          "title": "Internal Note",
          "description": "This note is used for shared communication inside the newsroom."
        },
        "budget_line": {
          "type": "string",
          "title": "Budget Line",
          "description": "Used for the newsroom to identify what the story is about, especially if a user is unfamiliar with the slug of a story and the headline or they do not yet exist. Newsroom use only."
        },
        "scheduling": {
          "description": "Scheduling information.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "planned_publish_date": {
              "type": "string",
              "format": "date-time",
              "description": "When the content is planned to be published."
            },
            "scheduled_publish_date": {
              "type": "string",
              "format": "date-time",
              "description": "When the content was first published."
            },
            "will_have_gallery": {
              "description": "Will this content have galleries?",
              "type": "boolean"
            },
            "will_have_graphic": {
              "description": "Will this content have graphics?",
              "type": "boolean"
            },
            "will_have_image": {
              "description": "Will this content have images?",
              "type": "boolean"
            },
            "will_have_video": {
              "description": "Will this content have videos?",
              "type": "boolean"
            }
          }
        },
        "story_length": {
          "description": "Story length information.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "word_count_planned": {
              "description": "The anticipated number of words in the story.",
              "type": "integer"
            },
            "word_count_actual": {
              "description": "Current number of words.",
              "type": "integer"
            },
            "inch_count_planned": {
              "description": "The anticipated length of the story in inches.",
              "type": "integer"
            },
            "inch_count_actual": {
              "description": "The current length of the story in inches.",
              "type": "integer"
            },
            "line_count_planned": {
              "description": "The anticipated length of the story in lines.",
              "type": "integer"
            },
            "line_count_actual": {
              "description": "The current length of the story in lines.",
              "type": "integer"
            }
          }
        }
      }
    },
    "traits\\trait_workflow.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Workflow information",
      "description": "Trait that applies workflow information to a document or resource. In the Arc ecosystem, this data is generated by WebSked.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "status_code": {
          "type": "integer",
          "minimum": 1,
          "description": "Code indicating the story\u0027s current workflow status. This number should match the values configured in WebSked."
        },
        "note": {
          "type": "string",
          "description": "This note will be used for any task automatically generated via WebSked task triggers."
        }
      }
    },
    "traits\\trait_pitches.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Pitches",
      "description": "Trait that represents a story\u0027s pitches. In the Arc ecosystem, this data is generated by WebSked.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "platform": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/traits\\trait_platform_pitch.json"
          },
          "description": "A list of the story\u0027s pitches to a platform."
        },
        "publication": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/traits\\trait_publication_pitch.json"
          },
          "description": "A list of the story\u0027s pitches to a publication."
        }
      }
    },
    "traits\\trait_platform_pitch.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Platform pitch",
      "description": "Trait that represents a pitch to a platform. In the Arc ecosystem, this data is generated by WebSked.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "platform_path": {
          "type": "string",
          "description": "The path of the platform that this pitch targets."
        },
        "creation_event": {
          "$ref": "#/definitions/traits\\trait_platform_pitch_event.json"
        },
        "latest_event": {
          "$ref": "#/definitions/traits\\trait_platform_pitch_event.json"
        }
      }
    },
    "traits\\trait_platform_pitch_event.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Platform pitch event",
      "description": "Trait that represents an update event for a pitch to a platform. In the Arc ecosystem, this data is generated by WebSked.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "status": {
          "type": "string",
          "pattern": "^([a-z]|[ ])*$",
          "description": "The current status of the pitch."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of this update."
        },
        "user_id": {
          "type": "string",
          "description": "The ID of the user who made this update."
        },
        "note": {
          "type": "string",
          "description": "Optional note associated with this update."
        }
      }
    },
    "traits\\trait_publication_pitch.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Publication pitch",
      "description": "Trait that represents a pitch to a publication. In the Arc ecosystem, this data is generated by WebSked.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "publication_id": {
          "type": "string",
          "description": "The ID of the publication that this pitch targets."
        },
        "creation_event": {
          "$ref": "#/definitions/traits\\trait_publication_pitch_event.json"
        },
        "latest_event": {
          "$ref": "#/definitions/traits\\trait_publication_pitch_event.json"
        }
      }
    },
    "traits\\trait_publication_pitch_event.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Publication pitch event",
      "description": "Trait that represents an update event for a pitch to a publication. In the Arc ecosystem, this data is generated by WebSked.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "status": {
          "type": "string",
          "pattern": "^([a-z]|[ ])*$",
          "description": "The current status of the pitch."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of this update."
        },
        "user_id": {
          "type": "string",
          "description": "The ID of the user who made this update."
        },
        "note": {
          "type": "string",
          "description": "Optional note associated with this update."
        },
        "edition_id": {
          "type": "string",
          "description": "The ID of the publication edition that this pitch targets."
        },
        "edition_time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the publication edition that this pitch targets."
        }
      }
    },
    "traits\\trait_syndication.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Syndication",
      "type": "object",
      "description": "Key-boolean pair of syndication services where this article may go",
      "patternProperties": {
        ".*": {
          "type": "boolean"
        }
      },
      "properties": {
        "external_distribution": {
          "description": "Necessary for fulfilling contractual agreements with third party clients",
          "type": "boolean"
        },
        "search": {
          "description": "Necessary so that we can filter out all articles that editorial has deemed should not be discoverable via search",
          "type": "boolean"
        }
      }
    },
    "traits\\trait_source.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Source",
      "description": "Information about the original source and/or owner of this content",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "source_id": {
          "description": "The id of this content in a foreign CMS.",
          "type": "string"
        },
        "source_type": {
          "type": "string",
          "description": "Deprecated in 0.10.4. See `distributor.category` and `distributor.subcategory`. (Formerly: The method used to enter this content. E.g. \u0027staff\u0027, \u0027wires\u0027.)"
        },
        "name": {
          "type": "string",
          "description": "Deprecated in  0.10.4. See `distributor.name`. (Formerly: The human-readable name of the organization who first produced this content. E.g., \u0027Reuters\u0027.)"
        },
        "system": {
          "type": "string",
          "description": "The software (CMS or editor) that was used to enter this content. E.g., \u0027wordpress\u0027, \u0027ellipsis\u0027."
        },
        "edit_url": {
          "type": "string",
          "description": "A link to edit this content in its source CMS."
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        }
      }
    },
    "traits\\trait_distributor.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Distributor",
      "description": "Information about a third party that provided this content from outside this document\u0027s hosted organization.",
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "name": {
              "description": "The human-readable name of the distributor of this content. E.g., Reuters.",
              "type": "string"
            },
            "category": {
              "type": "string",
              "enum": [
                "staff",
                "wires",
                "freelance",
                "stock",
                "handout",
                "other"
              ],
              "description": "The machine-readable category of how this content was produced. Use \u0027staff\u0027 if this content was produced by an employee of the organization who owns this document repository. (Multisite note: content produced within a single *organization*, but shared across multiple *websites* should still be considered \u0027staff.\u0027) Use ‘wires’ if this content was produced for another organization and shared with the one who owns this document repository. Use \u0027freelance\u0027 if this content was produced by an individual on behalf of the organization who owns this document repository. Use \u0027stock\u0027 if this content is stock media distributed directly from a stock media provider. Use \u0027handout\u0027 if this is content provided from a source for an article (usually promotional media distributed directly from a company). Use \u0027other\u0027 for all other cases."
            },
            "subcategory": {
              "type": "string",
              "description": "The machine-readable subcategory of how this content was produced. E.g., \u0027freelance - signed\u0027. May vary between organizations."
            },
            "additional_properties": {
              "$ref": "#/definitions/traits\\trait_additional_properties.json"
            },
            "mode": {
              "type": "string",
              "enum": [
                "custom"
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "properties": {
            "reference_id": {
              "description": "The ARC UUID of the distributor of this content. E.g., ABCDEFGHIJKLMNOPQRSTUVWXYZ.",
              "type": "string"
            },
            "mode": {
              "type": "string",
              "enum": [
                "reference"
              ]
            }
          },
          "required": [
            "reference_id",
            "mode"
          ],
          "additionalProperties": false
        }
      ]
    },
    "traits\\trait_tracking.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Tracking",
      "description": "Tracking information, probably implementation-dependent",
      "type": "object",
      "additionalProperties": {}
    },
    "traits\\trait_comments.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Comments",
      "description": "Comment configuration data",
      "type": "object",
      "additionalProperties": {},
      "properties": {
        "comments_period": {
          "type": "integer",
          "description": "How long (in days) after publish date until comments are closed."
        },
        "allow_comments": {
          "type": "boolean",
          "description": "If false, commenting is disabled on this content."
        },
        "display_comments": {
          "type": "boolean",
          "description": "If false, do not render comments on this content."
        },
        "moderation_required": {
          "type": "boolean",
          "description": "If true, comments must be moderator-approved before being displayed."
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        }
      }
    },
    "traits\\trait_label.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Label",
      "description": "What the Washington Post calls a Kicker",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "basic": {
          "description": "The default label object for this piece of content.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "text": {
              "type": "string",
              "description": "The text of this label."
            },
            "url": {
              "type": "string",
              "description": "An optional destination url of this label."
            },
            "display": {
              "type": "boolean",
              "description": "If false, this label should be hidden."
            },
            "additional_properties": {
              "$ref": "#/definitions/traits\\trait_additional_properties.json"
            }
          },
          "required": [
            "text"
          ]
        }
      },
      "patternProperties": {
        "^[a-zA-Z0-9_]*$": {
          "description": "Additional user-defined keyed label objects.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "text": {
              "type": "string",
              "description": "The text of this label."
            },
            "url": {
              "type": "string",
              "description": "An optional destination url of this label."
            },
            "display": {
              "type": "boolean",
              "description": "If false, this label should be hidden."
            },
            "additional_properties": {
              "$ref": "#/definitions/traits\\trait_additional_properties.json"
            }
          },
          "required": [
            "text"
          ]
        }
      }
    },
    "traits\\trait_content_restrictions.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Content Restrictions",
      "description": "Trait that applies contains the content restrictions of an ANS object.",
      "type": "object",
      "properties": {
        "content_code": {
          "type": "string",
          "description": "The content restriction code/level/flag associated with the ANS object"
        },
        "embargo": {
          "description": "Embargo configuration to enforce publishing restrictions. Embargoed content must not go live.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "active": {
              "type": "boolean",
              "description": "The boolean flag to indicate if the embargo is active or not. If this field is false, ignore the embargo."
            },
            "end_time": {
              "type": "string",
              "format": "date-time",
              "description": "An optional end time for the embargo to indicate when it ends. When it\u0027s not defined, it means the embargo keeps applying. The end time should be ignored if active flag is false."
            },
            "description": {
              "description": "An optional description for the embargo.",
              "type": "string"
            }
          },
          "required": [
            "active"
          ]
        },
        "geo": {
          "type": "object",
          "description": "Geo-Restriction configuration that contains the restriction ids that this content should be associated with.",
          "additionalProperties": false,
          "properties": {
            "restrictions": {
              "type": "array",
              "description": "An array containing the geo-restriction objects. Limited to a size of 1 for now.",
              "minItems": 1,
              "maxItems": 1,
              "items": {
                "type": "object",
                "description": "An object specifying the _id of the restriction this content should be associated with.",
                "additionalProperties": false,
                "properties": {
                  "restriction_id": {
                    "type": "string",
                    "description": "The _id of the restriction that is stored in Global Settings."
                  }
                },
                "required": [
                  "restriction_id"
                ]
              }
            }
          },
          "required": [
            "restrictions"
          ]
        }
      }
    },
    "traits\\trait_content_aliases.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Aliases trait",
      "description": "An list of alternate names that this content can be fetched by instead of id.",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^([a-z])([a-z0-9-])*$"
      }
    },
    "story_elements\\raw_html.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "An html content element",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "enum": [
            "raw_html"
          ]
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "channels": {
          "$ref": "#/definitions/traits\\trait_channel.json"
        },
        "alignment": {
          "$ref": "#/definitions/traits\\trait_alignment.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "content": {
          "description": "Any arbitrary chunk of  HTML.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "content"
      ]
    },
    "traits\\trait_image_type.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Image Type",
      "description": "A more specific category for an image.",
      "type": "string",
      "category": {
        "type": "string",
        "enum": [
          "photograph",
          "graphic",
          "illustration",
          "thumbnail"
        ],
        "description": "The machine-readable enumeration of valid image types."
      }
    },
    "traits\\trait_alt_text.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Alt Text",
      "description": "The direct ANS equivalent of the HTML \u0027alt\u0027 attribute. A description of the contents of an image for improved accessibility.",
      "type": "string"
    },
    "traits\\trait_focal_point.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Focal Point",
      "description": "Coordinates representing the \u0027visual center\u0027 of an image. The X axis is horizontal line and the Y axis the vertical line, with 0,0 being the LEFT, TOP of the image.",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "The coordinate point on the horizontal axis"
        },
        "y": {
          "type": "number",
          "description": "The coordinate point on the vertical axis"
        }
      },
      "required": [
        "x",
        "y"
      ]
    },
    "traits\\trait_social.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Social Links",
      "description": "Links to various social media",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "site": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "additionalProperties": {}
      }
    },
    "traits\\trait_rendering_guides.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Rendering Guides",
      "description": "Trait that provides suggestions for the rendering system.",
      "type": "object",
      "properties": {
        "preferred_method": {
          "type": "array",
          "description": "The preferred rendering method of the story. Blank means there is no preference. If the rendering application is aware of these other options, it can decide to either use one of them, render messaging to the viewer, or render the story as normal",
          "items": {
            "anyOf": [
              {
                "enum": [
                  "website",
                  "native"
                ],
                "description": "Well-known values that describe the most common values. \u0027website\u0027 describes a traditional browser experience. \u0027native\u0027 describes a device specific application."
              },
              {
                "type": "string",
                "description": "Other than the well-known values are allowed, and can be ignored if not recognized"
              }
            ]
          }
        }
      }
    },
    "traits\\trait_corrections.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Corrections",
      "description": "Trait that applies a list of corrections to a document.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/story_elements\\correction.json"
      }
    },
    "story_elements\\correction.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Correction",
      "additionalProperties": false,
      "description": "Describes a change that has been made to the document for transparency, or describes inaccuracies or falsehoods that remain in the document.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "correction"
          ]
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "channels": {
          "$ref": "#/definitions/traits\\trait_channel.json"
        },
        "alignment": {
          "$ref": "#/definitions/traits\\trait_alignment.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "correction_type": {
          "description": "Type of correction. E.g., clarification, retraction.",
          "type": "string"
        },
        "text": {
          "description": "The text of the correction.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "text"
      ]
    },
    "traits\\trait_content_elements.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "A collection of content.",
      "description": "Holds attributes of an ANS collection - a common parent to story and gallery objects.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/utils\\content_element.json"
      }
    },
    "utils\\content_element.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "An element that can be listed as part of content elements",
      "description": "An item that conforms to this schema can be rendered in a sequence",
      "type": "object",
      "additionalProperties": {},
      "properties": {
        "type": {
          "type": "string"
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "channels": {
          "$ref": "#/definitions/traits\\trait_channel.json"
        },
        "alignment": {
          "$ref": "#/definitions/traits\\trait_alignment.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "gallery_properties": {
          "$ref": "#/definitions/traits\\trait_gallery_properties.json"
        }
      },
      "required": [
        "type"
      ]
    },
    "traits\\trait_gallery_properties.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Has gallery properties",
      "description": "An object for overrides for images when images are used in a gallery. Example usage: Each image in a gallery may have the images own focal point overridden by the gallery.",
      "type": "object",
      "gallery_properties": {
        "focal_point": {
          "$ref": "#/definitions/traits\\trait_focal_point.json"
        }
      }
    },
    "traits\\trait_publishing.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Publishing Information",
      "description": "The current published state of all editions of a content item as well as any scheduled publishing information. Machine-generated.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "has_published_edition": {
          "title": "Has Published Edition",
          "description": "True if and only if at least one published edition exists for this content item.",
          "type": "boolean"
        },
        "editions": {
          "type": "object",
          "description": "A map of edition names to the current publish state for that edition",
          "properties": {
            "default": {
              "$ref": "#/definitions/traits\\trait_publishing.json_definitions_edition"
            }
          },
          "patternProperties": {
            "^[a-zA-Z0-9_]*$": {
              "$ref": "#/definitions/traits\\trait_publishing.json_definitions_edition"
            }
          },
          "required": [
            "default"
          ]
        },
        "scheduled_operations": {
          "title": "Scheduled Operations",
          "description": "A map of lists of operations scheduled to be performed on this content item, sorted by operation type.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "publish_edition": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "operation": {
                    "enum": [
                      "publish_edition"
                    ]
                  },
                  "operation_revision_id": {
                    "title": "Revision ID (Operation)",
                    "description": "The revision id to be published.",
                    "type": "string"
                  },
                  "operation_edition": {
                    "title": "Edition Name (Operation)",
                    "description": "The name of the edition this operation will publish to.",
                    "type": "string"
                  },
                  "operation_date": {
                    "title": "Operation Date",
                    "description": "The date that this operation will be performed.",
                    "type": "string"
                  },
                  "additional_properties": {
                    "$ref": "#/definitions/traits\\trait_additional_properties.json"
                  }
                }
              }
            },
            "unpublish_edition": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "operation": {
                    "enum": [
                      "unpublish_edition"
                    ]
                  },
                  "operation_edition": {
                    "title": "Edition Name (Operation)",
                    "description": "The name of the edition this operation will publish to.",
                    "type": "string"
                  },
                  "operation_date": {
                    "title": "Operation Date",
                    "description": "The date that this operation will be performed.",
                    "type": "string"
                  },
                  "additional_properties": {
                    "$ref": "#/definitions/traits\\trait_additional_properties.json"
                  }
                }
              }
            }
          }
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        }
      },
      "required": [
        "has_published_edition"
      ],
      "definitions": {
        "edition": {
          "additionalProperties": false,
          "properties": {
            "edition_name": {
              "title": "Edition Name",
              "description": "The machine-readable identifier of this edition. This should be the same as the key in \u0027editions\u0027 for the edition object.",
              "type": "string"
            },
            "edition_date": {
              "title": "Edition Date",
              "description": "The machine-generated date that this edition was last updated (i.e., that the content item was published/unpublished to a particular destination.)",
              "type": "string",
              "format": "date-time"
            },
            "edition_first_publish_date": {
              "title": "First Published Date (Edition)",
              "description": "The machine-generated date that this edition was created for the first time (i.e., that the content item was first published.)",
              "type": "string",
              "format": "date-time"
            },
            "edition_display_date": {
              "title": "Display Date (Edition)",
              "description": "The human-editable date that should be shown to readers as the \u0027date\u0027 for this content item. When viewing the story at this edition name directly, this will override whatever value is set for Display Date on the story directly. After an edition is created, subsequent updates to that edition will not change this date unless otherwise specified.",
              "type": "string",
              "format": "date-time"
            },
            "edition_publish_date": {
              "title": "Publish Date (Edition)",
              "description": "The machine-editable date that should be shown to readers as the \u0027publish date\u0027 for this content item. When viewing the story at this edition name directly, this will override whatever value is set for Publish Date on the story directly. Every time an edition is updated (i.e. a story is republished) this date will also be updated unless otherwise specified.",
              "type": "string",
              "format": "date-time"
            },
            "edition_published": {
              "title": "Publish Status",
              "description": "If false, this edition has been deleted/unpublished.",
              "type": "boolean"
            },
            "edition_revision_id": {
              "title": "Revision ID",
              "description": "The id of the revision that this edition was created from. Omitted if unpublished.",
              "type": "string"
            },
            "additional_properties": {
              "$ref": "#/definitions/traits\\trait_additional_properties.json"
            }
          },
          "required": [
            "edition_published",
            "edition_date",
            "edition_name"
          ]
        }
      }
    },
    "traits\\trait_publishing.json_definitions_edition": {
      "additionalProperties": false,
      "properties": {
        "edition_name": {
          "title": "Edition Name",
          "description": "The machine-readable identifier of this edition. This should be the same as the key in \u0027editions\u0027 for the edition object.",
          "type": "string"
        },
        "edition_date": {
          "title": "Edition Date",
          "description": "The machine-generated date that this edition was last updated (i.e., that the content item was published/unpublished to a particular destination.)",
          "type": "string",
          "format": "date-time"
        },
        "edition_first_publish_date": {
          "title": "First Published Date (Edition)",
          "description": "The machine-generated date that this edition was created for the first time (i.e., that the content item was first published.)",
          "type": "string",
          "format": "date-time"
        },
        "edition_display_date": {
          "title": "Display Date (Edition)",
          "description": "The human-editable date that should be shown to readers as the \u0027date\u0027 for this content item. When viewing the story at this edition name directly, this will override whatever value is set for Display Date on the story directly. After an edition is created, subsequent updates to that edition will not change this date unless otherwise specified.",
          "type": "string",
          "format": "date-time"
        },
        "edition_publish_date": {
          "title": "Publish Date (Edition)",
          "description": "The machine-editable date that should be shown to readers as the \u0027publish date\u0027 for this content item. When viewing the story at this edition name directly, this will override whatever value is set for Publish Date on the story directly. Every time an edition is updated (i.e. a story is republished) this date will also be updated unless otherwise specified.",
          "type": "string",
          "format": "date-time"
        },
        "edition_published": {
          "title": "Publish Status",
          "description": "If false, this edition has been deleted/unpublished.",
          "type": "boolean"
        },
        "edition_revision_id": {
          "title": "Revision ID",
          "description": "The id of the revision that this edition was created from. Omitted if unpublished.",
          "type": "string"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        }
      },
      "required": [
        "edition_published",
        "edition_date",
        "edition_name"
      ]
    },
    "traits\\trait_voice_transcripts.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Voice transcript(s) configuration and output.",
      "description": "Any voice transcripts (e.g. text-to-speech or author-narrations) of the document requested by the user, along with configuration information and the resulting output.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/definitions/traits\\trait_id.json"
          },
          "type": {
            "type": "string",
            "enum": [
              "voice_transcript"
            ]
          },
          "subtype": {
            "$ref": "#/definitions/traits\\trait_subtype.json"
          },
          "options": {
            "title": "Options (Requested)",
            "description": "The transcription settings as requested by an end-user or API caller. These values should be displayed to editorial users in Arc apps.",
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "title": "Enabled",
                "description": "If true, then a transcript of the appropriate options was requested for this document."
              },
              "voice": {
                "type": "string",
                "title": "Voice ID",
                "description": "The id of the \u0027voice\u0027 used to read aloud an audio transcript."
              }
            },
            "required": [
              "enabled"
            ]
          },
          "options_used": {
            "title": "Options (Used)",
            "description": "The transcription settings that were used by the renderer to generate the final output. (If these differ from \u0027options\u0027 it may indicate an inability to render exactly as specified.) These values can be used when rendering to readers or external users.",
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "title": "Enabled",
                "description": "If true, then a transcript of the appropriate options was generated for this document."
              },
              "voice": {
                "type": "string",
                "title": "Voice ID",
                "description": "The id of the \u0027voice\u0027 used to read aloud an audio transcript."
              }
            },
            "required": [
              "enabled"
            ]
          },
          "output": {
            "$ref": "#/definitions/audio.json"
          }
        },
        "required": [
          "options"
        ]
      }
    },
    "audio.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "Audio Content",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "audio"
          ]
        },
        "_id": {
          "$ref": "#/definitions/traits\\trait_id.json"
        },
        "version": {
          "$ref": "#/definitions/traits\\trait_version.json"
        },
        "subtype": {
          "$ref": "#/definitions/traits\\trait_subtype.json"
        },
        "channels": {
          "$ref": "#/definitions/traits\\trait_channel.json"
        },
        "alignment": {
          "$ref": "#/definitions/traits\\trait_alignment.json"
        },
        "language": {
          "$ref": "#/definitions/traits\\trait_locale.json"
        },
        "copyright": {
          "$ref": "#/definitions/traits\\trait_copyright.json"
        },
        "canonical_url": {
          "$ref": "#/definitions/traits\\trait_canonical_url.json"
        },
        "short_url": {
          "$ref": "#/definitions/traits\\trait_short_url.json"
        },
        "created_date": {
          "$ref": "#/definitions/traits\\trait_created_date.json"
        },
        "last_updated_date": {
          "$ref": "#/definitions/traits\\trait_last_updated_date.json"
        },
        "publish_date": {
          "$ref": "#/definitions/traits\\trait_publish_date.json"
        },
        "first_publish_date": {
          "$ref": "#/definitions/traits\\trait_first_publish_date.json"
        },
        "display_date": {
          "$ref": "#/definitions/traits\\trait_display_date.json"
        },
        "location": {
          "$ref": "#/definitions/traits\\trait_location.json"
        },
        "geo": {
          "$ref": "#/definitions/traits\\trait_geo.json"
        },
        "address": {
          "$ref": "#/definitions/traits\\trait_address.json"
        },
        "editor_note": {
          "$ref": "#/definitions/traits\\trait_editor_note.json"
        },
        "status": {
          "$ref": "#/definitions/traits\\trait_status.json"
        },
        "headlines": {
          "$ref": "#/definitions/traits\\trait_headlines.json"
        },
        "subheadlines": {
          "$ref": "#/definitions/traits\\trait_subheadlines.json"
        },
        "description": {
          "$ref": "#/definitions/traits\\trait_description.json"
        },
        "credits": {
          "$ref": "#/definitions/traits\\trait_credits.json"
        },
        "vanity_credits": {
          "$ref": "#/definitions/traits\\trait_vanity_credits.json"
        },
        "taxonomy": {
          "$ref": "#/definitions/traits\\trait_taxonomy.json"
        },
        "promo_items": {
          "$ref": "#/definitions/traits\\trait_promo_items.json"
        },
        "related_content": {
          "$ref": "#/definitions/traits\\trait_related_content.json"
        },
        "owner": {
          "$ref": "#/definitions/traits\\trait_owner.json"
        },
        "planning": {
          "$ref": "#/definitions/traits\\trait_planning.json"
        },
        "workflow": {
          "$ref": "#/definitions/traits\\trait_workflow.json"
        },
        "pitches": {
          "$ref": "#/definitions/traits\\trait_pitches.json"
        },
        "revision": {
          "$ref": "#/definitions/traits\\trait_revision.json"
        },
        "syndication": {
          "$ref": "#/definitions/traits\\trait_syndication.json"
        },
        "source": {
          "$ref": "#/definitions/traits\\trait_source.json"
        },
        "distributor": {
          "$ref": "#/definitions/traits\\trait_distributor.json"
        },
        "tracking": {
          "$ref": "#/definitions/traits\\trait_tracking.json"
        },
        "comments": {
          "$ref": "#/definitions/traits\\trait_comments.json"
        },
        "label": {
          "$ref": "#/definitions/traits\\trait_label.json"
        },
        "slug": {
          "$ref": "#/definitions/traits\\trait_slug.json"
        },
        "content_restrictions": {
          "$ref": "#/definitions/traits\\trait_content_restrictions.json"
        },
        "additional_properties": {
          "$ref": "#/definitions/traits\\trait_additional_properties.json"
        },
        "content_aliases": {
          "$ref": "#/definitions/traits\\trait_content_aliases.json"
        },
        "source_url": {
          "description": "(Deprecated.) The audio source file. Use \u0027streams\u0027 instead.",
          "type": "string"
        },
        "mimetype": {
          "description": "(Deprecated.) Mime type of audio source file. Use \u0027streams\u0027 instead.",
          "type": "string"
        },
        "autoplay": {
          "description": "Whether to autoplay is enabled.",
          "type": "boolean"
        },
        "controls": {
          "description": "Whether controls are enabled.",
          "type": "boolean"
        },
        "loop": {
          "description": "Whether looping is enabled.",
          "type": "boolean"
        },
        "preload": {
          "description": "Whether preload is enabled.",
          "type": "boolean"
        },
        "streams": {
          "description": "The different streams this audio can play in.",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/utils\\audio_stream.json"
          }
        }
      },
      "required": [
        "type",
        "version"
      ],
      "oneOf": [
        {
          "required": [
            "streams"
          ]
        },
        {
          "required": [
            "source_url"
          ]
        }
      ]
    },
    "utils\\audio_stream.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "A stream of audio.",
      "description": "Configuration for a piece of audio content, over a stream.",
      "type": "object",
      "properties": {
        "filesize": {
          "title": "File size",
          "description": "The size of the audio file in bytes.",
          "type": "number"
        },
        "audio_codec": {
          "title": "Audio Codec",
          "description": "The codec used to encode the audio stream. (E.g. mpeg)",
          "type": "string"
        },
        "stream_type": {
          "title": "Audio Stream Type",
          "description": "The type of audio (e.g. mp3).",
          "type": "string"
        },
        "url": {
          "title": "URL",
          "description": "The file location of the stream.",
          "type": "string",
          "format": "uri"
        },
        "bitrate": {
          "title": "Bitrate",
          "description": "The bitrate of the audio in kilobytes per second.",
          "type": "number"
        }
      },
      "required": [
        "url"
      ]
    },
    "traits\\trait_websites.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Websites Input",
      "description": "Website-specific  metadata for url generation for multi-site copies. These fields are not indexed in Content API.",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_]*": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "website_section": {
              "anyOf": [
                {
                  "$ref": "#/definitions/utils\\reference.json"
                },
                {
                  "$ref": "#/definitions/utils\\section.json"
                }
              ]
            },
            "website_url": {
              "$ref": "#/definitions/traits\\trait_website_url.json"
            }
          }
        }
      }
    }
  }
}