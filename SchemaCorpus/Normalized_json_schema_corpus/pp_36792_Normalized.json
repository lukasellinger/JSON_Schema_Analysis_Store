{
  "$schema": "http://interagent.github.io/interagent-hyper-schema",
  "type": [
    "object"
  ],
  "definitions": {
    "account-feature": {
      "description": "An account feature represents a Heroku labs capability that can be enabled or disabled for an account on Heroku.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Account Feature",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when account feature was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "description": {
          "description": "description of account feature",
          "example": "Causes account to example.",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "doc_url": {
          "description": "documentation URL of account feature",
          "example": "http://devcenter.heroku.com/articles/example",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "enabled": {
          "description": "whether or not account feature has been enabled",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "id": {
          "description": "unique identifier of account feature",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_account-feature_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_account-feature_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name of account feature",
          "example": "name",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "state of account feature",
          "example": "public",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when account feature was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Info for an existing account feature.",
          "href": "/account/features/{(%23%2Fdefinitions%2Faccount-feature%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/account-feature"
          },
          "title": "Info"
        },
        {
          "description": "List existing account features.",
          "href": "/account/features",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/account-feature"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Update an existing account feature.",
          "href": "/account/features/{(%23%2Fdefinitions%2Faccount-feature%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "enabled": {
                "$ref": "#/definitions/definitions_account-feature_definitions_enabled"
              }
            },
            "required": [
              "enabled"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/account-feature"
          },
          "title": "Update"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_account-feature_definitions_created_at"
        },
        "description": {
          "$ref": "#/definitions/definitions_account-feature_definitions_description"
        },
        "doc_url": {
          "$ref": "#/definitions/definitions_account-feature_definitions_doc_url"
        },
        "enabled": {
          "$ref": "#/definitions/definitions_account-feature_definitions_enabled"
        },
        "id": {
          "$ref": "#/definitions/definitions_account-feature_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_account-feature_definitions_name"
        },
        "state": {
          "$ref": "#/definitions/definitions_account-feature_definitions_state"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_account-feature_definitions_updated_at"
        }
      }
    },
    "account": {
      "description": "An account represents an individual signed up to use the Heroku platform.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Account",
      "type": [
        "object"
      ],
      "definitions": {
        "allow_tracking": {
          "default": true,
          "description": "whether to allow third party web activity tracking",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "beta": {
          "default": false,
          "description": "whether allowed to utilize beta Heroku features",
          "example": false,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "created_at": {
          "description": "when account was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "email": {
          "description": "unique email address of account",
          "example": "username@example.com",
          "format": "email",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "federated": {
          "description": "whether the user is federated and belongs to an Identity Provider",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "id": {
          "description": "unique identifier of an account",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            {
              "$ref": "#/definitions/definitions_account_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_account_definitions_self"
            }
          ]
        },
        "last_login": {
          "description": "when account last authorized with Heroku",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "description": "full name of the account owner",
          "example": "Tina Edmonds",
          "readOnly": false,
          "type": [
            "string",
            "null"
          ]
        },
        "new_password": {
          "description": "the new password for the account when changing the password",
          "example": "newpassword",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "password": {
          "description": "current password on the account",
          "example": "currentpassword",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "self": {
          "description": "Implicit reference to currently authorized user",
          "enum": [
            "~"
          ],
          "example": "~",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "sms_number": {
          "description": "SMS number of account",
          "example": "+1 ***-***-1234",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "suspended_at": {
          "description": "when account was suspended",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "delinquent_at": {
          "description": "when account became delinquent",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "two_factor_authentication": {
          "description": "whether two-factor auth is enabled on the account",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "updated_at": {
          "description": "when account was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "verified": {
          "default": false,
          "description": "whether account has been verified with billing information",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        }
      },
      "links": [
        {
          "description": "Info for account.",
          "href": "/account",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/account"
          },
          "title": "Info"
        },
        {
          "description": "Update account.",
          "href": "/account",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "allow_tracking": {
                "$ref": "#/definitions/definitions_account_definitions_allow_tracking"
              },
              "beta": {
                "$ref": "#/definitions/definitions_account_definitions_beta"
              },
              "name": {
                "$ref": "#/definitions/definitions_account_definitions_name"
              },
              "password": {
                "$ref": "#/definitions/definitions_account_definitions_password"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/account"
          },
          "title": "Update"
        },
        {
          "description": "Change Email for account.",
          "href": "/account",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "email": {
                "$ref": "#/definitions/definitions_account_definitions_email"
              },
              "password": {
                "$ref": "#/definitions/definitions_account_definitions_password"
              }
            },
            "required": [
              "password",
              "email"
            ],
            "type": [
              "object"
            ]
          },
          "title": "Change Email"
        },
        {
          "description": "Change Password for account.",
          "href": "/account",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "new_password": {
                "$ref": "#/definitions/definitions_account_definitions_new_password"
              },
              "password": {
                "$ref": "#/definitions/definitions_account_definitions_password"
              }
            },
            "required": [
              "new_password",
              "password"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/account"
          },
          "title": "Change Password"
        },
        {
          "description": "Delete account. Note that this action cannot be undone.",
          "href": "/account",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/account"
          },
          "title": "Delete"
        },
        {
          "description": "Info for account.",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/account"
          },
          "title": "Info"
        },
        {
          "description": "Update account.",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "allow_tracking": {
                "$ref": "#/definitions/definitions_account_definitions_allow_tracking"
              },
              "beta": {
                "$ref": "#/definitions/definitions_account_definitions_beta"
              },
              "name": {
                "$ref": "#/definitions/definitions_account_definitions_name"
              },
              "password": {
                "$ref": "#/definitions/definitions_account_definitions_password"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/account"
          },
          "title": "Update"
        },
        {
          "description": "Change Email for account.",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "email": {
                "$ref": "#/definitions/definitions_account_definitions_email"
              },
              "password": {
                "$ref": "#/definitions/definitions_account_definitions_password"
              }
            },
            "required": [
              "password",
              "email"
            ],
            "type": [
              "object"
            ]
          },
          "title": "Change Email"
        },
        {
          "description": "Change Password for account.",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "new_password": {
                "$ref": "#/definitions/definitions_account_definitions_new_password"
              },
              "password": {
                "$ref": "#/definitions/definitions_account_definitions_password"
              }
            },
            "required": [
              "new_password",
              "password"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/account"
          },
          "title": "Change Password"
        },
        {
          "description": "Delete account. Note that this action cannot be undone.",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/account"
          },
          "title": "Delete"
        }
      ],
      "properties": {
        "allow_tracking": {
          "$ref": "#/definitions/definitions_account_definitions_allow_tracking"
        },
        "beta": {
          "$ref": "#/definitions/definitions_account_definitions_beta"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_account_definitions_created_at"
        },
        "email": {
          "$ref": "#/definitions/definitions_account_definitions_email"
        },
        "federated": {
          "$ref": "#/definitions/definitions_account_definitions_federated"
        },
        "id": {
          "$ref": "#/definitions/definitions_account_definitions_id"
        },
        "identity_provider": {
          "description": "Identity Provider details for federated users.",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_identity-provider_definitions_id"
            },
            "organization": {
              "type": [
                "object"
              ],
              "properties": {
                "name": {
                  "$ref": "#/definitions/definitions_organization_definitions_name"
                }
              }
            }
          },
          "type": [
            "object",
            "null"
          ]
        },
        "last_login": {
          "$ref": "#/definitions/definitions_account_definitions_last_login"
        },
        "name": {
          "$ref": "#/definitions/definitions_account_definitions_name"
        },
        "sms_number": {
          "$ref": "#/definitions/definitions_account_definitions_sms_number"
        },
        "suspended_at": {
          "$ref": "#/definitions/definitions_account_definitions_suspended_at"
        },
        "delinquent_at": {
          "$ref": "#/definitions/definitions_account_definitions_delinquent_at"
        },
        "two_factor_authentication": {
          "$ref": "#/definitions/definitions_account_definitions_two_factor_authentication"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_account_definitions_updated_at"
        },
        "verified": {
          "$ref": "#/definitions/definitions_account_definitions_verified"
        },
        "default_organization": {
          "description": "organization selected by default",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_organization_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_organization_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object",
            "null"
          ]
        }
      }
    },
    "add-on-action": {
      "description": "Add-on Actions are lifecycle operations for add-on provisioning and deprovisioning. They allow whitelisted add-on providers to (de)provision add-ons in the background and then report back when (de)provisioning is complete.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "development",
      "strictProperties": true,
      "title": "Heroku Platform API - Add-on Action",
      "type": [
        "object"
      ],
      "definitions": {},
      "links": [
        {
          "description": "Mark an add-on as provisioned for use.",
          "href": "/addons/{(%23%2Fdefinitions%2Fadd-on%2Fdefinitions%2Fidentity)}/actions/provision",
          "method": "POST",
          "rel": "create",
          "targetSchema": {
            "$ref": "#/definitions/add-on"
          },
          "title": "Create - Provision"
        },
        {
          "description": "Mark an add-on as deprovisioned.",
          "href": "/addons/{(%23%2Fdefinitions%2Fadd-on%2Fdefinitions%2Fidentity)}/actions/deprovision",
          "method": "POST",
          "rel": "create",
          "targetSchema": {
            "$ref": "#/definitions/add-on"
          },
          "title": "Create - Deprovision"
        }
      ],
      "properties": {}
    },
    "add-on-attachment": {
      "description": "An add-on attachment represents a connection between an app and an add-on that it has been given access to.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Add-on Attachment",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when add-on attachment was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this add-on attachment",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "force": {
          "default": false,
          "description": "whether or not to allow existing attachment with same name to be replaced",
          "example": false,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_add-on-attachment_definitions_id"
            }
          ]
        },
        "scopedIdentity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_add-on-attachment_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_add-on-attachment_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name for this add-on attachment to this app",
          "example": "DATABASE",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when add-on attachment was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "web_url": {
          "description": "URL for logging into web interface of add-on in attached app context",
          "example": "https://postgres.heroku.com/databases/01234567-89ab-cdef-0123-456789abcdef",
          "format": "uri",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new add-on attachment.",
          "href": "/addon-attachments",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "addon": {
                "$ref": "#/definitions/definitions_add-on_definitions_identity"
              },
              "app": {
                "$ref": "#/definitions/definitions_app_definitions_identity"
              },
              "force": {
                "$ref": "#/definitions/definitions_add-on-attachment_definitions_force"
              },
              "name": {
                "$ref": "#/definitions/definitions_add-on-attachment_definitions_name"
              }
            },
            "required": [
              "addon",
              "app"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/add-on-attachment"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing add-on attachment.",
          "href": "/addon-attachments/{(%23%2Fdefinitions%2Fadd-on-attachment%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/add-on-attachment"
          },
          "title": "Delete"
        },
        {
          "description": "Info for existing add-on attachment.",
          "href": "/addon-attachments/{(%23%2Fdefinitions%2Fadd-on-attachment%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/add-on-attachment"
          },
          "title": "Info"
        },
        {
          "description": "List existing add-on attachments.",
          "href": "/addon-attachments",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on-attachment"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "List existing add-on attachments for an add-on.",
          "href": "/addons/{(%23%2Fdefinitions%2Fadd-on%2Fdefinitions%2Fidentity)}/addon-attachments",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on-attachment"
            },
            "type": [
              "array"
            ]
          },
          "title": "List by Add-on"
        },
        {
          "description": "List existing add-on attachments for an app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/addon-attachments",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on-attachment"
            },
            "type": [
              "array"
            ]
          },
          "title": "List by App"
        },
        {
          "description": "Info for existing add-on attachment for an app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/addon-attachments/{(%23%2Fdefinitions%2Fadd-on-attachment%2Fdefinitions%2FscopedIdentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/add-on-attachment"
          },
          "title": "Info by App"
        }
      ],
      "properties": {
        "addon": {
          "description": "identity of add-on",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_add-on_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_add-on_definitions_name"
            },
            "app": {
              "description": "billing application associated with this add-on",
              "type": [
                "object"
              ],
              "properties": {
                "id": {
                  "$ref": "#/definitions/definitions_app_definitions_id"
                },
                "name": {
                  "$ref": "#/definitions/definitions_app_definitions_name"
                }
              },
              "strictProperties": true
            },
            "plan": {
              "description": "identity of add-on plan",
              "properties": {
                "id": {
                  "$ref": "#/definitions/definitions_plan_definitions_id"
                },
                "name": {
                  "$ref": "#/definitions/definitions_plan_definitions_name"
                }
              },
              "strictProperties": true,
              "type": [
                "object"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "id",
            "name",
            "app"
          ],
          "type": [
            "object"
          ]
        },
        "app": {
          "description": "application that is attached to add-on",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_add-on-attachment_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_add-on-attachment_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_add-on-attachment_definitions_name"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_add-on-attachment_definitions_updated_at"
        },
        "web_url": {
          "$ref": "#/definitions/definitions_add-on-attachment_definitions_web_url"
        }
      }
    },
    "add-on-config": {
      "description": "Configuration of an Add-on",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "development",
      "strictProperties": true,
      "title": "Heroku Platform API - Add-on Config",
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_add-on-config_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name of the config",
          "example": "FOO",
          "type": [
            "string"
          ]
        },
        "value": {
          "description": "value of the config",
          "example": "bar",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "links": [
        {
          "description": "Get an add-on\u0027s config",
          "href": "/addons/{(%23%2Fdefinitions%2Fadd-on%2Fdefinitions%2Fidentity)}/config",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on-config"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Update an add-on\u0027s config.",
          "href": "/addons/{(%23%2Fdefinitions%2Fadd-on%2Fdefinitions%2Fidentity)}/config",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "config": {
                "items": {
                  "$ref": "#/definitions/add-on-config"
                },
                "type": [
                  "array"
                ]
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on-config"
            }
          },
          "title": "Update"
        }
      ],
      "properties": {
        "name": {
          "$ref": "#/definitions/definitions_add-on-config_definitions_name"
        },
        "value": {
          "$ref": "#/definitions/definitions_add-on-config_definitions_value"
        }
      }
    },
    "add-on-plan-action": {
      "description": "Add-on Plan Actions are Provider functionality for specific add-on installations",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "development",
      "strictProperties": true,
      "title": "Heroku Platform API - Add-on Plan Action",
      "type": [
        "object"
      ],
      "definitions": {
        "id": {
          "description": "a unique identifier",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_id"
        },
        "label": {
          "description": "the display text shown in Dashboard",
          "example": "Example",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "action": {
          "description": "identifier of the action to take that is sent via SSO",
          "example": "example",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "url": {
          "description": "absolute URL to use instead of an action",
          "example": "http://example.com?resource_id\u003d:resource_id",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "requires_owner": {
          "description": "if the action requires the user to own the app",
          "example": true,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        }
      },
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_id"
        },
        "label": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_label"
        },
        "action": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_action"
        },
        "url": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_url"
        },
        "requires_owner": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_requires_owner"
        }
      }
    },
    "add-on-region-capability": {
      "description": "Add-on region capabilities represent the relationship between an Add-on Service and a specific Region. Only Beta and GA add-ons are returned by these endpoints.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Add-on Region Capability",
      "type": [
        "object"
      ],
      "definitions": {
        "id": {
          "description": "unique identifier of this add-on-region-capability",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "supports_private_networking": {
          "description": "whether the add-on can be installed to a Space",
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "identity": {
          "$ref": "#/definitions/definitions_add-on-region-capability_definitions_id"
        }
      },
      "links": [
        {
          "description": "List all existing add-on region capabilities.",
          "href": "/addon-region-capabilities",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on-region-capability"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "List existing add-on region capabilities for an add-on-service",
          "href": "/addon-services/{(%23%2Fdefinitions%2Fadd-on-service%2Fdefinitions%2Fidentity)}/region-capabilities",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on-region-capability"
            },
            "type": [
              "array"
            ]
          },
          "title": "List by Add-on Service"
        },
        {
          "description": "List existing add-on region capabilities for a region.",
          "href": "/regions/{(%23%2Fdefinitions%2Fregion%2Fdefinitions%2Fidentity)}/addon-region-capabilities",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on-region-capability"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_add-on-region-capability_definitions_id"
        },
        "supports_private_networking": {
          "$ref": "#/definitions/definitions_add-on-region-capability_definitions_supports_private_networking"
        },
        "addon_service": {
          "$ref": "#/definitions/add-on-service"
        },
        "region": {
          "$ref": "#/definitions/region"
        }
      }
    },
    "add-on-service": {
      "description": "Add-on services represent add-ons that may be provisioned for apps. Endpoints under add-on services can be accessed without authentication.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Add-on Service",
      "type": [
        "object"
      ],
      "definitions": {
        "cli_plugin_name": {
          "description": "npm package name of the add-on service\u0027s Heroku CLI plugin",
          "example": "heroku-papertrail",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "created_at": {
          "description": "when add-on-service was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "human_name": {
          "description": "human-readable name of the add-on service provider",
          "example": "Heroku Postgres",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this add-on-service",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_add-on-service_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_add-on-service_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name of this add-on-service",
          "example": "heroku-postgresql",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "release status for add-on service",
          "enum": [
            "alpha",
            "beta",
            "ga",
            "shutdown"
          ],
          "example": "ga",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "supports_multiple_installations": {
          "default": false,
          "description": "whether or not apps can have access to more than one instance of this add-on at the same time",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "supports_sharing": {
          "default": false,
          "description": "whether or not apps can have access to add-ons billed to a different app",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "updated_at": {
          "description": "when add-on-service was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Info for existing add-on-service.",
          "href": "/addon-services/{(%23%2Fdefinitions%2Fadd-on-service%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/add-on-service"
          },
          "title": "Info"
        },
        {
          "description": "List existing add-on-services.",
          "href": "/addon-services",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on-service"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "cli_plugin_name": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_cli_plugin_name"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_created_at"
        },
        "human_name": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_human_name"
        },
        "id": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_name"
        },
        "state": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_state"
        },
        "supports_multiple_installations": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_supports_multiple_installations"
        },
        "supports_sharing": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_supports_sharing"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_updated_at"
        }
      }
    },
    "add-on": {
      "description": "Add-ons represent add-ons that have been provisioned and attached to one or more apps.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Add-on",
      "type": [
        "object"
      ],
      "definitions": {
        "actions": {
          "description": "provider actions for this specific add-on",
          "type": [
            "array"
          ],
          "items": {
            "type": [
              "object"
            ]
          },
          "readOnly": true,
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_add-on-plan-action_definitions_id"
            },
            "label": {
              "$ref": "#/definitions/definitions_add-on-plan-action_definitions_label"
            },
            "action": {
              "$ref": "#/definitions/definitions_add-on-plan-action_definitions_action"
            },
            "url": {
              "$ref": "#/definitions/definitions_add-on-plan-action_definitions_url"
            },
            "requires_owner": {
              "$ref": "#/definitions/definitions_add-on-plan-action_definitions_requires_owner"
            }
          }
        },
        "config_vars": {
          "description": "config vars exposed to the owning app by this add-on",
          "example": [
            "FOO",
            "BAZ"
          ],
          "items": {
            "type": [
              "string"
            ]
          },
          "readOnly": true,
          "type": [
            "array"
          ]
        },
        "created_at": {
          "description": "when add-on was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of add-on",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_add-on_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_add-on_definitions_name"
            }
          ]
        },
        "name": {
          "description": "globally unique name of the add-on",
          "example": "acme-inc-primary-database",
          "pattern": "^[a-zA-Z][A-Za-z0-9_-]+$",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "provider_id": {
          "description": "id of this add-on with its provider",
          "example": "abcd1234",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "state in the add-on\u0027s lifecycle",
          "enum": [
            "provisioning",
            "provisioned",
            "deprovisioned"
          ],
          "example": "provisioned",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when add-on was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "web_url": {
          "description": "URL for logging into web interface of add-on (e.g. a dashboard)",
          "example": "https://postgres.heroku.com/databases/01234567-89ab-cdef-0123-456789abcdef",
          "format": "uri",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new add-on.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/addons",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "attachment": {
                "description": "name for add-on\u0027s initial attachment",
                "example": {
                  "name": "DATABASE_FOLLOWER"
                },
                "name": {
                  "$ref": "#/definitions/definitions_add-on-attachment_definitions_name"
                },
                "type": [
                  "object"
                ]
              },
              "config": {
                "additionalProperties": false,
                "description": "custom add-on provisioning options",
                "example": {
                  "db-version": "1.2.3"
                },
                "patternProperties": {
                  "^\\w+$": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "type": [
                  "object"
                ]
              },
              "plan": {
                "$ref": "#/definitions/definitions_plan_definitions_identity"
              }
            },
            "required": [
              "plan"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/add-on"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing add-on.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/addons/{(%23%2Fdefinitions%2Fadd-on%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/add-on"
          },
          "title": "Delete"
        },
        {
          "description": "Info for an existing add-on.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/addons/{(%23%2Fdefinitions%2Fadd-on%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/add-on"
          },
          "title": "Info"
        },
        {
          "description": "List all existing add-ons.",
          "href": "/addons",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Info for an existing add-on.",
          "href": "/addons/{(%23%2Fdefinitions%2Fadd-on%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/add-on"
          },
          "title": "Info"
        },
        {
          "description": "List all existing add-ons a user has access to",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}/addons",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on"
            },
            "type": [
              "array"
            ]
          },
          "title": "List by User"
        },
        {
          "description": "List existing add-ons for an app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/addons",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on"
            },
            "type": [
              "array"
            ]
          },
          "title": "List by App"
        },
        {
          "description": "Change add-on plan. Some add-ons may not support changing plans. In that case, an error will be returned.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/addons/{(%23%2Fdefinitions%2Fadd-on%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "plan": {
                "$ref": "#/definitions/definitions_plan_definitions_identity"
              }
            },
            "required": [
              "plan"
            ],
            "type": [
              "object"
            ]
          },
          "title": "Update"
        }
      ],
      "properties": {
        "actions": {
          "$ref": "#/definitions/definitions_add-on_definitions_actions"
        },
        "addon_service": {
          "description": "identity of add-on service",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_add-on-service_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_add-on-service_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "app": {
          "description": "billing application associated with this add-on",
          "type": [
            "object"
          ],
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            }
          },
          "strictProperties": true
        },
        "config_vars": {
          "$ref": "#/definitions/definitions_add-on_definitions_config_vars"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_add-on_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_add-on_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_add-on_definitions_name"
        },
        "plan": {
          "description": "identity of add-on plan",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_plan_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_plan_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "provider_id": {
          "$ref": "#/definitions/definitions_add-on_definitions_provider_id"
        },
        "state": {
          "$ref": "#/definitions/definitions_add-on_definitions_state"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_add-on_definitions_updated_at"
        },
        "web_url": {
          "$ref": "#/definitions/definitions_add-on_definitions_web_url"
        }
      }
    },
    "app-feature": {
      "description": "An app feature represents a Heroku labs capability that can be enabled or disabled for an app on Heroku.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - App Feature",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when app feature was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "description": {
          "description": "description of app feature",
          "example": "Causes app to example.",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "doc_url": {
          "description": "documentation URL of app feature",
          "example": "http://devcenter.heroku.com/articles/example",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "enabled": {
          "description": "whether or not app feature has been enabled",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "id": {
          "description": "unique identifier of app feature",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_app-feature_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_app-feature_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name of app feature",
          "example": "name",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "state of app feature",
          "example": "public",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when app feature was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Info for an existing app feature.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/features/{(%23%2Fdefinitions%2Fapp-feature%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/app-feature"
          },
          "title": "Info"
        },
        {
          "description": "List existing app features.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/features",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/app-feature"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Update an existing app feature.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/features/{(%23%2Fdefinitions%2Fapp-feature%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "enabled": {
                "$ref": "#/definitions/definitions_app-feature_definitions_enabled"
              }
            },
            "required": [
              "enabled"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/app-feature"
          },
          "title": "Update"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_app-feature_definitions_created_at"
        },
        "description": {
          "$ref": "#/definitions/definitions_app-feature_definitions_description"
        },
        "doc_url": {
          "$ref": "#/definitions/definitions_app-feature_definitions_doc_url"
        },
        "enabled": {
          "$ref": "#/definitions/definitions_app-feature_definitions_enabled"
        },
        "id": {
          "$ref": "#/definitions/definitions_app-feature_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_app-feature_definitions_name"
        },
        "state": {
          "$ref": "#/definitions/definitions_app-feature_definitions_state"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_app-feature_definitions_updated_at"
        }
      }
    },
    "app-setup": {
      "description": "An app setup represents an app on Heroku that is setup using an environment, addons, and scripts described in an app.json manifest file.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Setup API - App Setup",
      "type": [
        "object"
      ],
      "definitions": {
        "id": {
          "description": "unique identifier of app setup",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "type": [
            "string"
          ],
          "format": "uuid"
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_app-setup_definitions_id"
            }
          ]
        },
        "buildpack_override": {
          "description": "a buildpack override",
          "properties": {
            "url": {
              "description": "location of the buildpack",
              "example": "https://example.com/buildpack.tgz",
              "type": [
                "string"
              ]
            }
          },
          "type": [
            "object"
          ]
        },
        "created_at": {
          "description": "when app setup was created",
          "example": "2012-01-01T12:00:00Z",
          "readOnly": true,
          "type": [
            "string"
          ],
          "format": "date-time"
        },
        "updated_at": {
          "description": "when app setup was updated",
          "example": "2012-01-01T12:00:00Z",
          "readOnly": true,
          "type": [
            "string"
          ],
          "format": "date-time"
        },
        "status": {
          "description": "the overall status of app setup",
          "example": "failed",
          "enum": [
            "failed",
            "pending",
            "succeeded"
          ],
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "resolved_success_url": {
          "description": "fully qualified success url",
          "example": "https://example.herokuapp.com/welcome",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "failure_message": {
          "description": "reason that app setup has failed",
          "example": "invalid app.json",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "manifest_errors": {
          "description": "errors associated with invalid app.json manifest file",
          "example": [
            "config var FOO is required"
          ],
          "readOnly": true,
          "items": {
            "type": [
              "string"
            ]
          },
          "type": [
            "array"
          ]
        },
        "overrides": {
          "description": "overrides of keys in the app.json manifest file",
          "example": {
            "buildpacks": [
              {
                "url": "https://example.com/buildpack.tgz"
              }
            ],
            "env": {
              "FOO": "bar",
              "BAZ": "qux"
            }
          },
          "properties": {
            "buildpacks": {
              "description": "overrides the buildpacks specified in the app.json manifest file",
              "example": [
                {
                  "url": "https://example.com/buildpack.tgz"
                }
              ],
              "items": {
                "$ref": "#/definitions/definitions_app-setup_definitions_buildpack_override"
              },
              "type": [
                "array"
              ]
            },
            "env": {
              "description": "overrides of the env specified in the app.json manifest file",
              "example": {
                "FOO": "bar",
                "BAZ": "qux"
              },
              "readOnly": true,
              "additionalProperties": false,
              "patternProperties": {
                "^\\w+$": {
                  "type": [
                    "string"
                  ]
                }
              },
              "type": [
                "object"
              ]
            }
          },
          "type": [
            "object"
          ]
        },
        "postdeploy": {
          "description": "result of postdeploy script",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "output": {
              "description": "output of the postdeploy script",
              "example": "assets precompiled",
              "readOnly": true,
              "type": [
                "string"
              ]
            },
            "exit_code": {
              "description": "The exit code of the postdeploy script",
              "example": 1,
              "readOnly": true,
              "type": [
                "integer"
              ]
            }
          },
          "readOnly": true
        }
      },
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_app-setup_definitions_id"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_app-setup_definitions_created_at"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_app-setup_definitions_updated_at"
        },
        "status": {
          "$ref": "#/definitions/definitions_app-setup_definitions_status"
        },
        "failure_message": {
          "$ref": "#/definitions/definitions_app-setup_definitions_failure_message"
        },
        "app": {
          "description": "identity of app",
          "strictProperties": true,
          "type": [
            "object"
          ],
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            }
          }
        },
        "build": {
          "description": "identity and status of build",
          "strictProperties": true,
          "type": [
            "null",
            "object"
          ],
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_build_definitions_id"
            },
            "status": {
              "$ref": "#/definitions/definitions_build_definitions_status"
            },
            "output_stream_url": {
              "$ref": "#/definitions/definitions_build_definitions_output_stream_url"
            }
          }
        },
        "manifest_errors": {
          "$ref": "#/definitions/definitions_app-setup_definitions_manifest_errors"
        },
        "postdeploy": {
          "$ref": "#/definitions/definitions_app-setup_definitions_postdeploy"
        },
        "resolved_success_url": {
          "$ref": "#/definitions/definitions_app-setup_definitions_resolved_success_url"
        }
      },
      "links": [
        {
          "description": "Create a new app setup from a gzipped tar archive containing an app.json manifest file.",
          "title": "Create",
          "rel": "create",
          "method": "POST",
          "href": "/app-setups",
          "schema": {
            "required": [
              "source_blob"
            ],
            "type": [
              "object"
            ],
            "properties": {
              "app": {
                "description": "optional parameters for created app",
                "properties": {
                  "locked": {
                    "$ref": "#/definitions/definitions_organization-app_definitions_locked"
                  },
                  "name": {
                    "$ref": "#/definitions/definitions_app_definitions_name"
                  },
                  "organization": {
                    "$ref": "#/definitions/definitions_organization_definitions_name"
                  },
                  "personal": {
                    "$ref": "#/definitions/definitions_organization-app_definitions_personal"
                  },
                  "region": {
                    "$ref": "#/definitions/definitions_region_definitions_name"
                  },
                  "space": {
                    "$ref": "#/definitions/definitions_space_definitions_name"
                  },
                  "stack": {
                    "$ref": "#/definitions/definitions_stack_definitions_name"
                  }
                },
                "type": [
                  "object"
                ]
              },
              "source_blob": {
                "description": "gzipped tarball of source code containing app.json manifest file",
                "properties": {
                  "checksum": {
                    "description": "an optional checksum of the gzipped tarball for verifying its integrity",
                    "example": "SHA256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                    "readOnly": true,
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "url": {
                    "description": "URL of gzipped tarball of source code containing app.json manifest file",
                    "example": "https://example.com/source.tgz?token\u003dxyz",
                    "readOnly": true,
                    "type": [
                      "string"
                    ]
                  },
                  "version": {
                    "description": "Version of the gzipped tarball.",
                    "example": "v1.3.0",
                    "readOnly": true,
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "type": [
                  "object"
                ]
              },
              "overrides": {
                "$ref": "#/definitions/definitions_app-setup_definitions_overrides"
              }
            }
          },
          "targetSchema": {
            "$ref": "#/definitions/app-setup"
          }
        },
        {
          "description": "Get the status of an app setup.",
          "title": "Info",
          "rel": "self",
          "method": "GET",
          "href": "/app-setups/{(%23%2Fdefinitions%2Fapp-setup%2Fdefinitions%2Fidentity)}",
          "targetSchema": {
            "$ref": "#/definitions/app-setup"
          }
        }
      ]
    },
    "app-transfer": {
      "description": "An app transfer represents a two party interaction for transferring ownership of an app.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - App Transfer",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when app transfer was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of app transfer",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_app-transfer_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_app_definitions_name"
            }
          ]
        },
        "silent": {
          "default": false,
          "description": "whether to suppress email notification when transferring apps",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "state": {
          "description": "the current state of an app transfer",
          "enum": [
            "pending",
            "accepted",
            "declined"
          ],
          "example": "pending",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when app transfer was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new app transfer.",
          "href": "/account/app-transfers",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "app": {
                "$ref": "#/definitions/definitions_app_definitions_identity"
              },
              "recipient": {
                "$ref": "#/definitions/definitions_account_definitions_identity"
              },
              "silent": {
                "$ref": "#/definitions/definitions_app-transfer_definitions_silent"
              }
            },
            "required": [
              "app",
              "recipient"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/app-transfer"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing app transfer",
          "href": "/account/app-transfers/{(%23%2Fdefinitions%2Fapp-transfer%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/app-transfer"
          },
          "title": "Delete"
        },
        {
          "description": "Info for existing app transfer.",
          "href": "/account/app-transfers/{(%23%2Fdefinitions%2Fapp-transfer%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/app-transfer"
          },
          "title": "Info"
        },
        {
          "description": "List existing apps transfers.",
          "href": "/account/app-transfers",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/app-transfer"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Update an existing app transfer.",
          "href": "/account/app-transfers/{(%23%2Fdefinitions%2Fapp-transfer%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "state": {
                "$ref": "#/definitions/definitions_app-transfer_definitions_state"
              }
            },
            "required": [
              "state"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/app-transfer"
          },
          "title": "Update"
        }
      ],
      "properties": {
        "app": {
          "description": "app involved in the transfer",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            },
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_app-transfer_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_app-transfer_definitions_id"
        },
        "owner": {
          "description": "identity of the owner of the transfer",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "recipient": {
          "description": "identity of the recipient of the transfer",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "state": {
          "$ref": "#/definitions/definitions_app-transfer_definitions_state"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_app-transfer_definitions_updated_at"
        }
      }
    },
    "app": {
      "description": "An app represents the program that you would like to deploy and run on Heroku.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - App",
      "type": [
        "object"
      ],
      "definitions": {
        "archived_at": {
          "description": "when app was archived",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "buildpack_provided_description": {
          "description": "description from buildpack of app",
          "example": "Ruby/Rack",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "created_at": {
          "description": "when app was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "git_url": {
          "description": "git repo URL of app",
          "example": "https://git.heroku.com/example.git",
          "pattern": "^https://git\\.heroku\\.com/[a-z][a-z0-9-]{2,29}\\.git$",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of app",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_app_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_app_definitions_name"
            }
          ]
        },
        "maintenance": {
          "default": false,
          "description": "maintenance status of app",
          "example": false,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "name": {
          "description": "unique name of app",
          "example": "example",
          "pattern": "^[a-z][a-z0-9-]{2,29}$",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "released_at": {
          "description": "when app was released",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "repo_size": {
          "description": "git repo size in bytes of app",
          "example": 0,
          "readOnly": true,
          "type": [
            "integer",
            "null"
          ]
        },
        "slug_size": {
          "description": "slug size in bytes of app",
          "example": 0,
          "readOnly": true,
          "type": [
            "integer",
            "null"
          ]
        },
        "updated_at": {
          "description": "when app was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "web_url": {
          "description": "web URL of app",
          "example": "https://example.herokuapp.com/",
          "format": "uri",
          "pattern": "^https?://[a-z][a-z0-9-]{3,30}\\.herokuapp\\.com/$",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new app.",
          "href": "/apps",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/definitions_app_definitions_name"
              },
              "region": {
                "$ref": "#/definitions/definitions_region_definitions_identity"
              },
              "stack": {
                "$ref": "#/definitions/definitions_stack_definitions_identity"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/app"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/app"
          },
          "title": "Delete"
        },
        {
          "description": "Info for existing app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/app"
          },
          "title": "Info"
        },
        {
          "description": "List existing apps.",
          "href": "/apps",
          "method": "GET",
          "ranges": [
            "id",
            "name",
            "updated_at"
          ],
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/app"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "List owned and collaborated apps (excludes organization apps).",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}/apps",
          "method": "GET",
          "ranges": [
            "id",
            "name",
            "updated_at"
          ],
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/app"
            },
            "type": [
              "array"
            ]
          },
          "title": "List Owned and Collaborated"
        },
        {
          "description": "Update an existing app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "build_stack": {
                "$ref": "#/definitions/definitions_stack_definitions_identity"
              },
              "maintenance": {
                "$ref": "#/definitions/definitions_app_definitions_maintenance"
              },
              "name": {
                "$ref": "#/definitions/definitions_app_definitions_name"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/app"
          },
          "title": "Update"
        }
      ],
      "properties": {
        "archived_at": {
          "$ref": "#/definitions/definitions_app_definitions_archived_at"
        },
        "buildpack_provided_description": {
          "$ref": "#/definitions/definitions_app_definitions_buildpack_provided_description"
        },
        "build_stack": {
          "description": "identity of the stack that will be used for new builds",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_stack_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_stack_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_app_definitions_created_at"
        },
        "git_url": {
          "$ref": "#/definitions/definitions_app_definitions_git_url"
        },
        "id": {
          "$ref": "#/definitions/definitions_app_definitions_id"
        },
        "maintenance": {
          "$ref": "#/definitions/definitions_app_definitions_maintenance"
        },
        "name": {
          "$ref": "#/definitions/definitions_app_definitions_name"
        },
        "owner": {
          "description": "identity of app owner",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "organization": {
          "description": "identity of organization",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_organization_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_organization_definitions_name"
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "region": {
          "description": "identity of app region",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_region_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_region_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "released_at": {
          "$ref": "#/definitions/definitions_app_definitions_released_at"
        },
        "repo_size": {
          "$ref": "#/definitions/definitions_app_definitions_repo_size"
        },
        "slug_size": {
          "$ref": "#/definitions/definitions_app_definitions_slug_size"
        },
        "space": {
          "description": "identity of space",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_space_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_space_definitions_name"
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "stack": {
          "description": "identity of app stack",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_stack_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_stack_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_app_definitions_updated_at"
        },
        "web_url": {
          "$ref": "#/definitions/definitions_app_definitions_web_url"
        }
      }
    },
    "build-result": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "deactivate_on": "2016-10-01",
      "description": "A build result contains the output from a build.",
      "title": "Heroku Build API - Build Result",
      "stability": "deprecation",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {},
        "exit_code": {
          "description": "status from the build",
          "example": 0,
          "readOnly": true,
          "type": [
            "number"
          ]
        },
        "line": {
          "description": "a single line of output to STDOUT or STDERR from the build.",
          "strictProperties": true,
          "type": [
            "object"
          ],
          "example": {
            "stream": "STDOUT",
            "line": "-----\u003e Ruby app detected\n"
          },
          "readOnly": true,
          "definitions": {
            "stream": {
              "type": [
                "string"
              ],
              "enum": [
                "STDOUT",
                "STDERR"
              ],
              "description": "The output stream where the line was sent.",
              "example": "STDOUT",
              "readOnly": true
            },
            "line": {
              "type": [
                "string"
              ],
              "example": "-----\u003e Ruby app detected\n",
              "readOnly": true,
              "description": "A line of output from the build."
            }
          },
          "properties": {
            "stream": {
              "$ref": "#/definitions/definitions_build-result_definitions_line_definitions_stream"
            },
            "line": {
              "$ref": "#/definitions/definitions_build-result_definitions_line_definitions_line"
            }
          }
        }
      },
      "links": [
        {
          "description": "Info for existing result.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/builds/{(%23%2Fdefinitions%2Fbuild%2Fdefinitions%2Fidentity)}/result",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/build-result"
          },
          "title": "Info"
        }
      ],
      "properties": {
        "build": {
          "description": "identity of build",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_build_definitions_id"
            },
            "status": {
              "$ref": "#/definitions/definitions_build_definitions_status"
            },
            "output_stream_url": {
              "$ref": "#/definitions/definitions_build_definitions_output_stream_url"
            }
          },
          "type": [
            "object"
          ]
        },
        "exit_code": {
          "$ref": "#/definitions/definitions_build-result_definitions_exit_code"
        },
        "lines": {
          "type": [
            "array"
          ],
          "items": {
            "$ref": "#/definitions/definitions_build-result_definitions_line"
          },
          "description": "A list of all the lines of a build\u0027s output. This has been replaced by the `output_stream_url` attribute on the build resource.",
          "example": [
            {
              "line": "-----\u003e Ruby app detected\n",
              "stream": "STDOUT"
            }
          ]
        }
      }
    },
    "build": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "A build represents the process of transforming a code tarball into a slug",
      "title": "Heroku Build API - Build",
      "stability": "production",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "buildpacks": {
          "description": "buildpacks executed for this build, in order",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Buildpack to execute in a build",
            "type": [
              "object"
            ],
            "properties": {
              "url": {
                "$ref": "#/definitions/definitions_buildpack-installation_definitions_url"
              }
            }
          }
        },
        "created_at": {
          "description": "when build was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of build",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_build_definitions_id"
            }
          ]
        },
        "output_stream_url": {
          "description": "Build process output will be available from this URL as a stream. The stream is available as either `text/plain` or `text/event-stream`. Clients should be prepared to handle disconnects and can resume the stream by sending a `Range` header (for `text/plain`) or a `Last-Event-Id` header (for `text/event-stream`).",
          "example": "https://build-output.heroku.com/streams/01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "release": {
          "description": "release resulting from the build",
          "strictProperties": true,
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_release_definitions_id"
            }
          },
          "example": {},
          "readOnly": true,
          "type": [
            "null",
            "object"
          ],
          "definitions": {
            "id": {
              "description": "unique identifier of release",
              "example": "01234567-89ab-cdef-0123-456789abcdef",
              "type": [
                "string"
              ]
            }
          }
        },
        "source_blob": {
          "description": "location of gzipped tarball of source code used to create build",
          "properties": {
            "checksum": {
              "description": "an optional checksum of the gzipped tarball for verifying its integrity",
              "example": "SHA256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
              "readOnly": true,
              "type": [
                "null",
                "string"
              ]
            },
            "url": {
              "description": "URL where gzipped tar archive of source code for build was downloaded.",
              "example": "https://example.com/source.tgz?token\u003dxyz",
              "readOnly": true,
              "type": [
                "string"
              ]
            },
            "version": {
              "description": "Version of the gzipped tarball.",
              "example": "v1.3.0",
              "readOnly": true,
              "type": [
                "string",
                "null"
              ]
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "status": {
          "description": "status of build",
          "enum": [
            "failed",
            "pending",
            "succeeded"
          ],
          "example": "succeeded",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when build was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new build.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/builds",
          "method": "POST",
          "rel": "create",
          "schema": {
            "type": [
              "object"
            ],
            "properties": {
              "buildpacks": {
                "$ref": "#/definitions/definitions_build_definitions_buildpacks"
              },
              "source_blob": {
                "$ref": "#/definitions/definitions_build_definitions_source_blob"
              }
            },
            "required": [
              "source_blob"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/build"
          },
          "title": "Create"
        },
        {
          "description": "Info for existing build.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/builds/{(%23%2Fdefinitions%2Fbuild%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/build"
          },
          "title": "Info"
        },
        {
          "description": "List existing build.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/builds",
          "method": "GET",
          "ranges": [
            "id",
            "started_at"
          ],
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/build"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "app": {
          "description": "app that the build belongs to",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "buildpacks": {
          "$ref": "#/definitions/definitions_build_definitions_buildpacks"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_build_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_build_definitions_id"
        },
        "output_stream_url": {
          "$ref": "#/definitions/definitions_build_definitions_output_stream_url"
        },
        "source_blob": {
          "$ref": "#/definitions/definitions_build_definitions_source_blob"
        },
        "release": {
          "$ref": "#/definitions/definitions_build_definitions_release"
        },
        "slug": {
          "description": "slug created by this build",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_slug_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object",
            "null"
          ]
        },
        "status": {
          "$ref": "#/definitions/definitions_build_definitions_status"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_build_definitions_updated_at"
        },
        "user": {
          "description": "user that started the build",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            },
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "buildpack-installation": {
      "description": "A buildpack installation represents a buildpack that will be run against an app.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Buildpack Installations",
      "type": [
        "object"
      ],
      "definitions": {
        "ordinal": {
          "description": "determines the order in which the buildpacks will execute",
          "example": 0,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "update": {
          "additionalProperties": false,
          "description": "Properties to update a buildpack installation",
          "properties": {
            "buildpack": {
              "$ref": "#/definitions/definitions_buildpack-installation_definitions_url"
            }
          },
          "readOnly": false,
          "required": [
            "buildpack"
          ],
          "type": [
            "object"
          ]
        },
        "url": {
          "description": "location of the buildpack for the app. Either a url (unofficial buildpacks) or an internal urn (heroku official buildpacks).",
          "example": "https://github.com/heroku/heroku-buildpack-ruby",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "name": {
          "description": "either the shorthand name (heroku official buildpacks) or url (unofficial buildpacks) of the buildpack for the app",
          "example": "heroku/ruby",
          "readOnly": false,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Update an app\u0027s buildpack installations.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/buildpack-installations",
          "method": "PUT",
          "rel": "update",
          "schema": {
            "properties": {
              "updates": {
                "description": "The buildpack attribute can accept a name, a url, or a urn.",
                "items": {
                  "$ref": "#/definitions/definitions_buildpack-installation_definitions_update"
                },
                "type": [
                  "array"
                ]
              }
            },
            "required": [
              "updates"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/buildpack-installation"
            },
            "type": [
              "array"
            ]
          },
          "title": "Update"
        },
        {
          "description": "List an app\u0027s existing buildpack installations.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/buildpack-installations",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/buildpack-installation"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "ordinal": {
          "$ref": "#/definitions/definitions_buildpack-installation_definitions_ordinal"
        },
        "buildpack": {
          "description": "buildpack",
          "properties": {
            "url": {
              "$ref": "#/definitions/definitions_buildpack-installation_definitions_url"
            },
            "name": {
              "$ref": "#/definitions/definitions_buildpack-installation_definitions_name"
            }
          },
          "type": [
            "object"
          ]
        }
      }
    },
    "collaborator": {
      "description": "A collaborator represents an account that has been given access to an app on Heroku.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "additionalProperties": false,
      "required": [
        "app",
        "created_at",
        "id",
        "updated_at",
        "user"
      ],
      "stability": "production",
      "title": "Heroku Platform API - Collaborator",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when collaborator was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "email": {
          "description": "invited email address of collaborator",
          "example": "collaborator@example.com",
          "format": "email",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of collaborator",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_collaborator_definitions_email"
            },
            {
              "$ref": "#/definitions/definitions_collaborator_definitions_id"
            }
          ]
        },
        "silent": {
          "default": false,
          "description": "whether to suppress email invitation when creating collaborator",
          "example": false,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "updated_at": {
          "description": "when collaborator was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new collaborator.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/collaborators",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "silent": {
                "$ref": "#/definitions/definitions_collaborator_definitions_silent"
              },
              "user": {
                "$ref": "#/definitions/definitions_account_definitions_identity"
              }
            },
            "required": [
              "user"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/collaborator"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing collaborator.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/collaborators/{(%23%2Fdefinitions%2Fcollaborator%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/collaborator"
          },
          "title": "Delete"
        },
        {
          "description": "Info for existing collaborator.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/collaborators/{(%23%2Fdefinitions%2Fcollaborator%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/collaborator"
          },
          "title": "Info"
        },
        {
          "description": "List existing collaborators.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/collaborators",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/collaborator"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "app": {
          "description": "app collaborator belongs to",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            },
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_collaborator_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_collaborator_definitions_id"
        },
        "permissions": {
          "type": [
            "array"
          ],
          "items": {
            "$ref": "#/definitions/organization-app-permission"
          }
        },
        "role": {
          "$ref": "#/definitions/definitions_organization_definitions_role"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_collaborator_definitions_updated_at"
        },
        "user": {
          "description": "identity of collaborated account",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "federated": {
              "$ref": "#/definitions/definitions_account_definitions_federated"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "config-var": {
      "description": "Config Vars allow you to manage the configuration information provided to an app on Heroku.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Config Vars",
      "type": [
        "object"
      ],
      "definitions": {
        "config_vars": {
          "additionalProperties": false,
          "description": "hash of config vars",
          "example": {
            "FOO": "bar",
            "BAZ": "qux"
          },
          "patternProperties": {
            "^\\w+$": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "type": [
            "object"
          ]
        }
      },
      "links": [
        {
          "description": "Get config-vars for app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/config-vars",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/definitions_config-var_definitions_config_vars"
          },
          "title": "Info for App"
        },
        {
          "description": "Get config-vars for a release.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/releases/{(%23%2Fdefinitions%2Frelease%2Fdefinitions%2Fidentity)}/config-vars",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/definitions_config-var_definitions_config_vars"
          },
          "title": "Info for App Release"
        },
        {
          "description": "Update config-vars for app. You can update existing config-vars by setting them again, and remove by setting it to `null`.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/config-vars",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "additionalProperties": false,
            "description": "hash of config changes – update values or delete by seting it to `null`",
            "example": {
              "FOO": "bar",
              "BAZ": "qux"
            },
            "patternProperties": {
              "^\\w+$": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/definitions_config-var_definitions_config_vars"
          },
          "title": "Update"
        }
      ],
      "example": {
        "FOO": "bar",
        "BAZ": "qux"
      },
      "patternProperties": {
        "^\\w+$": {
          "type": [
            "string"
          ]
        }
      }
    },
    "credit": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "A credit represents value that will be used up before further charges are assigned to an account.",
      "stability": "development",
      "strictProperties": true,
      "title": "Heroku Platform API - Credit",
      "type": [
        "object"
      ],
      "definitions": {
        "amount": {
          "description": "total value of credit in cents",
          "example": 10000,
          "type": [
            "number"
          ]
        },
        "balance": {
          "description": "remaining value of credit in cents",
          "example": 5000,
          "type": [
            "number"
          ]
        },
        "created_at": {
          "description": "when credit was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        },
        "expires_at": {
          "description": "when credit will expire",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of credit",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_credit_definitions_id"
            }
          ]
        },
        "title": {
          "description": "a name for credit",
          "example": "gift card",
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when credit was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new credit.",
          "href": "/account/credits",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "code1": {
                "description": "first code from a discount card",
                "example": "012abc",
                "type": [
                  "string"
                ]
              },
              "code2": {
                "description": "second code from a discount card",
                "example": "012abc",
                "type": [
                  "string"
                ]
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/credit"
          },
          "title": "Create"
        },
        {
          "description": "Info for existing credit.",
          "href": "/account/credits/{(%23%2Fdefinitions%2Fcredit%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/credit"
          },
          "title": "Info"
        },
        {
          "description": "List existing credits.",
          "href": "/account/credits",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/credit"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/definitions_credit_definitions_amount"
        },
        "balance": {
          "$ref": "#/definitions/definitions_credit_definitions_balance"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_credit_definitions_created_at"
        },
        "expires_at": {
          "$ref": "#/definitions/definitions_credit_definitions_expires_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_credit_definitions_id"
        },
        "title": {
          "$ref": "#/definitions/definitions_credit_definitions_title"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_credit_definitions_updated_at"
        }
      }
    },
    "domain": {
      "description": "Domains define what web routes should be routed to an app on Heroku.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Domain",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when domain was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "cname": {
          "description": "canonical name record, the address to point a domain at",
          "example": "example.herokudns.com",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "status": {
          "description": "status of this record\u0027s cname",
          "example": "pending",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "hostname": {
          "description": "full hostname",
          "example": "subdomain.example.com",
          "format": "uri",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this domain",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_domain_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_domain_definitions_hostname"
            }
          ]
        },
        "kind": {
          "description": "type of domain name",
          "enum": [
            "heroku",
            "custom"
          ],
          "example": "custom",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when domain was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new domain.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/domains",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "hostname": {
                "$ref": "#/definitions/definitions_domain_definitions_hostname"
              }
            },
            "required": [
              "hostname"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/domain"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing domain",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/domains/{(%23%2Fdefinitions%2Fdomain%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/domain"
          },
          "title": "Delete"
        },
        {
          "description": "Info for existing domain.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/domains/{(%23%2Fdefinitions%2Fdomain%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/domain"
          },
          "title": "Info"
        },
        {
          "description": "List existing domains.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/domains",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/domain"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "app": {
          "description": "app that owns the domain",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            },
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "type": [
            "object"
          ]
        },
        "cname": {
          "$ref": "#/definitions/definitions_domain_definitions_cname"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_domain_definitions_created_at"
        },
        "hostname": {
          "$ref": "#/definitions/definitions_domain_definitions_hostname"
        },
        "id": {
          "$ref": "#/definitions/definitions_domain_definitions_id"
        },
        "kind": {
          "$ref": "#/definitions/definitions_domain_definitions_kind"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_domain_definitions_updated_at"
        },
        "status": {
          "$ref": "#/definitions/definitions_domain_definitions_status"
        }
      }
    },
    "dyno": {
      "description": "Dynos encapsulate running processes of an app on Heroku. Detailed information about dyno sizes can be found at: [https://devcenter.heroku.com/articles/dyno-types](https://devcenter.heroku.com/articles/dyno-types).",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Dyno",
      "type": [
        "object"
      ],
      "definitions": {
        "attach": {
          "description": "whether to stream output or not",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "attach_url": {
          "description": "a URL to stream output from for attached processes or null for non-attached processes",
          "example": "rendezvous://rendezvous.runtime.heroku.com:5000/{rendezvous-id}",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "command": {
          "description": "command used to start this process",
          "example": "bash",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when dyno was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "env": {
          "additionalProperties": false,
          "description": "custom environment to add to the dyno config vars",
          "example": {
            "COLUMNS": "80",
            "LINES": "24"
          },
          "patternProperties": {
            "^\\w+$": {
              "type": [
                "string"
              ]
            }
          },
          "readOnly": false,
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "id": {
          "description": "unique identifier of this dyno",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_dyno_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_dyno_definitions_name"
            }
          ]
        },
        "name": {
          "description": "the name of this process on this dyno",
          "example": "run.1",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "force_no_tty": {
          "description": "force an attached one-off dyno to not run in a tty",
          "readOnly": false,
          "type": [
            "boolean",
            "null"
          ]
        },
        "size": {
          "description": "dyno size (default: \"standard-1X\")",
          "example": "standard-1X",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "current status of process (either: crashed, down, idle, starting, or up)",
          "example": "up",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "type": {
          "description": "type of process",
          "example": "run",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "time_to_live": {
          "description": "seconds until dyno expires, after which it will soon be killed",
          "example": 1800,
          "readOnly": false,
          "type": [
            "integer"
          ]
        },
        "updated_at": {
          "description": "when process last changed state",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new dyno.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/dynos",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "attach": {
                "$ref": "#/definitions/definitions_dyno_definitions_attach"
              },
              "command": {
                "$ref": "#/definitions/definitions_dyno_definitions_command"
              },
              "env": {
                "$ref": "#/definitions/definitions_dyno_definitions_env"
              },
              "force_no_tty": {
                "$ref": "#/definitions/definitions_dyno_definitions_force_no_tty"
              },
              "size": {
                "$ref": "#/definitions/definitions_dyno_definitions_size"
              },
              "type": {
                "$ref": "#/definitions/definitions_dyno_definitions_type"
              },
              "time_to_live": {
                "$ref": "#/definitions/definitions_dyno_definitions_time_to_live"
              }
            },
            "required": [
              "command"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/dyno"
          },
          "title": "Create"
        },
        {
          "description": "Restart dyno.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/dynos/{(%23%2Fdefinitions%2Fdyno%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "empty",
          "targetSchema": {
            "additionalPoperties": false,
            "type": [
              "object"
            ]
          },
          "title": "Restart"
        },
        {
          "description": "Restart all dynos.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/dynos",
          "method": "DELETE",
          "rel": "empty",
          "targetSchema": {
            "additionalPoperties": false,
            "type": [
              "object"
            ]
          },
          "title": "Restart all"
        },
        {
          "description": "Stop dyno.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/dynos/{(%23%2Fdefinitions%2Fdyno%2Fdefinitions%2Fidentity)}/actions/stop",
          "method": "POST",
          "rel": "empty",
          "targetSchema": {
            "additionalPoperties": false,
            "type": [
              "object"
            ]
          },
          "title": "Stop"
        },
        {
          "description": "Info for existing dyno.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/dynos/{(%23%2Fdefinitions%2Fdyno%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/dyno"
          },
          "title": "Info"
        },
        {
          "description": "List existing dynos.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/dynos",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/dyno"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "attach_url": {
          "$ref": "#/definitions/definitions_dyno_definitions_attach_url"
        },
        "command": {
          "$ref": "#/definitions/definitions_dyno_definitions_command"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_dyno_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_dyno_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_dyno_definitions_name"
        },
        "release": {
          "description": "app release of the dyno",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_release_definitions_id"
            },
            "version": {
              "$ref": "#/definitions/definitions_release_definitions_version"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "app": {
          "description": "app formation belongs to",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            },
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "type": [
            "object"
          ]
        },
        "size": {
          "$ref": "#/definitions/definitions_dyno_definitions_size"
        },
        "state": {
          "$ref": "#/definitions/definitions_dyno_definitions_state"
        },
        "type": {
          "$ref": "#/definitions/definitions_dyno_definitions_type"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_dyno_definitions_updated_at"
        }
      }
    },
    "event": {
      "description": "An event represents an action performed on another API resource.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "development",
      "strictProperties": true,
      "title": "Heroku Platform API - Event",
      "type": [
        "object"
      ],
      "definitions": {
        "action": {
          "description": "the operation performed on the resource",
          "enum": [
            "create",
            "destroy",
            "update"
          ],
          "example": "create",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when the event was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "data": {
          "description": "the serialized resource affected by the event",
          "example": {},
          "anyOf": [
            {
              "$ref": "#/definitions/account"
            },
            {
              "$ref": "#/definitions/add-on"
            },
            {
              "$ref": "#/definitions/add-on-attachment"
            },
            {
              "$ref": "#/definitions/app"
            },
            {
              "$ref": "#/definitions/app-setup"
            },
            {
              "$ref": "#/definitions/app-transfer"
            },
            {
              "$ref": "#/definitions/build"
            },
            {
              "$ref": "#/definitions/collaborator"
            },
            {
              "$ref": "#/definitions/domain"
            },
            {
              "$ref": "#/definitions/dyno"
            },
            {
              "$ref": "#/definitions/failed-event"
            },
            {
              "$ref": "#/definitions/formation"
            },
            {
              "$ref": "#/definitions/organization"
            },
            {
              "$ref": "#/definitions/release"
            },
            {
              "$ref": "#/definitions/space"
            }
          ],
          "readOnly": true,
          "type": [
            "object"
          ]
        },
        "id": {
          "description": "unique identifier of an event",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_event_definitions_id"
            }
          ]
        },
        "published_at": {
          "description": "when the event was published",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "resource": {
          "description": "the type of resource affected",
          "enum": [
            "addon",
            "addon-attachment",
            "app",
            "app-setup",
            "app-transfer",
            "build",
            "collaborator",
            "domain",
            "dyno",
            "failed-event",
            "formation",
            "organization",
            "release",
            "space",
            "user"
          ],
          "example": "app",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "sequence": {
          "description": "a numeric string representing the event\u0027s sequence",
          "example": "1234567890",
          "pattern": "^[0-9]{1,128}$",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "updated_at": {
          "description": "when the event was updated (same as created)",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "version": {
          "description": "the event\u0027s API version string",
          "example": "application/vnd.heroku+json; version\u003d3",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [],
      "properties": {
        "action": {
          "$ref": "#/definitions/definitions_event_definitions_action"
        },
        "actor": {
          "description": "user that performed the operation",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_event_definitions_created_at"
        },
        "data": {
          "$ref": "#/definitions/definitions_event_definitions_data"
        },
        "id": {
          "$ref": "#/definitions/definitions_event_definitions_id"
        },
        "previous_data": {
          "description": "data fields that were changed during update with previous values",
          "type": [
            "object"
          ]
        },
        "published_at": {
          "$ref": "#/definitions/definitions_event_definitions_published_at"
        },
        "resource": {
          "$ref": "#/definitions/definitions_event_definitions_resource"
        },
        "sequence": {
          "$ref": "#/definitions/definitions_event_definitions_sequence"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_event_definitions_updated_at"
        },
        "version": {
          "$ref": "#/definitions/definitions_event_definitions_version"
        }
      }
    },
    "failed-event": {
      "description": "A failed event represents a failure of an action performed on another API resource.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "development",
      "strictProperties": true,
      "title": "Heroku Platform API - Failed Event",
      "type": [
        "object"
      ],
      "definitions": {
        "action": {
          "description": "The attempted operation performed on the resource.",
          "enum": [
            "create",
            "destroy",
            "update",
            "unknown"
          ],
          "example": "create",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "error_id": {
          "description": "ID of error raised.",
          "example": "rate_limit",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "message": {
          "description": "A detailed error message.",
          "example": "Your account reached the API rate limit\nPlease wait a few minutes before making new requests",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "method": {
          "description": "The HTTP method type of the failed action.",
          "enum": [
            "DELETE",
            "GET",
            "HEAD",
            "OPTIONS",
            "PATCH",
            "POST",
            "PUT"
          ],
          "example": "POST",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "code": {
          "description": "An HTTP status code.",
          "example": 404,
          "readOnly": true,
          "type": [
            "integer",
            "null"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_event_definitions_id"
            }
          ]
        },
        "path": {
          "description": "The path of the attempted operation.",
          "example": "/apps/my-app",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "resource_id": {
          "description": "Unique identifier of a resource.",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [],
      "properties": {
        "action": {
          "$ref": "#/definitions/definitions_failed-event_definitions_action"
        },
        "code": {
          "$ref": "#/definitions/definitions_failed-event_definitions_code"
        },
        "error_id": {
          "$ref": "#/definitions/definitions_failed-event_definitions_error_id"
        },
        "message": {
          "$ref": "#/definitions/definitions_failed-event_definitions_message"
        },
        "method": {
          "$ref": "#/definitions/definitions_failed-event_definitions_method"
        },
        "path": {
          "$ref": "#/definitions/definitions_failed-event_definitions_path"
        },
        "resource": {
          "description": "The related resource of the failed action.",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_failed-event_definitions_resource_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_event_definitions_resource"
            }
          },
          "strictProperties": true,
          "type": [
            "object",
            "null"
          ]
        }
      }
    },
    "filter-apps": {
      "description": "Filters are special endpoints to allow for API consumers to specify a subset of resources to consume in order to reduce the number of requests that are performed.  Each filter endpoint endpoint is responsible for determining its supported request format.  The endpoints are over POST in order to handle large request bodies without hitting request uri query length limitations, but the requests themselves are idempotent and will not have side effects.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "development",
      "title": "Heroku Platform API - Filters",
      "type": [
        "object"
      ],
      "definitions": {
        "filter": {
          "type": [
            "object"
          ],
          "properties": {
            "in": {
              "$ref": "#/definitions/definitions_filter-apps_definitions_in"
            }
          }
        },
        "in": {
          "type": [
            "object"
          ],
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_filter-apps_definitions_id"
            }
          }
        },
        "id": {
          "type": [
            "array"
          ],
          "items": {
            "$ref": "#/definitions/definitions_app_definitions_id"
          }
        }
      },
      "links": [
        {
          "description": "Request an apps list filtered by app id.",
          "title": "Apps",
          "href": "/filters/apps",
          "method": "POST",
          "ranges": [
            "id",
            "name",
            "updated_at"
          ],
          "rel": "instances",
          "schema": {
            "$ref": "#/definitions/definitions_filter-apps_definitions_filter"
          },
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-app"
            },
            "type": [
              "array"
            ]
          }
        }
      ]
    },
    "formation": {
      "description": "The formation of processes that should be maintained for an app. Update the formation to scale processes or change dyno sizes. Available process type names and commands are defined by the `process_types` attribute for the [slug](#slug) currently released on an app.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Formation",
      "type": [
        "object"
      ],
      "definitions": {
        "command": {
          "description": "command to use to launch this process",
          "example": "bundle exec rails server -p $PORT",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when process type was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this process type",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_formation_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_formation_definitions_type"
            }
          ]
        },
        "quantity": {
          "description": "number of processes to maintain",
          "example": 1,
          "readOnly": false,
          "type": [
            "integer"
          ]
        },
        "size": {
          "description": "dyno size (default: \"standard-1X\")",
          "example": "standard-1X",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "type": {
          "description": "type of process to maintain",
          "example": "web",
          "readOnly": true,
          "pattern": "^[-\\w]{1,128}$",
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when dyno type was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "update": {
          "additionalProperties": false,
          "description": "Properties to update a process type",
          "properties": {
            "quantity": {
              "$ref": "#/definitions/definitions_formation_definitions_quantity"
            },
            "size": {
              "$ref": "#/definitions/definitions_formation_definitions_size"
            },
            "type": {
              "$ref": "#/definitions/definitions_formation_definitions_type"
            }
          },
          "readOnly": false,
          "required": [
            "type"
          ],
          "type": [
            "object"
          ]
        }
      },
      "links": [
        {
          "description": "Info for a process type",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/formation/{(%23%2Fdefinitions%2Fformation%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/formation"
          },
          "title": "Info"
        },
        {
          "description": "List process type formation",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/formation",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/formation"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Batch update process types",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/formation",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "updates": {
                "type": [
                  "array"
                ],
                "items": {
                  "$ref": "#/definitions/definitions_formation_definitions_update"
                },
                "description": "Array with formation updates. Each element must have \"type\", the id or name of the process type to be updated, and can optionally update its \"quantity\" or \"size\"."
              }
            },
            "required": [
              "updates"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/formation"
            },
            "type": [
              "array"
            ]
          },
          "title": "Batch update"
        },
        {
          "description": "Update process type",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/formation/{(%23%2Fdefinitions%2Fformation%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "quantity": {
                "$ref": "#/definitions/definitions_formation_definitions_quantity"
              },
              "size": {
                "$ref": "#/definitions/definitions_formation_definitions_size"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/formation"
          },
          "title": "Update",
          "type": [
            "object"
          ]
        }
      ],
      "properties": {
        "app": {
          "description": "app formation belongs to",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            },
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "type": [
            "object"
          ]
        },
        "command": {
          "$ref": "#/definitions/definitions_formation_definitions_command"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_formation_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_formation_definitions_id"
        },
        "quantity": {
          "$ref": "#/definitions/definitions_formation_definitions_quantity"
        },
        "size": {
          "$ref": "#/definitions/definitions_formation_definitions_size"
        },
        "type": {
          "$ref": "#/definitions/definitions_formation_definitions_type"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_formation_definitions_updated_at"
        }
      }
    },
    "identity-provider": {
      "description": "Identity Providers represent the SAML configuration of an Organization.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Identity Provider",
      "type": [
        "object"
      ],
      "definitions": {
        "certificate": {
          "description": "raw contents of the public certificate (eg: .crt or .pem file)",
          "example": "-----BEGIN CERTIFICATE----- ...",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when provider record was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "entity_id": {
          "description": "URL identifier provided by the identity provider",
          "example": "https://customer-domain.idp.com",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this identity provider",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "slo_target_url": {
          "description": "single log out URL for this identity provider",
          "example": "https://example.com/idp/logout",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "sso_target_url": {
          "description": "single sign on URL for this identity provider",
          "example": "https://example.com/idp/login",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when the identity provider record was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Get a list of an organization\u0027s Identity Providers",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fname)}/identity-providers",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/identity-provider"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Create an Identity Provider for an organization",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fname)}/identity-providers",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "certificate": {
                "$ref": "#/definitions/definitions_identity-provider_definitions_certificate"
              },
              "entity_id": {
                "$ref": "#/definitions/definitions_identity-provider_definitions_entity_id"
              },
              "slo_target_url": {
                "$ref": "#/definitions/definitions_identity-provider_definitions_slo_target_url"
              },
              "sso_target_url": {
                "$ref": "#/definitions/definitions_identity-provider_definitions_sso_target_url"
              }
            },
            "required": [
              "certificate",
              "sso_target_url",
              "entity_id"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/identity-provider"
          },
          "title": "Create"
        },
        {
          "description": "Update an organization\u0027s Identity Provider",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fname)}/identity-providers/{(%23%2Fdefinitions%2Fidentity-provider%2Fdefinitions%2Fid)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "certificate": {
                "$ref": "#/definitions/definitions_identity-provider_definitions_certificate"
              },
              "entity_id": {
                "$ref": "#/definitions/definitions_identity-provider_definitions_entity_id"
              },
              "slo_target_url": {
                "$ref": "#/definitions/definitions_identity-provider_definitions_slo_target_url"
              },
              "sso_target_url": {
                "$ref": "#/definitions/definitions_identity-provider_definitions_sso_target_url"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/identity-provider"
          },
          "title": "Update"
        },
        {
          "description": "Delete an organization\u0027s Identity Provider",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fname)}/identity-providers/{(%23%2Fdefinitions%2Fidentity-provider%2Fdefinitions%2Fid)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/identity-provider"
          },
          "title": "Delete"
        }
      ],
      "properties": {
        "certificate": {
          "$ref": "#/definitions/definitions_identity-provider_definitions_certificate"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_identity-provider_definitions_created_at"
        },
        "entity_id": {
          "$ref": "#/definitions/definitions_identity-provider_definitions_entity_id"
        },
        "id": {
          "$ref": "#/definitions/definitions_identity-provider_definitions_id"
        },
        "slo_target_url": {
          "$ref": "#/definitions/definitions_identity-provider_definitions_slo_target_url"
        },
        "sso_target_url": {
          "$ref": "#/definitions/definitions_identity-provider_definitions_sso_target_url"
        },
        "organization": {
          "description": "organization associated with this identity provider",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_organization_definitions_name"
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_identity-provider_definitions_updated_at"
        }
      }
    },
    "inbound-ruleset": {
      "description": "An inbound-ruleset is a collection of rules that specify what hosts can or cannot connect to an application.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Inbound Ruleset",
      "type": [
        "object"
      ],
      "definitions": {
        "action": {
          "description": "states whether the connection is allowed or denied",
          "example": "allow",
          "readOnly": false,
          "type": [
            "string"
          ],
          "enum": [
            "allow",
            "deny"
          ]
        },
        "source": {
          "description": "is the request’s source in CIDR notation",
          "example": "1.1.1.1/1",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when inbound-ruleset was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of an inbound-ruleset",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_inbound-ruleset_definitions_id"
            }
          ]
        },
        "rule": {
          "description": "the combination of an IP address in CIDR notation and whether to allow or deny it\u0027s traffic.",
          "type": [
            "object"
          ],
          "properties": {
            "action": {
              "$ref": "#/definitions/definitions_inbound-ruleset_definitions_action"
            },
            "source": {
              "$ref": "#/definitions/definitions_inbound-ruleset_definitions_source"
            }
          },
          "required": [
            "source",
            "action"
          ]
        }
      },
      "links": [
        {
          "description": "Current inbound ruleset for a space",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/inbound-ruleset",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/inbound-ruleset"
          },
          "title": "Info"
        },
        {
          "description": "Info on an existing Inbound Ruleset",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/inbound-rulesets/{(%23%2Fdefinitions%2Finbound-ruleset%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/inbound-ruleset"
          },
          "title": "Info"
        },
        {
          "description": "List all inbound rulesets for a space",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/inbound-rulesets",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/inbound-ruleset"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Create a new inbound ruleset",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/inbound-ruleset",
          "method": "PUT",
          "rel": "create",
          "schema": {
            "type": [
              "object"
            ],
            "properties": {
              "rules": {
                "type": [
                  "array"
                ],
                "items": {
                  "$ref": "#/definitions/definitions_inbound-ruleset_definitions_rule"
                }
              }
            }
          },
          "title": "Create"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_inbound-ruleset_definitions_id"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_inbound-ruleset_definitions_created_at"
        },
        "rules": {
          "type": [
            "array"
          ],
          "items": {
            "$ref": "#/definitions/definitions_inbound-ruleset_definitions_rule"
          }
        },
        "created_by": {
          "$ref": "#/definitions/definitions_account_definitions_email"
        }
      }
    },
    "invitation": {
      "description": "An invitation represents an invite sent to a user to use the Heroku platform.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Invitation",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when invitation was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_invitation_definitions_token"
            }
          ]
        },
        "receive_newsletter": {
          "description": "whether this user should receive a newsletter or not",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "token": {
          "description": "Unique identifier of an invitation",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Info for invitation.",
          "href": "/invitations/{(%23%2Fdefinitions%2Finvitation%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "title": "Info"
        },
        {
          "description": "Finalize Invitation and Create Account.",
          "href": "/invitations/{(%23%2Fdefinitions%2Finvitation%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "password": {
                "$ref": "#/definitions/definitions_account_definitions_password"
              },
              "password_confirmation": {
                "$ref": "#/definitions/definitions_account_definitions_password"
              },
              "receive_newsletter": {
                "$ref": "#/definitions/definitions_invitation_definitions_receive_newsletter"
              }
            },
            "required": [
              "password",
              "password_confirmation"
            ],
            "type": [
              "object"
            ]
          },
          "title": "Finalize Invitation"
        },
        {
          "description": "Invite a user.",
          "href": "/invitations",
          "method": "POST",
          "rel": "self",
          "schema": {
            "properties": {
              "email": {
                "$ref": "#/definitions/definitions_account_definitions_email"
              },
              "name": {
                "$ref": "#/definitions/definitions_account_definitions_name"
              }
            },
            "required": [
              "email",
              "name"
            ],
            "type": [
              "object"
            ]
          },
          "title": "Invitation"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_invitation_definitions_created_at"
        },
        "user": {
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "invoice-address": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "An invoice address represents the address that should be listed on an invoice.",
      "title": "Heroku Vault API - Invoice Address",
      "stability": "development",
      "type": [
        "object"
      ],
      "definitions": {
        "address_1": {
          "type": [
            "string"
          ],
          "description": "invoice street address line 1",
          "example": "40 Hickory Blvd."
        },
        "address_2": {
          "type": [
            "string"
          ],
          "description": "invoice street address line 2",
          "example": "Suite 300"
        },
        "city": {
          "type": [
            "string"
          ],
          "description": "invoice city",
          "example": "Seattle"
        },
        "country": {
          "type": [
            "string"
          ],
          "description": "country",
          "example": "US"
        },
        "heroku_id": {
          "type": [
            "string"
          ],
          "description": "heroku_id identifier reference",
          "example": "user930223902@heroku.com",
          "readOnly": true
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_invoice-address_definitions_heroku_id"
            }
          ]
        },
        "other": {
          "type": [
            "string"
          ],
          "description": "metadata / additional information to go on invoice",
          "example": "Company ABC Inc. VAT 903820"
        },
        "postal_code": {
          "type": [
            "string"
          ],
          "description": "invoice zip code",
          "example": "98101"
        },
        "state": {
          "type": [
            "string"
          ],
          "description": "invoice state",
          "example": "WA"
        },
        "use_invoice_address": {
          "type": [
            "boolean"
          ],
          "description": "flag to use the invoice address for an account or not",
          "example": true,
          "default": false
        }
      },
      "links": [
        {
          "description": "Retrieve existing invoice address.",
          "href": "/account/invoice-address",
          "method": "GET",
          "rel": "self",
          "title": "info"
        },
        {
          "description": "Update invoice address for an account.",
          "href": "/account/invoice-address",
          "method": "PUT",
          "rel": "self",
          "title": "update",
          "schema": {
            "properties": {
              "address_1": {
                "$ref": "#/definitions/definitions_invoice-address_definitions_address_1"
              },
              "address_2": {
                "$ref": "#/definitions/definitions_invoice-address_definitions_address_2"
              },
              "city": {
                "$ref": "#/definitions/definitions_invoice-address_definitions_city"
              },
              "country": {
                "$ref": "#/definitions/definitions_invoice-address_definitions_country"
              },
              "other": {
                "$ref": "#/definitions/definitions_invoice-address_definitions_other"
              },
              "postal_code": {
                "$ref": "#/definitions/definitions_invoice-address_definitions_postal_code"
              },
              "state": {
                "$ref": "#/definitions/definitions_invoice-address_definitions_state"
              },
              "use_invoice_address": {
                "$ref": "#/definitions/definitions_invoice-address_definitions_use_invoice_address"
              }
            },
            "type": [
              "object"
            ]
          }
        }
      ],
      "properties": {
        "address_1": {
          "$ref": "#/definitions/definitions_invoice-address_definitions_address_1"
        },
        "address_2": {
          "$ref": "#/definitions/definitions_invoice-address_definitions_address_2"
        },
        "city": {
          "$ref": "#/definitions/definitions_invoice-address_definitions_city"
        },
        "country": {
          "$ref": "#/definitions/definitions_invoice-address_definitions_country"
        },
        "heroku_id": {
          "$ref": "#/definitions/definitions_invoice-address_definitions_identity"
        },
        "other": {
          "$ref": "#/definitions/definitions_invoice-address_definitions_other"
        },
        "postal_code": {
          "$ref": "#/definitions/definitions_invoice-address_definitions_postal_code"
        },
        "state": {
          "$ref": "#/definitions/definitions_invoice-address_definitions_state"
        },
        "use_invoice_address": {
          "$ref": "#/definitions/definitions_invoice-address_definitions_use_invoice_address"
        }
      }
    },
    "invoice": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "An invoice is an itemized bill of goods for an account which includes pricing and charges.",
      "stability": "development",
      "strictProperties": true,
      "title": "Heroku Platform API - Invoice",
      "type": [
        "object"
      ],
      "definitions": {
        "charges_total": {
          "description": "total charges on this invoice",
          "example": 100.0,
          "readOnly": true,
          "type": [
            "number"
          ]
        },
        "created_at": {
          "description": "when invoice was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "credits_total": {
          "description": "total credits on this invoice",
          "example": 100.0,
          "readOnly": true,
          "type": [
            "number"
          ]
        },
        "id": {
          "description": "unique identifier of this invoice",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_invoice_definitions_number"
            }
          ]
        },
        "number": {
          "description": "human readable invoice number",
          "example": 9403943,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "period_end": {
          "description": "the ending date that the invoice covers",
          "example": "01/31/2014",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "period_start": {
          "description": "the starting date that this invoice covers",
          "example": "01/01/2014",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "payment status for this invoice (pending, successful, failed)",
          "example": 1,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "total": {
          "description": "combined total of charges and credits on this invoice",
          "example": 100.0,
          "readOnly": true,
          "type": [
            "number"
          ]
        },
        "updated_at": {
          "description": "when invoice was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Info for existing invoice.",
          "href": "/account/invoices/{(%23%2Fdefinitions%2Finvoice%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/invoice"
          },
          "title": "Info"
        },
        {
          "description": "List existing invoices.",
          "href": "/account/invoices",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/invoice"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "charges_total": {
          "$ref": "#/definitions/definitions_invoice_definitions_charges_total"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_invoice_definitions_created_at"
        },
        "credits_total": {
          "$ref": "#/definitions/definitions_invoice_definitions_credits_total"
        },
        "id": {
          "$ref": "#/definitions/definitions_invoice_definitions_id"
        },
        "number": {
          "$ref": "#/definitions/definitions_invoice_definitions_number"
        },
        "period_end": {
          "$ref": "#/definitions/definitions_invoice_definitions_period_end"
        },
        "period_start": {
          "$ref": "#/definitions/definitions_invoice_definitions_period_start"
        },
        "state": {
          "$ref": "#/definitions/definitions_invoice_definitions_state"
        },
        "total": {
          "$ref": "#/definitions/definitions_invoice_definitions_total"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_invoice_definitions_updated_at"
        }
      }
    },
    "key": {
      "description": "Keys represent public SSH keys associated with an account and are used to authorize accounts as they are performing git operations.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Key",
      "type": [
        "object"
      ],
      "definitions": {
        "comment": {
          "description": "comment on the key",
          "example": "username@host",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when key was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "email": {
          "deprecated": true,
          "description": "deprecated. Please refer to \u0027comment\u0027 instead",
          "example": "username@host",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "fingerprint": {
          "description": "a unique identifying string based on contents",
          "example": "17:63:a4:ba:24:d3:7f:af:17:c8:94:82:7e:80:56:bf",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this key",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_key_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_key_definitions_fingerprint"
            }
          ]
        },
        "public_key": {
          "description": "full public_key as uploaded",
          "example": "ssh-rsa AAAAB3NzaC1ycVc/../839Uv username@example.com",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when key was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new key.",
          "href": "/account/keys",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "public_key": {
                "$ref": "#/definitions/definitions_key_definitions_public_key"
              }
            },
            "required": [
              "public_key"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/key"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing key",
          "href": "/account/keys/{(%23%2Fdefinitions%2Fkey%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/key"
          },
          "title": "Delete"
        },
        {
          "description": "Info for existing key.",
          "href": "/account/keys/{(%23%2Fdefinitions%2Fkey%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/key"
          },
          "title": "Info"
        },
        {
          "description": "List existing keys.",
          "href": "/account/keys",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/key"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "comment": {
          "$ref": "#/definitions/definitions_key_definitions_comment"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_key_definitions_created_at"
        },
        "email": {
          "$ref": "#/definitions/definitions_key_definitions_email"
        },
        "fingerprint": {
          "$ref": "#/definitions/definitions_key_definitions_fingerprint"
        },
        "id": {
          "$ref": "#/definitions/definitions_key_definitions_id"
        },
        "public_key": {
          "$ref": "#/definitions/definitions_key_definitions_public_key"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_key_definitions_updated_at"
        }
      }
    },
    "log-drain": {
      "description": "[Log drains](https://devcenter.heroku.com/articles/log-drains) provide a way to forward your Heroku logs to an external syslog server for long-term archiving. This external service must be configured to receive syslog packets from Heroku, whereupon its URL can be added to an app using this API. Some add-ons will add a log drain when they are provisioned to an app. These drains can only be removed by removing the add-on.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Log Drain",
      "type": [
        "object"
      ],
      "definitions": {
        "addon": {
          "description": "add-on that created the drain",
          "example": {
            "name": "singing-swiftly-1242"
          },
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_add-on_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_add-on_definitions_name"
            }
          },
          "readOnly": true,
          "type": [
            "object",
            "null"
          ]
        },
        "created_at": {
          "description": "when log drain was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this log drain",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "query_identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_log-drain_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_log-drain_definitions_url"
            },
            {
              "$ref": "#/definitions/definitions_log-drain_definitions_token"
            }
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_log-drain_definitions_url"
            }
          ]
        },
        "token": {
          "description": "token associated with the log drain",
          "example": "d.01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when log drain was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "url": {
          "description": "url associated with the log drain",
          "example": "https://example.com/drain",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new log drain.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/log-drains",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "url": {
                "$ref": "#/definitions/definitions_log-drain_definitions_url"
              }
            },
            "required": [
              "url"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/log-drain"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing log drain. Log drains added by add-ons can only be removed by removing the add-on.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/log-drains/{(%23%2Fdefinitions%2Flog-drain%2Fdefinitions%2Fquery_identity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/log-drain"
          },
          "title": "Delete"
        },
        {
          "description": "Info for existing log drain.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/log-drains/{(%23%2Fdefinitions%2Flog-drain%2Fdefinitions%2Fquery_identity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/log-drain"
          },
          "title": "Info"
        },
        {
          "description": "List existing log drains.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/log-drains",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/log-drain"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "addon": {
          "$ref": "#/definitions/definitions_log-drain_definitions_addon"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_log-drain_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_log-drain_definitions_id"
        },
        "token": {
          "$ref": "#/definitions/definitions_log-drain_definitions_token"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_log-drain_definitions_updated_at"
        },
        "url": {
          "$ref": "#/definitions/definitions_log-drain_definitions_url"
        }
      }
    },
    "log-session": {
      "description": "A log session is a reference to the http based log stream for an app.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Log Session",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when log connection was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "dyno": {
          "description": "dyno to limit results to",
          "example": "web.1",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this log session",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_log-session_definitions_id"
            }
          ]
        },
        "lines": {
          "description": "number of log lines to stream at once",
          "example": 10,
          "readOnly": false,
          "type": [
            "integer"
          ]
        },
        "logplex_url": {
          "description": "URL for log streaming session",
          "example": "https://logplex.heroku.com/sessions/01234567-89ab-cdef-0123-456789abcdef?srv\u003d1325419200",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "source": {
          "description": "log source to limit results to",
          "example": "app",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "tail": {
          "description": "whether to stream ongoing logs",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "updated_at": {
          "description": "when log session was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new log session.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/log-sessions",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "dyno": {
                "$ref": "#/definitions/definitions_log-session_definitions_dyno"
              },
              "lines": {
                "$ref": "#/definitions/definitions_log-session_definitions_lines"
              },
              "source": {
                "$ref": "#/definitions/definitions_log-session_definitions_source"
              },
              "tail": {
                "$ref": "#/definitions/definitions_log-session_definitions_tail"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/log-session"
          },
          "title": "Create"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_log-session_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_log-session_definitions_id"
        },
        "logplex_url": {
          "$ref": "#/definitions/definitions_log-session_definitions_logplex_url"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_log-session_definitions_updated_at"
        }
      }
    },
    "oauth-authorization": {
      "description": "OAuth authorizations represent clients that a Heroku user has authorized to automate, customize or extend their usage of the platform. For more information please refer to the [Heroku OAuth documentation](https://devcenter.heroku.com/articles/oauth)",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - OAuth Authorization",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when OAuth authorization was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "description": {
          "description": "human-friendly description of this OAuth authorization",
          "example": "sample authorization",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of OAuth authorization",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_oauth-authorization_definitions_id"
            }
          ]
        },
        "scope": {
          "description": "The scope of access OAuth authorization allows",
          "example": [
            "global"
          ],
          "readOnly": true,
          "type": [
            "array"
          ],
          "items": {
            "type": [
              "string"
            ]
          }
        },
        "updated_at": {
          "description": "when OAuth authorization was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new OAuth authorization.",
          "href": "/oauth/authorizations",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "client": {
                "$ref": "#/definitions/definitions_oauth-client_definitions_identity"
              },
              "description": {
                "$ref": "#/definitions/definitions_oauth-authorization_definitions_description"
              },
              "expires_in": {
                "$ref": "#/definitions/definitions_oauth-token_definitions_expires_in"
              },
              "scope": {
                "$ref": "#/definitions/definitions_oauth-authorization_definitions_scope"
              }
            },
            "required": [
              "scope"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/oauth-authorization"
          },
          "title": "Create"
        },
        {
          "description": "Delete OAuth authorization.",
          "href": "/oauth/authorizations/{(%23%2Fdefinitions%2Foauth-authorization%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/oauth-authorization"
          },
          "title": "Delete"
        },
        {
          "description": "Info for an OAuth authorization.",
          "href": "/oauth/authorizations/{(%23%2Fdefinitions%2Foauth-authorization%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/oauth-authorization"
          },
          "title": "Info"
        },
        {
          "description": "List OAuth authorizations.",
          "href": "/oauth/authorizations",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/oauth-authorization"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Regenerate OAuth tokens. This endpoint is only available to direct authorizations or privileged OAuth clients.",
          "href": "/oauth/authorizations/{(%23%2Fdefinitions%2Foauth-authorization%2Fdefinitions%2Fidentity)}/actions/regenerate-tokens",
          "method": "POST",
          "rel": "update",
          "targetSchema": {
            "$ref": "#/definitions/oauth-authorization"
          },
          "title": "Regenerate"
        }
      ],
      "properties": {
        "access_token": {
          "description": "access token for this authorization",
          "properties": {
            "expires_in": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_expires_in"
            },
            "id": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_id"
            },
            "token": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_token"
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "client": {
          "description": "identifier of the client that obtained this authorization, if any",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_oauth-client_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_oauth-client_definitions_name"
            },
            "redirect_uri": {
              "$ref": "#/definitions/definitions_oauth-client_definitions_redirect_uri"
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_oauth-authorization_definitions_created_at"
        },
        "grant": {
          "description": "this authorization\u0027s grant",
          "properties": {
            "code": {
              "$ref": "#/definitions/definitions_oauth-grant_definitions_code"
            },
            "expires_in": {
              "$ref": "#/definitions/definitions_oauth-grant_definitions_expires_in"
            },
            "id": {
              "$ref": "#/definitions/definitions_oauth-grant_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "null",
            "object"
          ]
        },
        "id": {
          "$ref": "#/definitions/definitions_oauth-authorization_definitions_id"
        },
        "refresh_token": {
          "description": "refresh token for this authorization",
          "properties": {
            "expires_in": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_expires_in"
            },
            "id": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_id"
            },
            "token": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_token"
            }
          },
          "strictProperties": true,
          "type": [
            "null",
            "object"
          ]
        },
        "scope": {
          "$ref": "#/definitions/definitions_oauth-authorization_definitions_scope"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_oauth-authorization_definitions_updated_at"
        },
        "user": {
          "description": "authenticated user associated with this authorization",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            },
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "full_name": {
              "$ref": "#/definitions/definitions_account_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "oauth-client": {
      "description": "OAuth clients are applications that Heroku users can authorize to automate, customize or extend their usage of the platform. For more information please refer to the [Heroku OAuth documentation](https://devcenter.heroku.com/articles/oauth).",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - OAuth Client",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when OAuth client was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this OAuth client",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_oauth-client_definitions_id"
            }
          ]
        },
        "ignores_delinquent": {
          "description": "whether the client is still operable given a delinquent account",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean",
            "null"
          ]
        },
        "name": {
          "description": "OAuth client name",
          "example": "example",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "redirect_uri": {
          "description": "endpoint for redirection after authorization with OAuth client",
          "example": "https://example.com/auth/heroku/callback",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "secret": {
          "description": "secret used to obtain OAuth authorizations under this client",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when OAuth client was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new OAuth client.",
          "href": "/oauth/clients",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/definitions_oauth-client_definitions_name"
              },
              "redirect_uri": {
                "$ref": "#/definitions/definitions_oauth-client_definitions_redirect_uri"
              }
            },
            "required": [
              "name",
              "redirect_uri"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/oauth-client"
          },
          "title": "Create"
        },
        {
          "description": "Delete OAuth client.",
          "href": "/oauth/clients/{(%23%2Fdefinitions%2Foauth-client%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/oauth-client"
          },
          "title": "Delete"
        },
        {
          "description": "Info for an OAuth client",
          "href": "/oauth/clients/{(%23%2Fdefinitions%2Foauth-client%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "title": "Info"
        },
        {
          "description": "List OAuth clients",
          "href": "/oauth/clients",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/oauth-client"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Update OAuth client",
          "href": "/oauth/clients/{(%23%2Fdefinitions%2Foauth-client%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/definitions_oauth-client_definitions_name"
              },
              "redirect_uri": {
                "$ref": "#/definitions/definitions_oauth-client_definitions_redirect_uri"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/oauth-client"
          },
          "title": "Update"
        },
        {
          "description": "Rotate credentials for an OAuth client",
          "href": "/oauth/clients/{(%23%2Fdefinitions%2Foauth-client%2Fdefinitions%2Fidentity)}/actions/rotate-credentials",
          "method": "POST",
          "rel": "update",
          "targetSchema": {
            "$ref": "#/definitions/oauth-client"
          },
          "title": "Rotate Credentials"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_oauth-client_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_oauth-client_definitions_id"
        },
        "ignores_delinquent": {
          "$ref": "#/definitions/definitions_oauth-client_definitions_ignores_delinquent"
        },
        "name": {
          "$ref": "#/definitions/definitions_oauth-client_definitions_name"
        },
        "redirect_uri": {
          "$ref": "#/definitions/definitions_oauth-client_definitions_redirect_uri"
        },
        "secret": {
          "$ref": "#/definitions/definitions_oauth-client_definitions_secret"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_oauth-client_definitions_updated_at"
        }
      }
    },
    "oauth-grant": {
      "description": "OAuth grants are used to obtain authorizations on behalf of a user. For more information please refer to the [Heroku OAuth documentation](https://devcenter.heroku.com/articles/oauth)",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - OAuth Grant",
      "type": [
        "object"
      ],
      "definitions": {
        "code": {
          "description": "grant code received from OAuth web application authorization",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "expires_in": {
          "description": "seconds until OAuth grant expires",
          "example": 2592000,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "id": {
          "description": "unique identifier of OAuth grant",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_oauth-grant_definitions_id"
            }
          ]
        },
        "type": {
          "description": "type of grant requested, one of `authorization_code` or `refresh_token`",
          "example": "authorization_code",
          "readOnly": false,
          "type": [
            "string"
          ]
        }
      },
      "links": [],
      "properties": {}
    },
    "oauth-token": {
      "description": "OAuth tokens provide access for authorized clients to act on behalf of a Heroku user to automate, customize or extend their usage of the platform. For more information please refer to the [Heroku OAuth documentation](https://devcenter.heroku.com/articles/oauth)",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - OAuth Token",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when OAuth token was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "expires_in": {
          "description": "seconds until OAuth token expires; may be `null` for tokens with indefinite lifetime",
          "example": 2592000,
          "readOnly": true,
          "type": [
            "null",
            "integer"
          ]
        },
        "id": {
          "description": "unique identifier of OAuth token",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_oauth-token_definitions_id"
            }
          ]
        },
        "token": {
          "description": "contents of the token to be used for authorization",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when OAuth token was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new OAuth token.",
          "href": "/oauth/tokens",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "client": {
                "type": [
                  "object"
                ],
                "properties": {
                  "secret": {
                    "$ref": "#/definitions/definitions_oauth-client_definitions_secret"
                  }
                }
              },
              "grant": {
                "type": [
                  "object"
                ],
                "properties": {
                  "code": {
                    "$ref": "#/definitions/definitions_oauth-grant_definitions_code"
                  },
                  "type": {
                    "$ref": "#/definitions/definitions_oauth-grant_definitions_type"
                  }
                }
              },
              "refresh_token": {
                "type": [
                  "object"
                ],
                "properties": {
                  "token": {
                    "$ref": "#/definitions/definitions_oauth-token_definitions_token"
                  }
                }
              }
            },
            "required": [
              "grant",
              "client",
              "refresh_token"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/oauth-token"
          },
          "title": "Create"
        },
        {
          "description": "Revoke OAuth access token.",
          "href": "/oauth/tokens/{(%23%2Fdefinitions%2Foauth-token%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/oauth-token"
          },
          "title": "Delete"
        }
      ],
      "properties": {
        "access_token": {
          "description": "current access token",
          "properties": {
            "expires_in": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_expires_in"
            },
            "id": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_id"
            },
            "token": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_token"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "authorization": {
          "description": "authorization for this set of tokens",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_oauth-authorization_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "client": {
          "description": "OAuth client secret used to obtain token",
          "properties": {
            "secret": {
              "$ref": "#/definitions/definitions_oauth-client_definitions_secret"
            }
          },
          "strictProperties": true,
          "type": [
            "null",
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_oauth-token_definitions_created_at"
        },
        "grant": {
          "description": "grant used on the underlying authorization",
          "properties": {
            "code": {
              "$ref": "#/definitions/definitions_oauth-grant_definitions_code"
            },
            "type": {
              "$ref": "#/definitions/definitions_oauth-grant_definitions_type"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "id": {
          "$ref": "#/definitions/definitions_oauth-token_definitions_id"
        },
        "refresh_token": {
          "description": "refresh token for this authorization",
          "properties": {
            "expires_in": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_expires_in"
            },
            "id": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_id"
            },
            "token": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_token"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "session": {
          "description": "OAuth session using this token",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_oauth-token_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_oauth-token_definitions_updated_at"
        },
        "user": {
          "description": "Reference to the user associated with this token",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "organization-add-on": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "A list of add-ons the Organization uses across all apps",
      "stability": "production",
      "title": "Heroku Platform API - Organization Add-on",
      "type": [
        "object"
      ],
      "links": [
        {
          "description": "List add-ons used across all Organization apps",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/addons",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/add-on"
            },
            "type": [
              "array"
            ]
          },
          "title": "List For Organization"
        }
      ]
    },
    "organization-app-collaborator": {
      "description": "An organization collaborator represents an account that has been given access to an organization app on Heroku.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "title": "Heroku Platform API - Organization App Collaborator",
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_collaborator_definitions_email"
            }
          ]
        }
      },
      "links": [
        {
          "description": "Create a new collaborator on an organization app. Use this endpoint instead of the `/apps/{app_id_or_name}/collaborator` endpoint when you want the collaborator to be granted [permissions] (https://devcenter.heroku.com/articles/org-users-access#roles-and-app-permissions) according to their role in the organization.",
          "href": "/organizations/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/collaborators",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "silent": {
                "$ref": "#/definitions/definitions_collaborator_definitions_silent"
              },
              "user": {
                "$ref": "#/definitions/definitions_account_definitions_identity"
              }
            },
            "required": [
              "user"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/organization-app-collaborator"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing collaborator from an organization app.",
          "href": "/organizations/apps/{(%23%2Fdefinitions%2Forganization-app%2Fdefinitions%2Fidentity)}/collaborators/{(%23%2Fdefinitions%2Forganization-app-collaborator%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/organization-app-collaborator"
          },
          "title": "Delete"
        },
        {
          "description": "Info for a collaborator on an organization app.",
          "href": "/organizations/apps/{(%23%2Fdefinitions%2Forganization-app%2Fdefinitions%2Fidentity)}/collaborators/{(%23%2Fdefinitions%2Forganization-app-collaborator%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/organization-app-collaborator"
          },
          "title": "Info"
        },
        {
          "description": "Update an existing collaborator from an organization app.",
          "href": "/organizations/apps/{(%23%2Fdefinitions%2Forganization-app%2Fdefinitions%2Fidentity)}/collaborators/{(%23%2Fdefinitions%2Forganization-app-collaborator%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "targetSchema": {
            "$ref": "#/definitions/organization-app-collaborator"
          },
          "title": "Update"
        },
        {
          "description": "List collaborators on an organization app.",
          "href": "/organizations/apps/{(%23%2Fdefinitions%2Forganization-app%2Fdefinitions%2Fidentity)}/collaborators",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-app-collaborator"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "app": {
          "description": "app collaborator belongs to",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            },
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_collaborator_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_collaborator_definitions_id"
        },
        "role": {
          "$ref": "#/definitions/definitions_organization_definitions_role"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_collaborator_definitions_updated_at"
        },
        "user": {
          "description": "identity of collaborated account",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "federated": {
              "$ref": "#/definitions/definitions_account_definitions_federated"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "organization-app": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "An organization app encapsulates the organization specific functionality of Heroku apps.",
      "stability": "prototype",
      "title": "Heroku Platform API - Organization App",
      "type": [
        "object"
      ],
      "definitions": {
        "locked": {
          "default": false,
          "description": "are other organization members forbidden from joining this app.",
          "example": false,
          "type": [
            "boolean"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_app_definitions_name"
            }
          ]
        },
        "joined": {
          "default": false,
          "description": "is the current member a collaborator on this app.",
          "example": false,
          "type": [
            "boolean"
          ]
        },
        "personal": {
          "default": false,
          "description": "force creation of the app in the user account even if a default org is set.",
          "example": false,
          "type": [
            "boolean"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new app in the specified organization, in the default organization if unspecified,  or in personal account, if default organization is not set.",
          "href": "/organizations/apps",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "locked": {
                "$ref": "#/definitions/definitions_organization-app_definitions_locked"
              },
              "name": {
                "$ref": "#/definitions/definitions_app_definitions_name"
              },
              "organization": {
                "$ref": "#/definitions/definitions_organization_definitions_name"
              },
              "personal": {
                "$ref": "#/definitions/definitions_organization-app_definitions_personal"
              },
              "region": {
                "$ref": "#/definitions/definitions_region_definitions_name"
              },
              "space": {
                "$ref": "#/definitions/definitions_space_definitions_name"
              },
              "stack": {
                "$ref": "#/definitions/definitions_stack_definitions_name"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Create"
        },
        {
          "description": "List apps in the default organization, or in personal account, if default organization is not set.",
          "href": "/organizations/apps",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-app"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "List organization apps.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/apps",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-app"
            },
            "type": [
              "array"
            ]
          },
          "title": "List For Organization"
        },
        {
          "description": "Info for an organization app.",
          "href": "/organizations/apps/{(%23%2Fdefinitions%2Forganization-app%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "title": "Info"
        },
        {
          "description": "Lock or unlock an organization app.",
          "href": "/organizations/apps/{(%23%2Fdefinitions%2Forganization-app%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "locked": {
                "$ref": "#/definitions/definitions_organization-app_definitions_locked"
              }
            },
            "required": [
              "locked"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/organization-app"
          },
          "title": "Update Locked"
        },
        {
          "description": "Transfer an existing organization app to another Heroku account.",
          "href": "/organizations/apps/{(%23%2Fdefinitions%2Forganization-app%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "owner": {
                "$ref": "#/definitions/definitions_account_definitions_identity"
              }
            },
            "required": [
              "owner"
            ],
            "type": [
              "object"
            ]
          },
          "title": "Transfer to Account"
        },
        {
          "description": "Transfer an existing organization app to another organization.",
          "href": "/organizations/apps/{(%23%2Fdefinitions%2Forganization-app%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "owner": {
                "$ref": "#/definitions/definitions_organization_definitions_name"
              }
            },
            "required": [
              "owner"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/organization-app"
          },
          "title": "Transfer to Organization"
        }
      ],
      "properties": {
        "archived_at": {
          "$ref": "#/definitions/definitions_app_definitions_archived_at"
        },
        "buildpack_provided_description": {
          "$ref": "#/definitions/definitions_app_definitions_buildpack_provided_description"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_app_definitions_created_at"
        },
        "git_url": {
          "$ref": "#/definitions/definitions_app_definitions_git_url"
        },
        "id": {
          "$ref": "#/definitions/definitions_app_definitions_id"
        },
        "joined": {
          "$ref": "#/definitions/definitions_organization-app_definitions_joined"
        },
        "locked": {
          "$ref": "#/definitions/definitions_organization-app_definitions_locked"
        },
        "maintenance": {
          "$ref": "#/definitions/definitions_app_definitions_maintenance"
        },
        "name": {
          "$ref": "#/definitions/definitions_app_definitions_name"
        },
        "organization": {
          "description": "organization that owns this app",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_organization_definitions_name"
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "owner": {
          "description": "identity of app owner",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "region": {
          "description": "identity of app region",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_region_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_region_definitions_name"
            }
          },
          "type": [
            "object"
          ]
        },
        "released_at": {
          "$ref": "#/definitions/definitions_app_definitions_released_at"
        },
        "repo_size": {
          "$ref": "#/definitions/definitions_app_definitions_repo_size"
        },
        "slug_size": {
          "$ref": "#/definitions/definitions_app_definitions_slug_size"
        },
        "space": {
          "description": "identity of space",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_space_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_space_definitions_name"
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "stack": {
          "description": "identity of app stack",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_stack_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_stack_definitions_name"
            }
          },
          "type": [
            "object"
          ]
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_app_definitions_updated_at"
        },
        "web_url": {
          "$ref": "#/definitions/definitions_app_definitions_web_url"
        }
      }
    },
    "organization-feature": {
      "description": "An organization feature represents a feature enabled on an organization account.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Organization Feature",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when organization feature was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "description": {
          "description": "description of organization feature",
          "example": "Causes account to example.",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "doc_url": {
          "description": "documentation URL of organization feature",
          "example": "http://devcenter.heroku.com/articles/example",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "enabled": {
          "description": "whether or not account feature has been enabled",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "id": {
          "description": "unique identifier of organization feature",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_organization-feature_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_organization-feature_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name of organization feature",
          "example": "name",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "state of organization feature",
          "example": "public",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when organization feature was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Info for an existing account feature.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/features/{(%23%2Fdefinitions%2Forganization-feature%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/organization-feature"
          },
          "title": "Info"
        },
        {
          "description": "List existing organization features.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/features",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-feature"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_account-feature_definitions_created_at"
        },
        "description": {
          "$ref": "#/definitions/definitions_account-feature_definitions_description"
        },
        "doc_url": {
          "$ref": "#/definitions/definitions_account-feature_definitions_doc_url"
        },
        "enabled": {
          "$ref": "#/definitions/definitions_account-feature_definitions_enabled"
        },
        "id": {
          "$ref": "#/definitions/definitions_account-feature_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_account-feature_definitions_name"
        },
        "state": {
          "$ref": "#/definitions/definitions_account-feature_definitions_state"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_account-feature_definitions_updated_at"
        }
      }
    },
    "organization-invitation": {
      "description": "An organization invitation represents an invite to an organization.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Organization Invitation",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when invitation was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_organization-invitation_definitions_id"
            }
          ]
        },
        "id": {
          "description": "Unique identifier of an invitation",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "token": {
          "description": "Special token for invitation",
          "example": "614ae25aa2d4802096cd7c18625b526c",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when invitation was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Get a list of an organization\u0027s Identity Providers",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fname)}/invitations",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-invitation"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Create Organization Invitation",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/invitations",
          "method": "PUT",
          "rel": "update",
          "schema": {
            "properties": {
              "email": {
                "$ref": "#/definitions/definitions_account_definitions_email"
              },
              "role": {
                "$ref": "#/definitions/definitions_organization_definitions_role"
              }
            },
            "required": [
              "email",
              "role"
            ],
            "type": [
              "object"
            ]
          }
        },
        {
          "description": "Revoke an organization invitation.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/invitations/{(%23%2Fdefinitions%2Forganization-invitation%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "self",
          "title": "Invitation"
        },
        {
          "description": "Get an invitation by its token",
          "href": "/organizations/invitations/{(%23%2Fdefinitions%2Forganization-invitation%2Fdefinitions%2Ftoken)}",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "$ref": "#/definitions/organization-invitation"
          }
        },
        {
          "description": "Accept Organization Invitation",
          "href": "/organizations/invitations/{(%23%2Fdefinitions%2Forganization-invitation%2Fdefinitions%2Ftoken)}/accept",
          "method": "POST",
          "rel": "create",
          "targetSchema": {
            "$ref": "#/definitions/organization-member"
          }
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_organization-invitation_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_organization-invitation_definitions_id"
        },
        "invited_by": {
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_account_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "organization": {
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_organization_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_organization_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "role": {
          "$ref": "#/definitions/definitions_organization_definitions_role"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_organization-invitation_definitions_updated_at"
        },
        "user": {
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_account_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "organization-invoice": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "An organization invoice is an itemized bill of goods for an organization which includes pricing and charges.",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Organization Invoice",
      "type": [
        "object"
      ],
      "definitions": {
        "addons_total": {
          "description": "total add-ons charges in on this invoice",
          "example": 25000,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "database_total": {
          "description": "total database charges on this invoice",
          "example": 25000,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "charges_total": {
          "description": "total charges on this invoice",
          "example": 0,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "created_at": {
          "description": "when invoice was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "credits_total": {
          "description": "total credits on this invoice",
          "example": 100000,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "dyno_units": {
          "description": "The total amount of dyno units consumed across dyno types.",
          "example": 1.92,
          "readOnly": true,
          "type": [
            "number"
          ]
        },
        "id": {
          "description": "unique identifier of this invoice",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_organization-invoice_definitions_number"
            }
          ]
        },
        "number": {
          "description": "human readable invoice number",
          "example": 9403943,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "payment_status": {
          "description": "Status of the invoice payment.",
          "example": "Paid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "platform_total": {
          "description": "total platform charges on this invoice",
          "example": 50000,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "period_end": {
          "description": "the ending date that the invoice covers",
          "example": "01/31/2014",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "period_start": {
          "description": "the starting date that this invoice covers",
          "example": "01/01/2014",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "payment status for this invoice (pending, successful, failed)",
          "example": 1,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "total": {
          "description": "combined total of charges and credits on this invoice",
          "example": 100000,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "updated_at": {
          "description": "when invoice was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "weighted_dyno_hours": {
          "description": "The total amount of hours consumed across dyno types.",
          "example": 1488,
          "readOnly": true,
          "type": [
            "number"
          ]
        }
      },
      "links": [
        {
          "description": "Info for existing invoice.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/invoices/{(%23%2Fdefinitions%2Forganization-invoice%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/organization-invoice"
          },
          "title": "Info"
        },
        {
          "description": "List existing invoices.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/invoices",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-invoice"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "addons_total": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_addons_total"
        },
        "database_total": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_database_total"
        },
        "charges_total": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_charges_total"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_created_at"
        },
        "credits_total": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_credits_total"
        },
        "dyno_units": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_dyno_units"
        },
        "id": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_id"
        },
        "number": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_number"
        },
        "payment_status": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_payment_status"
        },
        "period_end": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_period_end"
        },
        "period_start": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_period_start"
        },
        "platform_total": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_platform_total"
        },
        "state": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_state"
        },
        "total": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_total"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_updated_at"
        },
        "weighted_dyno_hours": {
          "$ref": "#/definitions/definitions_organization-invoice_definitions_weighted_dyno_hours"
        }
      }
    },
    "organization-member": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "An organization member is an individual with access to an organization.",
      "stability": "prototype",
      "additionalProperties": false,
      "required": [
        "created_at",
        "email",
        "federated",
        "updated_at"
      ],
      "title": "Heroku Platform API - Organization Member",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when the membership record was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "email": {
          "description": "email address of the organization member",
          "example": "someone@example.org",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "federated": {
          "description": "whether the user is federated and belongs to an Identity Provider",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "id": {
          "description": "unique identifier of organization member",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_organization-member_definitions_email"
            },
            {
              "$ref": "#/definitions/definitions_organization-member_definitions_id"
            }
          ]
        },
        "name": {
          "description": "full name of the organization member",
          "example": "Tina Edmonds",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        },
        "two_factor_authentication": {
          "description": "whether the Enterprise organization member has two factor authentication enabled",
          "example": true,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "updated_at": {
          "description": "when the membership record was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new organization member, or update their role.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/members",
          "method": "PUT",
          "rel": "create",
          "schema": {
            "properties": {
              "email": {
                "$ref": "#/definitions/definitions_organization-member_definitions_email"
              },
              "federated": {
                "$ref": "#/definitions/definitions_organization-member_definitions_federated"
              },
              "role": {
                "$ref": "#/definitions/definitions_organization_definitions_role"
              }
            },
            "required": [
              "email",
              "role"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/organization-member"
          },
          "title": "Create or Update"
        },
        {
          "description": "Remove a member from the organization.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/members/{(%23%2Fdefinitions%2Forganization-member%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/organization-member"
          },
          "title": "Delete"
        },
        {
          "description": "List members of the organization.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/members",
          "method": "GET",
          "ranges": [
            "email"
          ],
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-member"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "List the apps of a member.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/members/{(%23%2Fdefinitions%2Forganization-member%2Fdefinitions%2Fidentity)}/apps",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-app"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_organization-member_definitions_created_at"
        },
        "email": {
          "$ref": "#/definitions/definitions_organization-member_definitions_email"
        },
        "federated": {
          "$ref": "#/definitions/definitions_organization-member_definitions_federated"
        },
        "id": {
          "$ref": "#/definitions/definitions_organization-member_definitions_id"
        },
        "role": {
          "$ref": "#/definitions/definitions_organization_definitions_role"
        },
        "two_factor_authentication": {
          "$ref": "#/definitions/definitions_organization-member_definitions_two_factor_authentication"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_organization-member_definitions_updated_at"
        },
        "user": {
          "description": "user information for the membership",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_account_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "organization-payment-method": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "The on file payment method for an organization account.",
      "stability": "prototype",
      "title": "Heroku Vault API - Organization Payment Method",
      "type": [
        "object"
      ],
      "definitions": {
        "address_1": {
          "type": [
            "string"
          ],
          "description": "street address line 1",
          "example": "40 Hickory Lane"
        },
        "address_2": {
          "type": [
            "string"
          ],
          "description": "street address line 2",
          "example": "Suite 103"
        },
        "card_number": {
          "type": [
            "string"
          ],
          "description": "encrypted card number of payment method",
          "example": "encrypted-card-number"
        },
        "city": {
          "type": [
            "string"
          ],
          "description": "city",
          "example": "San Francisco"
        },
        "country": {
          "type": [
            "string"
          ],
          "description": "country",
          "example": "US"
        },
        "cvv": {
          "type": [
            "string"
          ],
          "description": "card verification value",
          "example": "123"
        },
        "expiration_month": {
          "type": [
            "string"
          ],
          "description": "expiration month",
          "example": "11"
        },
        "expiration_year": {
          "type": [
            "string"
          ],
          "description": "expiration year",
          "example": "2014"
        },
        "first_name": {
          "type": [
            "string"
          ],
          "description": "the first name for payment method",
          "example": "Jason"
        },
        "last_name": {
          "type": [
            "string"
          ],
          "description": "the last name for payment method",
          "example": "Walker"
        },
        "other": {
          "type": [
            "string"
          ],
          "description": "metadata",
          "example": "Additional information for payment method"
        },
        "postal_code": {
          "type": [
            "string"
          ],
          "description": "postal code",
          "example": "90210"
        },
        "state": {
          "type": [
            "string"
          ],
          "description": "state",
          "example": "CA"
        },
        "card_last4": {
          "type": [
            "string"
          ],
          "description": "last 4 digits of credit card number",
          "example": "1234",
          "readOnly": true
        },
        "card_type": {
          "type": [
            "string"
          ],
          "description": "name of credit card issuer",
          "example": "VISA",
          "readOnly": true
        },
        "heroku_id": {
          "type": [
            "string"
          ],
          "description": "heroku_id identifier reference",
          "example": "user930223902@heroku.com",
          "readOnly": true
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_invoice-address_definitions_heroku_id"
            }
          ]
        }
      },
      "links": [
        {
          "description": "Update an existing payment method for an organization account.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/payment-method",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "address_1": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_address_1"
              },
              "address_2": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_address_2"
              },
              "card_number": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_card_number"
              },
              "city": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_city"
              },
              "country": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_country"
              },
              "cvv": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_cvv"
              },
              "expiration_month": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_expiration_month"
              },
              "expiration_year": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_expiration_year"
              },
              "first_name": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_first_name"
              },
              "last_name": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_last_name"
              },
              "other": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_other"
              },
              "postal_code": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_postal_code"
              },
              "state": {
                "$ref": "#/definitions/definitions_organization-payment-method_definitions_state"
              }
            },
            "required": [
              "address_1",
              "address_2",
              "card_number",
              "city",
              "country",
              "cvv",
              "expiration_month",
              "expiration_year",
              "first_name",
              "last_name",
              "postal_code",
              "state"
            ],
            "type": [
              "object"
            ]
          },
          "title": "update"
        },
        {
          "description": "Get the current payment method for an organization account.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/payment-method",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/organization-payment-method"
          },
          "title": "get"
        }
      ],
      "properties": {
        "address_1": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_address_1"
        },
        "address_2": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_address_2"
        },
        "card_last4": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_card_last4"
        },
        "card_type": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_card_type"
        },
        "city": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_city"
        },
        "country": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_country"
        },
        "expiration_month": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_expiration_month"
        },
        "expiration_year": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_expiration_year"
        },
        "first_name": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_first_name"
        },
        "last_name": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_last_name"
        },
        "other": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_other"
        },
        "postal_code": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_postal_code"
        },
        "state": {
          "$ref": "#/definitions/definitions_organization-payment-method_definitions_state"
        }
      }
    },
    "organization-preferences": {
      "description": "Tracks an organization\u0027s preferences",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Organization Preferences",
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {
          "$ref": "#/definitions/definitions_organization_definitions_identity"
        },
        "whitelisting-enabled": {
          "description": "Whether whitelisting rules should be applied to add-on installations",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "links": [
        {
          "description": "Retrieve Organization Preferences",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization-preferences%2Fdefinitions%2Fidentity)}/preferences",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/organization-preferences"
          },
          "title": "List"
        },
        {
          "description": "Update Organization Preferences",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization-preferences%2Fdefinitions%2Fidentity)}/preferences",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "whitelisting-enabled": {
                "$ref": "#/definitions/definitions_organization-preferences_definitions_whitelisting-enabled"
              }
            }
          },
          "targetSchema": {
            "$ref": "#/definitions/organization-preferences"
          },
          "title": "Update"
        }
      ],
      "properties": {
        "whitelisting-enabled": {
          "$ref": "#/definitions/definitions_organization-preferences_definitions_whitelisting-enabled"
        }
      }
    },
    "organization": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "Organizations allow you to manage access to a shared group of applications across your development team.",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Organization",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when the organization was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "credit_card_collections": {
          "description": "whether charges incurred by the org are paid by credit card.",
          "example": true,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "default": {
          "description": "whether to use this organization when none is specified",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "id": {
          "description": "unique identifier of organization",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_organization_definitions_name"
            },
            {
              "$ref": "#/definitions/definitions_organization_definitions_id"
            }
          ]
        },
        "membership_limit": {
          "description": "upper limit of members allowed in an organization.",
          "example": 25,
          "readOnly": true,
          "type": [
            "number",
            "null"
          ]
        },
        "name": {
          "description": "unique name of organization",
          "example": "example",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "provisioned_licenses": {
          "description": "whether the org is provisioned licenses by salesforce.",
          "example": true,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "role": {
          "description": "role in the organization",
          "enum": [
            "admin",
            "collaborator",
            "member",
            "owner",
            null
          ],
          "example": "admin",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "type": {
          "description": "type of organization.",
          "example": "team",
          "enum": [
            "enterprise",
            "team"
          ],
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when the organization was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "List organizations in which you are a member.",
          "href": "/organizations",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Info for an organization.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "title": "Info"
        },
        {
          "description": "Update organization properties.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "default": {
                "$ref": "#/definitions/definitions_organization_definitions_default"
              },
              "name": {
                "$ref": "#/definitions/definitions_organization_definitions_name"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/organization"
          },
          "title": "Update"
        },
        {
          "description": "Create a new organization.",
          "href": "/organizations",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/definitions_organization_definitions_name"
              },
              "address_1": {
                "$ref": "#/definitions/definitions_payment-method_definitions_address_1"
              },
              "address_2": {
                "$ref": "#/definitions/definitions_payment-method_definitions_address_2"
              },
              "card_number": {
                "$ref": "#/definitions/definitions_payment-method_definitions_card_number"
              },
              "city": {
                "$ref": "#/definitions/definitions_payment-method_definitions_city"
              },
              "country": {
                "$ref": "#/definitions/definitions_payment-method_definitions_country"
              },
              "cvv": {
                "$ref": "#/definitions/definitions_payment-method_definitions_cvv"
              },
              "expiration_month": {
                "$ref": "#/definitions/definitions_payment-method_definitions_expiration_month"
              },
              "expiration_year": {
                "$ref": "#/definitions/definitions_payment-method_definitions_expiration_year"
              },
              "first_name": {
                "$ref": "#/definitions/definitions_payment-method_definitions_first_name"
              },
              "last_name": {
                "$ref": "#/definitions/definitions_payment-method_definitions_last_name"
              },
              "other": {
                "$ref": "#/definitions/definitions_payment-method_definitions_other"
              },
              "postal_code": {
                "$ref": "#/definitions/definitions_payment-method_definitions_postal_code"
              },
              "state": {
                "$ref": "#/definitions/definitions_payment-method_definitions_state"
              }
            },
            "required": [
              "name"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/organization"
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing organization.",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/organization"
          },
          "title": "Delete"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_organization_definitions_id"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_organization_definitions_created_at"
        },
        "credit_card_collections": {
          "$ref": "#/definitions/definitions_organization_definitions_credit_card_collections"
        },
        "default": {
          "$ref": "#/definitions/definitions_organization_definitions_default"
        },
        "membership_limit": {
          "$ref": "#/definitions/definitions_organization_definitions_membership_limit"
        },
        "name": {
          "$ref": "#/definitions/definitions_organization_definitions_name"
        },
        "provisioned_licenses": {
          "$ref": "#/definitions/definitions_organization_definitions_provisioned_licenses"
        },
        "role": {
          "$ref": "#/definitions/definitions_organization_definitions_role"
        },
        "type": {
          "$ref": "#/definitions/definitions_organization_definitions_type"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_organization_definitions_updated_at"
        }
      }
    },
    "otp-secret": {
      "description": "This renders a secret that clients can use to build a one-time password to be supplied as a 2nd factor of authentication.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "development",
      "strictProperties": true,
      "title": "Heroku Platform API - OTP Secret",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when OTP secret was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of OTP secret",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_otp-secret_definitions_id"
            }
          ]
        },
        "updated_at": {
          "description": "when OTP secret was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "url": {
          "description": "OTP secret rendered in URL format",
          "example": "otpauth://totp/username@example.com?issuer\u003dHeroku\u0026secret\u003dabcd1234",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create new OTP secret. This invalidates any existing OTP secrets on the account.",
          "href": "/account/otp-secret",
          "method": "POST",
          "rel": "create",
          "targetSchema": {
            "$ref": "#/definitions/otp-secret"
          },
          "title": "Create"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_otp-secret_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_otp-secret_definitions_id"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_otp-secret_definitions_updated_at"
        },
        "url": {
          "$ref": "#/definitions/definitions_otp-secret_definitions_url"
        }
      }
    },
    "outbound-ruleset": {
      "description": "An outbound-ruleset is a collection of rules that specify what hosts Dynos are allowed to communicate with. ",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Outbound Ruleset",
      "type": [
        "object"
      ],
      "definitions": {
        "target": {
          "description": "is the target destination in CIDR notation",
          "example": "1.1.1.1/1",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when outbound-ruleset was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of an outbound-ruleset",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "port": {
          "description": "an endpoint of communication in an operating system.",
          "example": 80,
          "readOnly": false,
          "type": [
            "integer"
          ]
        },
        "protocol": {
          "description": "formal standards and policies comprised of rules, procedures and formats that define communication between two or more devices over a network",
          "example": "tcp",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_outbound-ruleset_definitions_id"
            }
          ]
        },
        "rule": {
          "description": "the combination of an IP address in CIDR notation, a from_port, to_port and protocol.",
          "type": [
            "object"
          ],
          "properties": {
            "target": {
              "$ref": "#/definitions/definitions_outbound-ruleset_definitions_target"
            },
            "from_port": {
              "$ref": "#/definitions/definitions_outbound-ruleset_definitions_port"
            },
            "to_port": {
              "$ref": "#/definitions/definitions_outbound-ruleset_definitions_port"
            },
            "protocol": {
              "$ref": "#/definitions/definitions_outbound-ruleset_definitions_protocol"
            }
          },
          "required": [
            "target",
            "from_port",
            "to_port",
            "protocol"
          ]
        }
      },
      "links": [
        {
          "description": "Current outbound ruleset for a space",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/outbound-ruleset",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/outbound-ruleset"
          },
          "title": "Info"
        },
        {
          "description": "Info on an existing Outbound Ruleset",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/outbound-rulesets/{(%23%2Fdefinitions%2Foutbound-ruleset%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/outbound-ruleset"
          },
          "title": "Info"
        },
        {
          "description": "List all Outbound Rulesets for a space",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/outbound-rulesets",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/outbound-ruleset"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Create a new outbound ruleset",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/outbound-ruleset",
          "method": "PUT",
          "rel": "create",
          "schema": {
            "type": [
              "object"
            ],
            "properties": {
              "rules": {
                "type": [
                  "array"
                ],
                "items": {
                  "$ref": "#/definitions/definitions_outbound-ruleset_definitions_rule"
                }
              }
            }
          },
          "title": "Create"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_outbound-ruleset_definitions_id"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_outbound-ruleset_definitions_created_at"
        },
        "rules": {
          "type": [
            "array"
          ],
          "items": {
            "$ref": "#/definitions/definitions_outbound-ruleset_definitions_rule"
          }
        },
        "created_by": {
          "$ref": "#/definitions/definitions_account_definitions_email"
        }
      }
    },
    "password-reset": {
      "description": "A password reset represents a in-process password reset attempt.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - PasswordReset",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when password reset was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_account_definitions_email"
            }
          ]
        },
        "password_confirmation": {
          "description": "confirmation of the new password",
          "example": "newpassword",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "reset_password_token": {
          "description": "unique identifier of a password reset attempt",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Reset account\u0027s password. This will send a reset password link to the user\u0027s email address.",
          "href": "/password-resets",
          "method": "POST",
          "rel": "self",
          "schema": {
            "properties": {
              "email": {
                "$ref": "#/definitions/definitions_account_definitions_email"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Reset Password"
        },
        {
          "description": "Complete password reset.",
          "href": "/password-resets/{(%23%2Fdefinitions%2Fpassword-reset%2Fdefinitions%2Freset_password_token)}/actions/finalize",
          "method": "POST",
          "rel": "self",
          "schema": {
            "properties": {
              "password": {
                "$ref": "#/definitions/definitions_account_definitions_password"
              },
              "password_confirmation": {
                "$ref": "#/definitions/definitions_password-reset_definitions_password_confirmation"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Complete Reset Password"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_password-reset_definitions_created_at"
        },
        "user": {
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "payment-method": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "The on file payment method for an account",
      "stability": "prototype",
      "title": "Heroku Vault API - Payment Method",
      "type": [
        "object"
      ],
      "definitions": {
        "address_1": {
          "type": [
            "string"
          ],
          "description": "street address line 1",
          "example": "40 Hickory Lane"
        },
        "address_2": {
          "type": [
            "string"
          ],
          "description": "street address line 2",
          "example": "Suite 103"
        },
        "card_number": {
          "type": [
            "string"
          ],
          "description": "encrypted card number of payment method",
          "example": "encrypted-card-number"
        },
        "city": {
          "type": [
            "string"
          ],
          "description": "city",
          "example": "San Francisco"
        },
        "country": {
          "type": [
            "string"
          ],
          "description": "country",
          "example": "US"
        },
        "cvv": {
          "type": [
            "string"
          ],
          "description": "card verification value",
          "example": "123"
        },
        "expiration_month": {
          "type": [
            "string"
          ],
          "description": "expiration month",
          "example": "11"
        },
        "expiration_year": {
          "type": [
            "string"
          ],
          "description": "expiration year",
          "example": "2014"
        },
        "first_name": {
          "type": [
            "string"
          ],
          "description": "the first name for payment method",
          "example": "Jason"
        },
        "last_name": {
          "type": [
            "string"
          ],
          "description": "the last name for payment method",
          "example": "Walker"
        },
        "other": {
          "type": [
            "string"
          ],
          "description": "metadata",
          "example": "Additional information for payment method"
        },
        "postal_code": {
          "type": [
            "string"
          ],
          "description": "postal code",
          "example": "90210"
        },
        "state": {
          "type": [
            "string"
          ],
          "description": "state",
          "example": "CA"
        },
        "card_last4": {
          "type": [
            "string"
          ],
          "description": "last 4 digits of credit card number",
          "example": "1234",
          "readOnly": true
        },
        "card_type": {
          "type": [
            "string"
          ],
          "description": "name of credit card issuer",
          "example": "VISA",
          "readOnly": true
        },
        "heroku_id": {
          "type": [
            "string"
          ],
          "description": "heroku_id identifier reference",
          "example": "user930223902@heroku.com",
          "readOnly": true
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_invoice-address_definitions_heroku_id"
            }
          ]
        }
      },
      "links": [
        {
          "description": "Update an existing payment method for an account.",
          "href": "/account/payment-method",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "address_1": {
                "$ref": "#/definitions/definitions_payment-method_definitions_address_1"
              },
              "address_2": {
                "$ref": "#/definitions/definitions_payment-method_definitions_address_2"
              },
              "card_number": {
                "$ref": "#/definitions/definitions_payment-method_definitions_card_number"
              },
              "city": {
                "$ref": "#/definitions/definitions_payment-method_definitions_city"
              },
              "country": {
                "$ref": "#/definitions/definitions_payment-method_definitions_country"
              },
              "cvv": {
                "$ref": "#/definitions/definitions_payment-method_definitions_cvv"
              },
              "expiration_month": {
                "$ref": "#/definitions/definitions_payment-method_definitions_expiration_month"
              },
              "expiration_year": {
                "$ref": "#/definitions/definitions_payment-method_definitions_expiration_year"
              },
              "first_name": {
                "$ref": "#/definitions/definitions_payment-method_definitions_first_name"
              },
              "last_name": {
                "$ref": "#/definitions/definitions_payment-method_definitions_last_name"
              },
              "other": {
                "$ref": "#/definitions/definitions_payment-method_definitions_other"
              },
              "postal_code": {
                "$ref": "#/definitions/definitions_payment-method_definitions_postal_code"
              },
              "state": {
                "$ref": "#/definitions/definitions_payment-method_definitions_state"
              }
            },
            "required": [
              "address_1",
              "address_2",
              "card_number",
              "city",
              "country",
              "cvv",
              "expiration_month",
              "expiration_year",
              "first_name",
              "last_name",
              "postal_code",
              "state"
            ],
            "type": [
              "object"
            ]
          },
          "title": "update"
        },
        {
          "description": "Get the current payment method for an account.",
          "href": "/account/payment-method",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/payment-method"
          },
          "title": "get"
        }
      ],
      "properties": {
        "address_1": {
          "$ref": "#/definitions/definitions_payment-method_definitions_address_1"
        },
        "address_2": {
          "$ref": "#/definitions/definitions_payment-method_definitions_address_2"
        },
        "card_last4": {
          "$ref": "#/definitions/definitions_payment-method_definitions_card_last4"
        },
        "card_type": {
          "$ref": "#/definitions/definitions_payment-method_definitions_card_type"
        },
        "city": {
          "$ref": "#/definitions/definitions_payment-method_definitions_city"
        },
        "country": {
          "$ref": "#/definitions/definitions_payment-method_definitions_country"
        },
        "expiration_month": {
          "$ref": "#/definitions/definitions_payment-method_definitions_expiration_month"
        },
        "expiration_year": {
          "$ref": "#/definitions/definitions_payment-method_definitions_expiration_year"
        },
        "first_name": {
          "$ref": "#/definitions/definitions_payment-method_definitions_first_name"
        },
        "last_name": {
          "$ref": "#/definitions/definitions_payment-method_definitions_last_name"
        },
        "other": {
          "$ref": "#/definitions/definitions_payment-method_definitions_other"
        },
        "postal_code": {
          "$ref": "#/definitions/definitions_payment-method_definitions_postal_code"
        },
        "state": {
          "$ref": "#/definitions/definitions_payment-method_definitions_state"
        }
      }
    },
    "payment": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "A payment represents money collected for an account",
      "title": "Heroku Vault API - Payments",
      "stability": "prototype",
      "type": [
        "object"
      ],
      "definitions": {
        "account_id": {
          "type": [
            "integer"
          ],
          "description": "account that payment belongs to",
          "example": 8403923,
          "readOnly": true
        },
        "amount": {
          "type": [
            "number"
          ],
          "description": "amount of payment in cents",
          "example": 50000,
          "readOnly": false
        },
        "created_at": {
          "description": "when payment was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "type": [
            "integer"
          ],
          "description": "legacy unique identifier of payment",
          "example": 9403943,
          "readOnly": true
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_payment_definitions_id"
            }
          ]
        },
        "state": {
          "enum": [
            "failure",
            "pending",
            "success"
          ],
          "type": [
            "string"
          ],
          "description": "state of the payment",
          "example": "pending",
          "readOnly": true
        },
        "updated_at": {
          "description": "when credit was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "uuid": {
          "description": "unique identifier for a payment transaction",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": false,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a payment on an existing account",
          "href": "/account/payments",
          "method": "POST",
          "rel": "self",
          "schema": {
            "properties": {
              "amount": {
                "$ref": "#/definitions/definitions_payment_definitions_amount"
              },
              "invoice": {
                "$ref": "#/definitions/definitions_invoice_definitions_identity"
              },
              "uuid": {
                "$ref": "#/definitions/definitions_payment_definitions_uuid"
              }
            },
            "required": [
              "amount",
              "invoice",
              "uuid"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/payment"
          },
          "title": "create"
        }
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/definitions_payment_definitions_amount"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_payment_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_payment_definitions_id"
        },
        "invoice": {
          "description": "identity of invoice",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_invoice_definitions_id"
            },
            "number": {
              "$ref": "#/definitions/definitions_invoice_definitions_number"
            }
          },
          "type": [
            "null",
            "object"
          ]
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_payment_definitions_updated_at"
        },
        "user": {
          "description": "identity of user issuing payment",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "state": {
          "$ref": "#/definitions/definitions_payment_definitions_state"
        }
      }
    },
    "organization-app-permission": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "description": "An organization app permission is a behavior that is assigned to a user in an organization app.",
      "stability": "prototype",
      "title": "Heroku Platform API - Organization App Permission",
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_organization-app-permission_definitions_name"
            }
          ]
        },
        "name": {
          "description": "The name of the app permission.",
          "example": "view",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "description": {
          "description": "A description of what the app permission allows.",
          "example": "Can manage config, deploy, run commands and restart the app.",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Lists permissions available to organizations.",
          "href": "/organizations/permissions",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/organization-app-permission"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "name": {
          "$ref": "#/definitions/definitions_organization-app-permission_definitions_name"
        },
        "description": {
          "$ref": "#/definitions/definitions_organization-app-permission_definitions_description"
        }
      }
    },
    "pipeline-coupling": {
      "description": "Information about an app\u0027s coupling to a pipeline",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "title": "Heroku Platform API - Pipeline Coupling",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when pipeline coupling was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of pipeline coupling",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_pipeline-coupling_definitions_id"
            }
          ]
        },
        "stage": {
          "description": "target pipeline stage",
          "example": "production",
          "enum": [
            "review",
            "development",
            "staging",
            "production"
          ],
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when pipeline coupling was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "List couplings for a pipeline",
          "href": "/pipelines/{(%23%2Fdefinitions%2Fpipeline%2Fdefinitions%2Fid)}/pipeline-couplings",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/pipeline-coupling"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "List pipeline couplings.",
          "href": "/pipeline-couplings",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/pipeline-coupling"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Create a new pipeline coupling.",
          "href": "/pipeline-couplings",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "app": {
                "$ref": "#/definitions/definitions_app_definitions_identity"
              },
              "pipeline": {
                "$ref": "#/definitions/definitions_pipeline_definitions_id"
              },
              "stage": {
                "$ref": "#/definitions/definitions_pipeline-coupling_definitions_stage"
              }
            },
            "required": [
              "app",
              "pipeline",
              "stage"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/pipeline-coupling"
          },
          "title": "Create"
        },
        {
          "description": "Info for an existing pipeline coupling.",
          "href": "/pipeline-couplings/{(%23%2Fdefinitions%2Fpipeline-coupling%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/pipeline-coupling"
          },
          "title": "Info"
        },
        {
          "description": "Delete an existing pipeline coupling.",
          "href": "/pipeline-couplings/{(%23%2Fdefinitions%2Fpipeline-coupling%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "delete",
          "targetSchema": {
            "$ref": "#/definitions/pipeline-coupling"
          },
          "title": "Delete"
        },
        {
          "description": "Update an existing pipeline coupling.",
          "href": "/pipeline-couplings/{(%23%2Fdefinitions%2Fpipeline-coupling%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "stage": {
                "$ref": "#/definitions/definitions_pipeline-coupling_definitions_stage"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/pipeline-coupling"
          },
          "title": "Update"
        },
        {
          "description": "Info for an existing pipeline coupling.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/pipeline-couplings",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/pipeline-coupling"
          },
          "title": "Info"
        }
      ],
      "properties": {
        "app": {
          "description": "app involved in the pipeline coupling",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_pipeline-coupling_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_pipeline-coupling_definitions_id"
        },
        "pipeline": {
          "description": "pipeline involved in the coupling",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_pipeline_definitions_id"
            }
          },
          "type": [
            "object"
          ]
        },
        "stage": {
          "$ref": "#/definitions/definitions_pipeline-coupling_definitions_stage"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_pipeline-coupling_definitions_updated_at"
        }
      }
    },
    "pipeline-promotion-target": {
      "description": "Promotion targets represent an individual app being promoted to",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Pipeline Promotion Target",
      "type": [
        "object"
      ],
      "definitions": {
        "error_message": {
          "description": "an error message for why the promotion failed",
          "example": "User does not have access to that app",
          "type": [
            "null",
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of promotion target",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_pipeline-promotion-target_definitions_id"
            }
          ]
        },
        "status": {
          "description": "status of promotion",
          "example": "pending",
          "readOnly": true,
          "enum": [
            "pending",
            "succeeded",
            "failed"
          ],
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "List promotion targets belonging to an existing promotion.",
          "href": "/pipeline-promotions/{(%23%2Fdefinitions%2Fpipeline-promotion%2Fdefinitions%2Fid)}/promotion-targets",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/pipeline-promotion-target"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "app": {
          "description": "the app which was promoted to",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "error_message": {
          "$ref": "#/definitions/definitions_pipeline-promotion-target_definitions_error_message"
        },
        "id": {
          "$ref": "#/definitions/definitions_pipeline-promotion-target_definitions_id"
        },
        "pipeline_promotion": {
          "description": "the promotion which the target belongs to",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_pipeline-promotion_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "release": {
          "description": "the release which was created on the target app",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_release_definitions_id"
            }
          },
          "type": [
            "object",
            "null"
          ]
        },
        "status": {
          "$ref": "#/definitions/definitions_pipeline-promotion-target_definitions_status"
        }
      }
    },
    "pipeline-promotion": {
      "description": "Promotions allow you to move code from an app in a pipeline to all targets",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Pipeline Promotion",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when promotion was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of promotion",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_pipeline-promotion_definitions_id"
            }
          ]
        },
        "status": {
          "description": "status of promotion",
          "example": "pending",
          "readOnly": true,
          "enum": [
            "pending",
            "completed"
          ],
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when promotion was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new promotion.",
          "href": "/pipeline-promotions",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "pipeline": {
                "description": "pipeline involved in the promotion",
                "properties": {
                  "id": {
                    "$ref": "#/definitions/definitions_pipeline_definitions_id"
                  }
                },
                "required": [
                  "id"
                ],
                "type": [
                  "object"
                ]
              },
              "source": {
                "description": "the app being promoted from",
                "properties": {
                  "app": {
                    "description": "the app which was promoted from",
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/definitions_app_definitions_id"
                      }
                    },
                    "strictProperties": true,
                    "type": [
                      "object"
                    ]
                  }
                }
              },
              "targets": {
                "items": {
                  "properties": {
                    "app": {
                      "description": "the app is being promoted to",
                      "properties": {
                        "id": {
                          "$ref": "#/definitions/definitions_app_definitions_id"
                        }
                      },
                      "strictProperties": true,
                      "type": [
                        "object"
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "pipeline",
              "source",
              "targets"
            ],
            "type": [
              "object"
            ]
          },
          "title": "Create"
        },
        {
          "description": "Info for existing pipeline promotion.",
          "href": "/pipeline-promotions/{(%23%2Fdefinitions%2Fpipeline-promotion%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/pipeline-promotion"
          },
          "title": "Info"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_pipeline-promotion_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_pipeline-promotion_definitions_id"
        },
        "pipeline": {
          "description": "the pipeline which the promotion belongs to",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_pipeline_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "source": {
          "description": "the app being promoted from",
          "properties": {
            "app": {
              "description": "the app which was promoted from",
              "properties": {
                "id": {
                  "$ref": "#/definitions/definitions_app_definitions_id"
                }
              },
              "strictProperties": true,
              "type": [
                "object"
              ]
            },
            "release": {
              "description": "the release used to promoted from",
              "properties": {
                "id": {
                  "$ref": "#/definitions/definitions_release_definitions_id"
                }
              },
              "type": [
                "object"
              ]
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "status": {
          "$ref": "#/definitions/definitions_pipeline-promotion_definitions_status"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_pipeline-promotion_definitions_updated_at"
        }
      }
    },
    "pipeline": {
      "description": "A pipeline allows grouping of apps into different stages.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Pipeline",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when pipeline was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of pipeline",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_pipeline_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_pipeline_definitions_name"
            }
          ]
        },
        "name": {
          "description": "name of pipeline",
          "example": "example",
          "pattern": "^[a-z][a-z0-9-]{2,29}$",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when pipeline was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new pipeline.",
          "href": "/pipelines",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/definitions_pipeline_definitions_name"
              }
            },
            "required": [
              "name"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/pipeline"
          },
          "title": "Create"
        },
        {
          "description": "Info for existing pipeline.",
          "href": "/pipelines/{(%23%2Fdefinitions%2Fpipeline%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/pipeline"
          },
          "title": "Info"
        },
        {
          "description": "Delete an existing pipeline.",
          "href": "/pipelines/{(%23%2Fdefinitions%2Fpipeline%2Fdefinitions%2Fid)}",
          "method": "DELETE",
          "rel": "delete",
          "targetSchema": {
            "$ref": "#/definitions/pipeline"
          },
          "title": "Delete"
        },
        {
          "description": "Update an existing pipeline.",
          "href": "/pipelines/{(%23%2Fdefinitions%2Fpipeline%2Fdefinitions%2Fid)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/definitions_pipeline_definitions_name"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/pipeline"
          },
          "title": "Update"
        },
        {
          "description": "List existing pipelines.",
          "href": "/pipelines",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "type": [
            "array"
          ],
          "title": "List"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_pipeline_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_pipeline_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_pipeline_definitions_name"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_pipeline_definitions_updated_at"
        }
      }
    },
    "plan": {
      "description": "Plans represent different configurations of add-ons that may be added to apps. Endpoints under add-on services can be accessed without authentication.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Plan",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when plan was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "compliance": {
          "description": "the compliance regimes applied to an add-on plan",
          "example": [
            "HIPAA"
          ],
          "readOnly": false,
          "type": [
            "null",
            "array"
          ],
          "items": {
            "$ref": "#/definitions/definitions_plan_definitions_regime"
          }
        },
        "default": {
          "description": "whether this plan is the default for its add-on service",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "description": {
          "description": "description of plan",
          "example": "Heroku Postgres Dev",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "human_name": {
          "description": "human readable name of the add-on plan",
          "example": "Dev",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this plan",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "installable_inside_private_network": {
          "description": "whether this plan is installable to a Private Spaces app",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "installable_outside_private_network": {
          "description": "whether this plan is installable to a Common Runtime app",
          "example": true,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_plan_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_plan_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name of this plan",
          "example": "heroku-postgresql:dev",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "regime": {
          "description": "compliance requirements an add-on plan must adhere to",
          "readOnly": true,
          "example": "HIPAA",
          "type": [
            "string"
          ],
          "enum": [
            "HIPAA",
            "PCI"
          ]
        },
        "cents": {
          "description": "price in cents per unit of plan",
          "example": 0,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "unit": {
          "description": "unit of price for plan",
          "example": "month",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "space_default": {
          "description": "whether this plan is the default for apps in Private Spaces",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "state": {
          "description": "release status for plan",
          "example": "public",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when plan was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Info for existing plan.",
          "href": "/addon-services/{(%23%2Fdefinitions%2Fadd-on-service%2Fdefinitions%2Fidentity)}/plans/{(%23%2Fdefinitions%2Fplan%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/plan"
          },
          "title": "Info"
        },
        {
          "description": "List existing plans.",
          "href": "/addon-services/{(%23%2Fdefinitions%2Fadd-on-service%2Fdefinitions%2Fidentity)}/plans",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/plan"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "addon_service": {
          "description": "identity of add-on service",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_add-on-service_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_add-on-service_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_plan_definitions_created_at"
        },
        "compliance": {
          "$ref": "#/definitions/definitions_plan_definitions_compliance"
        },
        "default": {
          "$ref": "#/definitions/definitions_plan_definitions_default"
        },
        "description": {
          "$ref": "#/definitions/definitions_plan_definitions_description"
        },
        "human_name": {
          "$ref": "#/definitions/definitions_plan_definitions_human_name"
        },
        "id": {
          "$ref": "#/definitions/definitions_plan_definitions_id"
        },
        "installable_inside_private_network": {
          "$ref": "#/definitions/definitions_plan_definitions_installable_inside_private_network"
        },
        "installable_outside_private_network": {
          "$ref": "#/definitions/definitions_plan_definitions_installable_outside_private_network"
        },
        "name": {
          "$ref": "#/definitions/definitions_plan_definitions_name"
        },
        "price": {
          "description": "price",
          "properties": {
            "cents": {
              "$ref": "#/definitions/definitions_plan_definitions_cents"
            },
            "unit": {
              "$ref": "#/definitions/definitions_plan_definitions_unit"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "space_default": {
          "$ref": "#/definitions/definitions_plan_definitions_space_default"
        },
        "state": {
          "$ref": "#/definitions/definitions_plan_definitions_state"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_plan_definitions_updated_at"
        }
      }
    },
    "rate-limit": {
      "description": "Rate Limit represents the number of request tokens each account holds. Requests to this endpoint do not count towards the rate limit.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Rate Limit",
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {},
        "remaining": {
          "description": "allowed requests remaining in current interval",
          "example": 2399,
          "readOnly": true,
          "type": [
            "integer"
          ]
        }
      },
      "links": [
        {
          "description": "Info for rate limits.",
          "href": "/account/rate-limits",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/rate-limit"
          },
          "title": "Info"
        }
      ],
      "properties": {
        "remaining": {
          "$ref": "#/definitions/definitions_rate-limit_definitions_remaining"
        }
      }
    },
    "recovery-code": {
      "description": "Recovery codes grant access to accounts with two-factor authentication enabled.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "development",
      "strictProperties": true,
      "title": "Heroku Platform API - Recovery Code",
      "type": [
        "array"
      ],
      "items": {
        "example": "0123456789abcdef",
        "type": [
          "string"
        ]
      },
      "links": [
        {
          "description": "Generate new recovery codes. This invalidates any existing codes on the account.",
          "href": "/account/recovery-codes",
          "method": "POST",
          "rel": "create",
          "targetSchema": {
            "$ref": "#/definitions/recovery-code"
          },
          "title": "Create"
        }
      ]
    },
    "region": {
      "description": "A region represents a geographic location in which your application may run.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Region",
      "type": [
        "object"
      ],
      "definitions": {
        "country": {
          "description": "country where the region exists",
          "example": "United States",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when region was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "description": {
          "description": "description of region",
          "example": "United States",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of region",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_region_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_region_definitions_name"
            }
          ]
        },
        "locale": {
          "description": "area in the country where the region exists",
          "example": "Virginia",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "name": {
          "description": "unique name of region",
          "example": "us",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "private_capable": {
          "description": "whether or not region is available for creating a Private Space",
          "example": false,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        },
        "provider": {
          "description": "provider of underlying substrate",
          "type": [
            "object"
          ],
          "properties": {
            "name": {
              "description": "name of provider",
              "example": "amazon-web-services",
              "readOnly": true,
              "type": [
                "string"
              ]
            },
            "region": {
              "description": "region name used by provider",
              "example": "us-east-1",
              "readOnly": true,
              "type": [
                "string"
              ]
            }
          },
          "readOnly": true
        },
        "updated_at": {
          "description": "when region was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Info for existing region.",
          "href": "/regions/{(%23%2Fdefinitions%2Fregion%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/region"
          },
          "title": "Info"
        },
        {
          "description": "List existing regions.",
          "href": "/regions",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/region"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "country": {
          "$ref": "#/definitions/definitions_region_definitions_country"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_region_definitions_created_at"
        },
        "description": {
          "$ref": "#/definitions/definitions_region_definitions_description"
        },
        "id": {
          "$ref": "#/definitions/definitions_region_definitions_id"
        },
        "locale": {
          "$ref": "#/definitions/definitions_region_definitions_locale"
        },
        "name": {
          "$ref": "#/definitions/definitions_region_definitions_name"
        },
        "private_capable": {
          "$ref": "#/definitions/definitions_region_definitions_private_capable"
        },
        "provider": {
          "$ref": "#/definitions/definitions_region_definitions_provider"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_region_definitions_updated_at"
        }
      }
    },
    "release": {
      "description": "A release represents a combination of code, config vars and add-ons for an app on Heroku.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Release",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when release was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "description": {
          "description": "description of changes in this release",
          "example": "Added new feature",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "status": {
          "description": "current status of the release",
          "enum": [
            "failed",
            "pending",
            "succeeded"
          ],
          "example": "succeeded",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of release",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_release_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_release_definitions_version"
            }
          ]
        },
        "updated_at": {
          "description": "when release was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "version": {
          "description": "unique version assigned to the release",
          "example": 11,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "current": {
          "description": "indicates this release as being the current one for the app",
          "example": true,
          "readOnly": true,
          "type": [
            "boolean"
          ]
        }
      },
      "links": [
        {
          "description": "Info for existing release.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/releases/{(%23%2Fdefinitions%2Frelease%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/release"
          },
          "title": "Info"
        },
        {
          "description": "List existing releases.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/releases",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/release"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Create new release.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/releases",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "description": {
                "$ref": "#/definitions/definitions_release_definitions_description"
              },
              "slug": {
                "$ref": "#/definitions/definitions_slug_definitions_identity"
              }
            },
            "required": [
              "slug"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/release"
          },
          "title": "Create"
        },
        {
          "description": "Rollback to an existing release.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/releases",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "release": {
                "$ref": "#/definitions/definitions_release_definitions_id"
              }
            },
            "required": [
              "release"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/release"
          },
          "title": "Rollback"
        }
      ],
      "properties": {
        "addon_plan_names": {
          "description": "add-on plans installed on the app for this release",
          "type": [
            "array"
          ],
          "items": {
            "$ref": "#/definitions/definitions_plan_definitions_name"
          }
        },
        "app": {
          "description": "app involved in the release",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            },
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_release_definitions_created_at"
        },
        "description": {
          "$ref": "#/definitions/definitions_release_definitions_description"
        },
        "id": {
          "$ref": "#/definitions/definitions_release_definitions_id"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_release_definitions_updated_at"
        },
        "slug": {
          "description": "slug running in this release",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_slug_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object",
            "null"
          ]
        },
        "status": {
          "$ref": "#/definitions/definitions_release_definitions_status"
        },
        "user": {
          "description": "user that created the release",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            },
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "version": {
          "$ref": "#/definitions/definitions_release_definitions_version"
        },
        "current": {
          "$ref": "#/definitions/definitions_release_definitions_current"
        }
      }
    },
    "slug": {
      "description": "A slug is a snapshot of your application code that is ready to run on the platform.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Slug",
      "type": [
        "object"
      ],
      "definitions": {
        "buildpack_provided_description": {
          "description": "description from buildpack of slug",
          "example": "Ruby/Rack",
          "readOnly": false,
          "type": [
            "null",
            "string"
          ]
        },
        "checksum": {
          "description": "an optional checksum of the slug for verifying its integrity",
          "example": "SHA256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "commit": {
          "description": "identification of the code with your version control system (eg: SHA of the git HEAD)",
          "example": "60883d9e8947a57e04dc9124f25df004866a2051",
          "readOnly": false,
          "type": [
            "null",
            "string"
          ]
        },
        "commit_description": {
          "description": "an optional description of the provided commit",
          "example": "fixed a bug with API documentation",
          "readOnly": false,
          "type": [
            "null",
            "string"
          ]
        },
        "created_at": {
          "description": "when slug was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of slug",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_slug_definitions_id"
            }
          ]
        },
        "method": {
          "description": "method to be used to interact with the slug blob",
          "example": "GET",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "process_types": {
          "additionalProperties": false,
          "description": "hash mapping process type names to their respective command",
          "example": {
            "web": "./bin/web -p $PORT"
          },
          "patternProperties": {
            "^[-\\w]{1,128}$": {
              "type": [
                "string"
              ]
            }
          },
          "readOnly": false,
          "type": [
            "object"
          ]
        },
        "size": {
          "description": "size of slug, in bytes",
          "example": 2048,
          "readOnly": true,
          "type": [
            "integer",
            "null"
          ]
        },
        "updated_at": {
          "description": "when slug was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "url": {
          "description": "URL to interact with the slug blob",
          "example": "https://api.heroku.com/slugs/1234.tgz",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Info for existing slug.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/slugs/{(%23%2Fdefinitions%2Fslug%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/slug"
          },
          "title": "Info"
        },
        {
          "description": "Create a new slug. For more information please refer to [Deploying Slugs using the Platform API](https://devcenter.heroku.com/articles/platform-api-deploying-slugs).",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/slugs",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "buildpack_provided_description": {
                "$ref": "#/definitions/definitions_slug_definitions_buildpack_provided_description"
              },
              "checksum": {
                "$ref": "#/definitions/definitions_slug_definitions_checksum"
              },
              "commit": {
                "$ref": "#/definitions/definitions_slug_definitions_commit"
              },
              "commit_description": {
                "$ref": "#/definitions/definitions_slug_definitions_commit_description"
              },
              "process_types": {
                "$ref": "#/definitions/definitions_slug_definitions_process_types"
              },
              "stack": {
                "$ref": "#/definitions/definitions_stack_definitions_identity"
              }
            },
            "required": [
              "process_types"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/slug",
            "example": {
              "blob": {
                "method": "PUT",
                "url": "https://api.heroku.com/slugs/1234.tgz"
              },
              "buildpack_provided_description": "Ruby/Rack",
              "checksum": "SHA256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
              "commit": "60883d9e8947a57e04dc9124f25df004866a2051",
              "commit_description": "fixed a bug with API documentation",
              "created_at": "2012-01-01T12:00:00Z",
              "process_types": {
                "web": "./bin/web -p $PORT"
              },
              "size": 2048,
              "stack": {
                "name": "cedar-14"
              },
              "updated_at": "2012-01-01T12:00:00Z"
            }
          },
          "title": "Create"
        }
      ],
      "properties": {
        "blob": {
          "description": "pointer to the url where clients can fetch or store the actual release binary",
          "properties": {
            "method": {
              "$ref": "#/definitions/definitions_slug_definitions_method"
            },
            "url": {
              "$ref": "#/definitions/definitions_slug_definitions_url"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "buildpack_provided_description": {
          "$ref": "#/definitions/definitions_slug_definitions_buildpack_provided_description"
        },
        "checksum": {
          "$ref": "#/definitions/definitions_slug_definitions_checksum"
        },
        "commit": {
          "$ref": "#/definitions/definitions_slug_definitions_commit"
        },
        "commit_description": {
          "$ref": "#/definitions/definitions_slug_definitions_commit_description"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_slug_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_slug_definitions_id"
        },
        "process_types": {
          "$ref": "#/definitions/definitions_slug_definitions_process_types"
        },
        "size": {
          "$ref": "#/definitions/definitions_slug_definitions_size"
        },
        "stack": {
          "description": "identity of slug stack",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_stack_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_stack_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_slug_definitions_updated_at"
        }
      }
    },
    "sms-number": {
      "description": "SMS numbers are used for recovery on accounts with two-factor authentication enabled.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - SMS Number",
      "type": [
        "object"
      ],
      "definitions": {
        "sms_number": {
          "$ref": "#/definitions/definitions_account_definitions_sms_number"
        }
      },
      "links": [
        {
          "description": "Recover an account using an SMS recovery code",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}/sms-number",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/sms-number"
          },
          "title": "SMS Number"
        },
        {
          "description": "Recover an account using an SMS recovery code",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}/sms-number/actions/recover",
          "method": "POST",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/sms-number"
          },
          "title": "Recover"
        },
        {
          "description": "Confirm an SMS number change with a confirmation code",
          "href": "/users/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}/sms-number/actions/confirm",
          "method": "POST",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/sms-number"
          },
          "title": "Confirm"
        }
      ],
      "properties": {
        "sms_number": {
          "$ref": "#/definitions/definitions_account_definitions_sms_number"
        }
      }
    },
    "sni-endpoint": {
      "description": "SNI Endpoint is a public address serving a custom SSL cert for HTTPS traffic, using the SNI TLS extension, to a Heroku app. Note: only apps with the `http-sni` and `stable-cname` feature flags or those owned by a user with the `user-http-sni` and `user-stable-cname` feature flags are authorized to use this endpoint.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Heroku Platform API - SNI Endpoint",
      "stability": "development",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "certificate_chain": {
          "description": "raw contents of the public certificate chain (eg: .crt or .pem file)",
          "example": "-----BEGIN CERTIFICATE----- ...",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "cname": {
          "description": "canonical name record, the address to point a domain at",
          "example": "example.herokussl.com",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when endpoint was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this SNI endpoint",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_sni-endpoint_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_sni-endpoint_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name for SNI endpoint",
          "example": "example",
          "pattern": "^[a-z][a-z0-9-]{2,29}$",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "private_key": {
          "description": "contents of the private key (eg .key file)",
          "example": "-----BEGIN RSA PRIVATE KEY----- ...",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when SNI endpoint was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new SNI endpoint.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/sni-endpoints",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "certificate_chain": {
                "$ref": "#/definitions/definitions_sni-endpoint_definitions_certificate_chain"
              },
              "private_key": {
                "$ref": "#/definitions/definitions_sni-endpoint_definitions_private_key"
              }
            },
            "required": [
              "certificate_chain",
              "private_key"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/sni-endpoint"
          },
          "title": "Create"
        },
        {
          "description": "Delete existing SNI endpoint.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/sni-endpoints/{(%23%2Fdefinitions%2Fsni-endpoint%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/sni-endpoint"
          },
          "title": "Delete"
        },
        {
          "description": "Info for existing SNI endpoint.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/sni-endpoints/{(%23%2Fdefinitions%2Fsni-endpoint%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/sni-endpoint"
          },
          "title": "Info"
        },
        {
          "description": "List existing SNI endpoints.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/sni-endpoints",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/sni-endpoint"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Update an existing SNI endpoint.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/sni-endpoints/{(%23%2Fdefinitions%2Fsni-endpoint%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "certificate_chain": {
                "$ref": "#/definitions/definitions_sni-endpoint_definitions_certificate_chain"
              },
              "private_key": {
                "$ref": "#/definitions/definitions_sni-endpoint_definitions_private_key"
              }
            },
            "required": [
              "certificate_chain",
              "private_key"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/sni-endpoint"
          },
          "title": "Update"
        }
      ],
      "properties": {
        "certificate_chain": {
          "$ref": "#/definitions/definitions_sni-endpoint_definitions_certificate_chain"
        },
        "cname": {
          "$ref": "#/definitions/definitions_sni-endpoint_definitions_cname"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_sni-endpoint_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_sni-endpoint_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_sni-endpoint_definitions_name"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_sni-endpoint_definitions_updated_at"
        }
      }
    },
    "source": {
      "description": "A source is a location for uploading and downloading an application\u0027s source code.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Source",
      "type": [
        "object"
      ],
      "definitions": {
        "get_url": {
          "description": "URL to download the source",
          "example": "https://api.heroku.com/sources/1234.tgz",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "put_url": {
          "description": "URL to upload the source",
          "example": "https://api.heroku.com/sources/1234.tgz",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create URLs for uploading and downloading source.",
          "href": "/sources",
          "method": "POST",
          "rel": "create",
          "targetSchema": {
            "$ref": "#/definitions/source"
          },
          "title": "Create"
        },
        {
          "deactivate_on": "2017-08-01",
          "description": "Create URLs for uploading and downloading source. Deprecated in favor of `POST /sources`",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/sources",
          "method": "POST",
          "rel": "create",
          "targetSchema": {
            "$ref": "#/definitions/source"
          },
          "title": "Create (Deprecated)"
        }
      ],
      "properties": {
        "source_blob": {
          "description": "pointer to the URL where clients can fetch or store the source",
          "properties": {
            "get_url": {
              "$ref": "#/definitions/definitions_source_definitions_get_url"
            },
            "put_url": {
              "$ref": "#/definitions/definitions_source_definitions_put_url"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "space-app-access": {
      "description": "Space access represents the permissions a particular user has on a particular space.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "title": "Heroku Platform API - Space Access",
      "type": [
        "object"
      ],
      "definitions": {
        "id": {
          "description": "unique identifier of the space a user has permissions on",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_space-app-access_definitions_id"
            }
          ]
        }
      },
      "links": [
        {
          "description": "List permissions for a given user on a given space.",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/members/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/space-app-access"
          },
          "title": "Info"
        },
        {
          "description": "Update an existing user\u0027s set of permissions on a space.",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/members/{(%23%2Fdefinitions%2Faccount%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "permissions": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "name": {
                      "type": [
                        "string"
                      ]
                    }
                  }
                }
              }
            }
          },
          "targetSchema": {
            "$ref": "#/definitions/space-app-access"
          },
          "title": "Update"
        },
        {
          "description": "List all users and their permissions on a space.",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/members",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/space-app-access"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "space": {
          "description": "space user belongs to",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_app_definitions_name"
            },
            "id": {
              "$ref": "#/definitions/definitions_app_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "created_at": {
          "$ref": "#/definitions/definitions_space_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_space_definitions_id"
        },
        "permissions": {
          "description": "user space permissions",
          "type": [
            "array"
          ],
          "items": {
            "type": [
              "object"
            ],
            "properties": {
              "description": {
                "type": [
                  "string"
                ]
              },
              "name": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_space_definitions_updated_at"
        },
        "user": {
          "description": "identity of user account",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        }
      }
    },
    "space-nat": {
      "description": "Network address translation (NAT) for stable outbound IP addresses from a space",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Space Network Address Translation",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when network address translation for a space was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "ip_v4_address": {
          "example": "123.123.123.123",
          "format": "ipv4",
          "pattern": "^(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d?\\d|2[0-4]\\d|25[0-5])$",
          "type": [
            "string"
          ]
        },
        "sources": {
          "description": "potential IPs from which outbound network traffic will originate",
          "readOnly": true,
          "type": [
            "array"
          ],
          "items": {
            "$ref": "#/definitions/definitions_space-nat_definitions_ip_v4_address"
          }
        },
        "state": {
          "description": "availability of network address translation for a space",
          "enum": [
            "disabled",
            "updating",
            "enabled"
          ],
          "example": "enabled",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when network address translation for a space was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Current state of network address translation for a space.",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}/nat",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/space-nat"
          },
          "title": "Info"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_space-nat_definitions_created_at"
        },
        "sources": {
          "$ref": "#/definitions/definitions_space-nat_definitions_sources"
        },
        "state": {
          "$ref": "#/definitions/definitions_space-nat_definitions_state"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_space-nat_definitions_updated_at"
        }
      }
    },
    "space": {
      "description": "A space is an isolated, highly available, secure app execution environments, running in the modern VPC substrate.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Space",
      "type": [
        "object"
      ],
      "definitions": {
        "regime": {
          "description": "compliance requirements a space must adhere to",
          "readOnly": true,
          "example": "HIPAA",
          "type": [
            "string"
          ],
          "enum": [
            "HIPAA",
            "PCI"
          ]
        },
        "compliance": {
          "description": "the compliance regimes applied to a space",
          "example": [
            "HIPAA"
          ],
          "readOnly": false,
          "type": [
            "null",
            "array"
          ],
          "items": {
            "$ref": "#/definitions/definitions_space_definitions_regime"
          }
        },
        "created_at": {
          "description": "when space was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of space",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_space_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_space_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name of space",
          "example": "nasa",
          "readOnly": false,
          "pattern": "^[a-z0-9](?:[a-z0-9]|-(?!-))+[a-z0-9]$",
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "availability of this space",
          "enum": [
            "allocating",
            "allocated",
            "deleting"
          ],
          "example": "allocated",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when space was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "List existing spaces.",
          "href": "/spaces",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/space"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Info for existing space.",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/space"
          },
          "title": "Info"
        },
        {
          "description": "Update an existing space.",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/definitions_space_definitions_name"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/space"
          },
          "title": "Update"
        },
        {
          "description": "Delete an existing space.",
          "href": "/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/space"
          },
          "title": "Delete"
        },
        {
          "description": "Create a new space.",
          "href": "/spaces",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/definitions_space_definitions_name"
              },
              "organization": {
                "$ref": "#/definitions/definitions_organization_definitions_name"
              },
              "region": {
                "$ref": "#/definitions/definitions_region_definitions_identity"
              },
              "compliance": {
                "$ref": "#/definitions/definitions_space_definitions_compliance"
              }
            },
            "required": [
              "name",
              "organization"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/space"
          },
          "title": "Create"
        }
      ],
      "properties": {
        "compliance": {
          "$ref": "#/definitions/definitions_space_definitions_compliance"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_space_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_space_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_space_definitions_name"
        },
        "organization": {
          "description": "organization that owns this space",
          "properties": {
            "name": {
              "$ref": "#/definitions/definitions_organization_definitions_name"
            }
          },
          "type": [
            "object"
          ]
        },
        "region": {
          "description": "identity of space region",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_region_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_region_definitions_name"
            }
          },
          "strictProperties": true,
          "type": [
            "object"
          ]
        },
        "state": {
          "$ref": "#/definitions/definitions_space_definitions_state"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_space_definitions_updated_at"
        }
      }
    },
    "ssl-endpoint": {
      "description": "[SSL Endpoint](https://devcenter.heroku.com/articles/ssl-endpoint) is a public address serving custom SSL cert for HTTPS traffic to a Heroku app. Note that an app must have the `ssl:endpoint` add-on installed before it can provision an SSL Endpoint using these APIs.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Heroku Platform API - SSL Endpoint",
      "stability": "production",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "certificate_chain": {
          "description": "raw contents of the public certificate chain (eg: .crt or .pem file)",
          "example": "-----BEGIN CERTIFICATE----- ...",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "cname": {
          "description": "canonical name record, the address to point a domain at",
          "example": "example.herokussl.com",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when endpoint was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of this SSL endpoint",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_ssl-endpoint_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_ssl-endpoint_definitions_name"
            }
          ]
        },
        "name": {
          "description": "unique name for SSL endpoint",
          "example": "example",
          "pattern": "^[a-z][a-z0-9-]{2,29}$",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "preprocess": {
          "default": true,
          "description": "allow Heroku to modify an uploaded public certificate chain if deemed advantageous by adding missing intermediaries, stripping unnecessary ones, etc.",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "private_key": {
          "description": "contents of the private key (eg .key file)",
          "example": "-----BEGIN RSA PRIVATE KEY----- ...",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "rollback": {
          "default": false,
          "description": "indicates that a rollback should be performed",
          "example": false,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "updated_at": {
          "description": "when endpoint was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new SSL endpoint.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/ssl-endpoints",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "certificate_chain": {
                "$ref": "#/definitions/definitions_ssl-endpoint_definitions_certificate_chain"
              },
              "preprocess": {
                "$ref": "#/definitions/definitions_ssl-endpoint_definitions_preprocess"
              },
              "private_key": {
                "$ref": "#/definitions/definitions_ssl-endpoint_definitions_private_key"
              }
            },
            "required": [
              "certificate_chain",
              "private_key"
            ],
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/ssl-endpoint"
          },
          "title": "Create"
        },
        {
          "description": "Delete existing SSL endpoint.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/ssl-endpoints/{(%23%2Fdefinitions%2Fssl-endpoint%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/ssl-endpoint"
          },
          "title": "Delete"
        },
        {
          "description": "Info for existing SSL endpoint.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/ssl-endpoints/{(%23%2Fdefinitions%2Fssl-endpoint%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/ssl-endpoint"
          },
          "title": "Info"
        },
        {
          "description": "List existing SSL endpoints.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/ssl-endpoints",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/ssl-endpoint"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Update an existing SSL endpoint.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/ssl-endpoints/{(%23%2Fdefinitions%2Fssl-endpoint%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "certificate_chain": {
                "$ref": "#/definitions/definitions_ssl-endpoint_definitions_certificate_chain"
              },
              "preprocess": {
                "$ref": "#/definitions/definitions_ssl-endpoint_definitions_preprocess"
              },
              "private_key": {
                "$ref": "#/definitions/definitions_ssl-endpoint_definitions_private_key"
              },
              "rollback": {
                "$ref": "#/definitions/definitions_ssl-endpoint_definitions_rollback"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/ssl-endpoint"
          },
          "title": "Update"
        }
      ],
      "properties": {
        "certificate_chain": {
          "$ref": "#/definitions/definitions_ssl-endpoint_definitions_certificate_chain"
        },
        "cname": {
          "$ref": "#/definitions/definitions_ssl-endpoint_definitions_cname"
        },
        "created_at": {
          "$ref": "#/definitions/definitions_ssl-endpoint_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_ssl-endpoint_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_ssl-endpoint_definitions_name"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_ssl-endpoint_definitions_updated_at"
        }
      }
    },
    "stack": {
      "description": "Stacks are the different application execution environments available in the Heroku platform.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - Stack",
      "type": [
        "object"
      ],
      "definitions": {
        "created_at": {
          "description": "when stack was introduced",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "id": {
          "description": "unique identifier of stack",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_stack_definitions_name"
            },
            {
              "$ref": "#/definitions/definitions_stack_definitions_id"
            }
          ]
        },
        "name": {
          "description": "unique name of stack",
          "example": "cedar-14",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "availability of this stack: beta, deprecated or public",
          "example": "public",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when stack was last modified",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Stack info.",
          "href": "/stacks/{(%23%2Fdefinitions%2Fstack%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/stack"
          },
          "title": "Info"
        },
        {
          "description": "List available stacks.",
          "href": "/stacks",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/stack"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        }
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/definitions_stack_definitions_created_at"
        },
        "id": {
          "$ref": "#/definitions/definitions_stack_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_stack_definitions_name"
        },
        "state": {
          "$ref": "#/definitions/definitions_stack_definitions_state"
        },
        "updated_at": {
          "$ref": "#/definitions/definitions_stack_definitions_updated_at"
        }
      }
    },
    "user-preferences": {
      "description": "Tracks a user\u0027s preferences and message dismissals",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "production",
      "strictProperties": true,
      "title": "Heroku Platform API - User Preferences",
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_user-preferences_definitions_self"
            }
          ]
        },
        "self": {
          "description": "Implicit reference to currently authorized user",
          "enum": [
            "~"
          ],
          "example": "~",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "timezone": {
          "description": "User\u0027s default timezone",
          "example": "UTC",
          "readOnly": false,
          "type": [
            "string",
            "null"
          ]
        },
        "default-organization": {
          "description": "User\u0027s default organization",
          "example": "sushi-inc",
          "readOnly": false,
          "type": [
            "string",
            "null"
          ]
        },
        "dismissed-github-banner": {
          "description": "Whether the user has dismissed the GitHub link banner",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean",
            "null"
          ]
        },
        "dismissed-getting-started": {
          "description": "Whether the user has dismissed the getting started banner",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean",
            "null"
          ]
        },
        "dismissed-org-access-controls": {
          "description": "Whether the user has dismissed the Organization Access Controls banner",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean",
            "null"
          ]
        },
        "dismissed-org-wizard-notification": {
          "description": "Whether the user has dismissed the Organization Wizard",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean",
            "null"
          ]
        },
        "dismissed-pipelines-banner": {
          "description": "Whether the user has dismissed the Pipelines banner",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean",
            "null"
          ]
        },
        "dismissed-pipelines-github-banner": {
          "description": "Whether the user has dismissed the GitHub banner on a pipeline overview",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean",
            "null"
          ]
        },
        "dismissed-pipelines-github-banners": {
          "description": "Which pipeline uuids the user has dismissed the GitHub banner for",
          "example": [
            "96c68759-f310-4910-9867-e0b062064098"
          ],
          "readOnly": false,
          "type": [
            "null",
            "array"
          ],
          "items": {
            "$ref": "#/definitions/definitions_pipeline_definitions_id"
          }
        },
        "dismissed-sms-banner": {
          "description": "Whether the user has dismissed the 2FA SMS banner",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "links": [
        {
          "description": "Retrieve User Preferences",
          "href": "/users/{(%23%2Fdefinitions%2Fuser-preferences%2Fdefinitions%2Fidentity)}/preferences",
          "method": "GET",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/user-preferences"
          },
          "title": "List"
        },
        {
          "description": "Update User Preferences",
          "href": "/users/{(%23%2Fdefinitions%2Fuser-preferences%2Fdefinitions%2Fidentity)}/preferences",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "timezone": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_timezone"
              },
              "default-organization": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_default-organization"
              },
              "dismissed-github-banner": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-github-banner"
              },
              "dismissed-getting-started": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-getting-started"
              },
              "dismissed-org-access-controls": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-org-access-controls"
              },
              "dismissed-org-wizard-notification": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-org-wizard-notification"
              },
              "dismissed-pipelines-banner": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-pipelines-banner"
              },
              "dismissed-pipelines-github-banner": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-pipelines-github-banner"
              },
              "dismissed-pipelines-github-banners": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-pipelines-github-banners"
              },
              "dismissed-sms-banner": {
                "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-sms-banner"
              }
            }
          },
          "targetSchema": {
            "$ref": "#/definitions/user-preferences"
          },
          "title": "Update"
        }
      ],
      "properties": {
        "timezone": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_timezone"
        },
        "default-organization": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_default-organization"
        },
        "dismissed-github-banner": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-github-banner"
        },
        "dismissed-getting-started": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-getting-started"
        },
        "dismissed-org-access-controls": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-org-access-controls"
        },
        "dismissed-org-wizard-notification": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-org-wizard-notification"
        },
        "dismissed-pipelines-banner": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-pipelines-banner"
        },
        "dismissed-pipelines-github-banner": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-pipelines-github-banner"
        },
        "dismissed-pipelines-github-banners": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-pipelines-github-banners"
        },
        "dismissed-sms-banner": {
          "$ref": "#/definitions/definitions_user-preferences_definitions_dismissed-sms-banner"
        }
      }
    },
    "whitelisted-add-on-service": {
      "description": "Entities that have been whitelisted to be used by an Organization",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "prototype",
      "strictProperties": true,
      "title": "Heroku Platform API - Whitelisted Entity",
      "type": [
        "object"
      ],
      "definitions": {
        "added_at": {
          "description": "when the add-on service was whitelisted",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "added_by": {
          "description": "the user which whitelisted the Add-on Service",
          "properties": {
            "email": {
              "$ref": "#/definitions/definitions_account_definitions_email"
            },
            "id": {
              "$ref": "#/definitions/definitions_account_definitions_id"
            }
          },
          "readOnly": true,
          "type": [
            "object"
          ]
        },
        "addon_service": {
          "description": "the Add-on Service whitelisted for use",
          "properties": {
            "id": {
              "$ref": "#/definitions/definitions_add-on-service_definitions_id"
            },
            "name": {
              "$ref": "#/definitions/definitions_add-on-service_definitions_name"
            },
            "human_name": {
              "$ref": "#/definitions/definitions_add-on-service_definitions_human_name"
            }
          },
          "readOnly": true,
          "type": [
            "object"
          ]
        },
        "id": {
          "description": "unique identifier for this whitelisting entity",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/definitions_whitelisted-add-on-service_definitions_id"
            },
            {
              "$ref": "#/definitions/definitions_add-on-service_definitions_name"
            }
          ]
        }
      },
      "links": [
        {
          "description": "List all whitelisted Add-on Services for an Organization",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/whitelisted-addon-services",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/whitelisted-add-on-service"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Whitelist an Add-on Service",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/whitelisted-addon-services",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "addon_service": {
                "description": "name of the Add-on to whitelist",
                "example": "heroku-postgresql",
                "type": [
                  "string"
                ]
              }
            }
          },
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/whitelisted-add-on-service"
            },
            "type": [
              "array"
            ]
          },
          "title": "Create"
        },
        {
          "description": "Remove a whitelisted entity",
          "href": "/organizations/{(%23%2Fdefinitions%2Forganization%2Fdefinitions%2Fidentity)}/whitelisted-addon-services/{(%23%2Fdefinitions%2Fwhitelisted-add-on-service%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "targetSchema": {
            "$ref": "#/definitions/whitelisted-add-on-service"
          },
          "title": "Delete"
        }
      ],
      "properties": {
        "added_at": {
          "$ref": "#/definitions/definitions_whitelisted-add-on-service_definitions_added_at"
        },
        "added_by": {
          "$ref": "#/definitions/definitions_whitelisted-add-on-service_definitions_added_by"
        },
        "addon_service": {
          "$ref": "#/definitions/definitions_whitelisted-add-on-service_definitions_addon_service"
        },
        "id": {
          "$ref": "#/definitions/definitions_whitelisted-add-on-service_definitions_id"
        }
      }
    },
    "definitions_account-feature_definitions_id": {
      "description": "unique identifier of account feature",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account-feature_definitions_name": {
      "description": "unique name of account feature",
      "example": "name",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account-feature_definitions_enabled": {
      "description": "whether or not account feature has been enabled",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_account-feature_definitions_created_at": {
      "description": "when account feature was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account-feature_definitions_description": {
      "description": "description of account feature",
      "example": "Causes account to example.",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account-feature_definitions_doc_url": {
      "description": "documentation URL of account feature",
      "example": "http://devcenter.heroku.com/articles/example",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account-feature_definitions_state": {
      "description": "state of account feature",
      "example": "public",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account-feature_definitions_updated_at": {
      "description": "when account feature was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_email": {
      "description": "unique email address of account",
      "example": "username@example.com",
      "format": "email",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_id": {
      "description": "unique identifier of an account",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_self": {
      "description": "Implicit reference to currently authorized user",
      "enum": [
        "~"
      ],
      "example": "~",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_allow_tracking": {
      "default": true,
      "description": "whether to allow third party web activity tracking",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_account_definitions_beta": {
      "default": false,
      "description": "whether allowed to utilize beta Heroku features",
      "example": false,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_account_definitions_name": {
      "description": "full name of the account owner",
      "example": "Tina Edmonds",
      "readOnly": false,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_account_definitions_password": {
      "description": "current password on the account",
      "example": "currentpassword",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_new_password": {
      "description": "the new password for the account when changing the password",
      "example": "newpassword",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_created_at": {
      "description": "when account was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_federated": {
      "description": "whether the user is federated and belongs to an Identity Provider",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_identity-provider_definitions_id": {
      "description": "unique identifier of this identity provider",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization_definitions_name": {
      "description": "unique name of organization",
      "example": "example",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_last_login": {
      "description": "when account last authorized with Heroku",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_account_definitions_sms_number": {
      "description": "SMS number of account",
      "example": "+1 ***-***-1234",
      "readOnly": true,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_account_definitions_suspended_at": {
      "description": "when account was suspended",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_account_definitions_delinquent_at": {
      "description": "when account became delinquent",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_account_definitions_two_factor_authentication": {
      "description": "whether two-factor auth is enabled on the account",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_account_definitions_updated_at": {
      "description": "when account was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_verified": {
      "default": false,
      "description": "whether account has been verified with billing information",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_organization_definitions_id": {
      "description": "unique identifier of organization",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-attachment_definitions_id": {
      "description": "unique identifier of this add-on attachment",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-attachment_definitions_name": {
      "description": "unique name for this add-on attachment to this app",
      "example": "DATABASE",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_add-on_definitions_id"
        },
        {
          "$ref": "#/definitions/definitions_add-on_definitions_name"
        }
      ]
    },
    "definitions_add-on_definitions_id": {
      "description": "unique identifier of add-on",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on_definitions_name": {
      "description": "globally unique name of the add-on",
      "example": "acme-inc-primary-database",
      "pattern": "^[a-zA-Z][A-Za-z0-9_-]+$",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_app_definitions_id"
        },
        {
          "$ref": "#/definitions/definitions_app_definitions_name"
        }
      ]
    },
    "definitions_app_definitions_id": {
      "description": "unique identifier of app",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app_definitions_name": {
      "description": "unique name of app",
      "example": "example",
      "pattern": "^[a-z][a-z0-9-]{2,29}$",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-attachment_definitions_force": {
      "default": false,
      "description": "whether or not to allow existing attachment with same name to be replaced",
      "example": false,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_plan_definitions_id": {
      "description": "unique identifier of this plan",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_plan_definitions_name": {
      "description": "unique name of this plan",
      "example": "heroku-postgresql:dev",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-attachment_definitions_created_at": {
      "description": "when add-on attachment was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-attachment_definitions_updated_at": {
      "description": "when add-on attachment was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-attachment_definitions_web_url": {
      "description": "URL for logging into web interface of add-on in attached app context",
      "example": "https://postgres.heroku.com/databases/01234567-89ab-cdef-0123-456789abcdef",
      "format": "uri",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_add-on-config_definitions_name": {
      "description": "unique name of the config",
      "example": "FOO",
      "type": [
        "string"
      ]
    },
    "definitions_add-on-config_definitions_value": {
      "description": "value of the config",
      "example": "bar",
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_add-on-plan-action_definitions_id": {
      "description": "a unique identifier",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-plan-action_definitions_label": {
      "description": "the display text shown in Dashboard",
      "example": "Example",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-plan-action_definitions_action": {
      "description": "identifier of the action to take that is sent via SSO",
      "example": "example",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-plan-action_definitions_url": {
      "description": "absolute URL to use instead of an action",
      "example": "http://example.com?resource_id\u003d:resource_id",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-plan-action_definitions_requires_owner": {
      "description": "if the action requires the user to own the app",
      "example": true,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_add-on-region-capability_definitions_id": {
      "description": "unique identifier of this add-on-region-capability",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-region-capability_definitions_supports_private_networking": {
      "description": "whether the add-on can be installed to a Space",
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_add-on-service_definitions_id": {
      "description": "unique identifier of this add-on-service",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-service_definitions_name": {
      "description": "unique name of this add-on-service",
      "example": "heroku-postgresql",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-service_definitions_cli_plugin_name": {
      "description": "npm package name of the add-on service\u0027s Heroku CLI plugin",
      "example": "heroku-papertrail",
      "readOnly": true,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_add-on-service_definitions_created_at": {
      "description": "when add-on-service was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-service_definitions_human_name": {
      "description": "human-readable name of the add-on service provider",
      "example": "Heroku Postgres",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-service_definitions_state": {
      "description": "release status for add-on service",
      "enum": [
        "alpha",
        "beta",
        "ga",
        "shutdown"
      ],
      "example": "ga",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on-service_definitions_supports_multiple_installations": {
      "default": false,
      "description": "whether or not apps can have access to more than one instance of this add-on at the same time",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_add-on-service_definitions_supports_sharing": {
      "default": false,
      "description": "whether or not apps can have access to add-ons billed to a different app",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_add-on-service_definitions_updated_at": {
      "description": "when add-on-service was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_plan_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_plan_definitions_id"
        },
        {
          "$ref": "#/definitions/definitions_plan_definitions_name"
        }
      ]
    },
    "definitions_add-on_definitions_actions": {
      "description": "provider actions for this specific add-on",
      "type": [
        "array"
      ],
      "items": {
        "type": [
          "object"
        ]
      },
      "readOnly": true,
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_id"
        },
        "label": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_label"
        },
        "action": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_action"
        },
        "url": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_url"
        },
        "requires_owner": {
          "$ref": "#/definitions/definitions_add-on-plan-action_definitions_requires_owner"
        }
      }
    },
    "definitions_add-on_definitions_config_vars": {
      "description": "config vars exposed to the owning app by this add-on",
      "example": [
        "FOO",
        "BAZ"
      ],
      "items": {
        "type": [
          "string"
        ]
      },
      "readOnly": true,
      "type": [
        "array"
      ]
    },
    "definitions_add-on_definitions_created_at": {
      "description": "when add-on was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on_definitions_provider_id": {
      "description": "id of this add-on with its provider",
      "example": "abcd1234",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on_definitions_state": {
      "description": "state in the add-on\u0027s lifecycle",
      "enum": [
        "provisioning",
        "provisioned",
        "deprovisioned"
      ],
      "example": "provisioned",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on_definitions_updated_at": {
      "description": "when add-on was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_add-on_definitions_web_url": {
      "description": "URL for logging into web interface of add-on (e.g. a dashboard)",
      "example": "https://postgres.heroku.com/databases/01234567-89ab-cdef-0123-456789abcdef",
      "format": "uri",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_app-feature_definitions_id": {
      "description": "unique identifier of app feature",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-feature_definitions_name": {
      "description": "unique name of app feature",
      "example": "name",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-feature_definitions_enabled": {
      "description": "whether or not app feature has been enabled",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_app-feature_definitions_created_at": {
      "description": "when app feature was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-feature_definitions_description": {
      "description": "description of app feature",
      "example": "Causes app to example.",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-feature_definitions_doc_url": {
      "description": "documentation URL of app feature",
      "example": "http://devcenter.heroku.com/articles/example",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-feature_definitions_state": {
      "description": "state of app feature",
      "example": "public",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-feature_definitions_updated_at": {
      "description": "when app feature was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-setup_definitions_id": {
      "description": "unique identifier of app setup",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "readOnly": true,
      "type": [
        "string"
      ],
      "format": "uuid"
    },
    "definitions_app-setup_definitions_buildpack_override": {
      "description": "a buildpack override",
      "properties": {
        "url": {
          "description": "location of the buildpack",
          "example": "https://example.com/buildpack.tgz",
          "type": [
            "string"
          ]
        }
      },
      "type": [
        "object"
      ]
    },
    "definitions_app-setup_definitions_created_at": {
      "description": "when app setup was created",
      "example": "2012-01-01T12:00:00Z",
      "readOnly": true,
      "type": [
        "string"
      ],
      "format": "date-time"
    },
    "definitions_app-setup_definitions_updated_at": {
      "description": "when app setup was updated",
      "example": "2012-01-01T12:00:00Z",
      "readOnly": true,
      "type": [
        "string"
      ],
      "format": "date-time"
    },
    "definitions_app-setup_definitions_status": {
      "description": "the overall status of app setup",
      "example": "failed",
      "enum": [
        "failed",
        "pending",
        "succeeded"
      ],
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-setup_definitions_failure_message": {
      "description": "reason that app setup has failed",
      "example": "invalid app.json",
      "readOnly": true,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_build_definitions_id": {
      "description": "unique identifier of build",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_build_definitions_status": {
      "description": "status of build",
      "enum": [
        "failed",
        "pending",
        "succeeded"
      ],
      "example": "succeeded",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_build_definitions_output_stream_url": {
      "description": "Build process output will be available from this URL as a stream. The stream is available as either `text/plain` or `text/event-stream`. Clients should be prepared to handle disconnects and can resume the stream by sending a `Range` header (for `text/plain`) or a `Last-Event-Id` header (for `text/event-stream`).",
      "example": "https://build-output.heroku.com/streams/01234567-89ab-cdef-0123-456789abcdef",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-setup_definitions_manifest_errors": {
      "description": "errors associated with invalid app.json manifest file",
      "example": [
        "config var FOO is required"
      ],
      "readOnly": true,
      "items": {
        "type": [
          "string"
        ]
      },
      "type": [
        "array"
      ]
    },
    "definitions_app-setup_definitions_postdeploy": {
      "description": "result of postdeploy script",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "output": {
          "description": "output of the postdeploy script",
          "example": "assets precompiled",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "exit_code": {
          "description": "The exit code of the postdeploy script",
          "example": 1,
          "readOnly": true,
          "type": [
            "integer"
          ]
        }
      },
      "readOnly": true
    },
    "definitions_app-setup_definitions_resolved_success_url": {
      "description": "fully qualified success url",
      "example": "https://example.herokuapp.com/welcome",
      "readOnly": true,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_organization-app_definitions_locked": {
      "default": false,
      "description": "are other organization members forbidden from joining this app.",
      "example": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_organization-app_definitions_personal": {
      "default": false,
      "description": "force creation of the app in the user account even if a default org is set.",
      "example": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_region_definitions_name": {
      "description": "unique name of region",
      "example": "us",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_space_definitions_name": {
      "description": "unique name of space",
      "example": "nasa",
      "readOnly": false,
      "pattern": "^[a-z0-9](?:[a-z0-9]|-(?!-))+[a-z0-9]$",
      "type": [
        "string"
      ]
    },
    "definitions_stack_definitions_name": {
      "description": "unique name of stack",
      "example": "cedar-14",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-setup_definitions_overrides": {
      "description": "overrides of keys in the app.json manifest file",
      "example": {
        "buildpacks": [
          {
            "url": "https://example.com/buildpack.tgz"
          }
        ],
        "env": {
          "FOO": "bar",
          "BAZ": "qux"
        }
      },
      "properties": {
        "buildpacks": {
          "description": "overrides the buildpacks specified in the app.json manifest file",
          "example": [
            {
              "url": "https://example.com/buildpack.tgz"
            }
          ],
          "items": {
            "$ref": "#/definitions/definitions_app-setup_definitions_buildpack_override"
          },
          "type": [
            "array"
          ]
        },
        "env": {
          "description": "overrides of the env specified in the app.json manifest file",
          "example": {
            "FOO": "bar",
            "BAZ": "qux"
          },
          "readOnly": true,
          "additionalProperties": false,
          "patternProperties": {
            "^\\w+$": {
              "type": [
                "string"
              ]
            }
          },
          "type": [
            "object"
          ]
        }
      },
      "type": [
        "object"
      ]
    },
    "definitions_app-transfer_definitions_id": {
      "description": "unique identifier of app transfer",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_account_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_account_definitions_email"
        },
        {
          "$ref": "#/definitions/definitions_account_definitions_id"
        },
        {
          "$ref": "#/definitions/definitions_account_definitions_self"
        }
      ]
    },
    "definitions_app-transfer_definitions_silent": {
      "default": false,
      "description": "whether to suppress email notification when transferring apps",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_app-transfer_definitions_state": {
      "description": "the current state of an app transfer",
      "enum": [
        "pending",
        "accepted",
        "declined"
      ],
      "example": "pending",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-transfer_definitions_created_at": {
      "description": "when app transfer was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app-transfer_definitions_updated_at": {
      "description": "when app transfer was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_region_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_region_definitions_id"
        },
        {
          "$ref": "#/definitions/definitions_region_definitions_name"
        }
      ]
    },
    "definitions_region_definitions_id": {
      "description": "unique identifier of region",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_stack_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_stack_definitions_name"
        },
        {
          "$ref": "#/definitions/definitions_stack_definitions_id"
        }
      ]
    },
    "definitions_stack_definitions_id": {
      "description": "unique identifier of stack",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app_definitions_maintenance": {
      "default": false,
      "description": "maintenance status of app",
      "example": false,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_app_definitions_archived_at": {
      "description": "when app was archived",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_app_definitions_buildpack_provided_description": {
      "description": "description from buildpack of app",
      "example": "Ruby/Rack",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_app_definitions_created_at": {
      "description": "when app was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app_definitions_git_url": {
      "description": "git repo URL of app",
      "example": "https://git.heroku.com/example.git",
      "pattern": "^https://git\\.heroku\\.com/[a-z][a-z0-9-]{2,29}\\.git$",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app_definitions_released_at": {
      "description": "when app was released",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_app_definitions_repo_size": {
      "description": "git repo size in bytes of app",
      "example": 0,
      "readOnly": true,
      "type": [
        "integer",
        "null"
      ]
    },
    "definitions_app_definitions_slug_size": {
      "description": "slug size in bytes of app",
      "example": 0,
      "readOnly": true,
      "type": [
        "integer",
        "null"
      ]
    },
    "definitions_space_definitions_id": {
      "description": "unique identifier of space",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app_definitions_updated_at": {
      "description": "when app was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_app_definitions_web_url": {
      "description": "web URL of app",
      "example": "https://example.herokuapp.com/",
      "format": "uri",
      "pattern": "^https?://[a-z][a-z0-9-]{3,30}\\.herokuapp\\.com/$",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_build-result_definitions_line_definitions_stream": {
      "type": [
        "string"
      ],
      "enum": [
        "STDOUT",
        "STDERR"
      ],
      "description": "The output stream where the line was sent.",
      "example": "STDOUT",
      "readOnly": true
    },
    "definitions_build-result_definitions_line_definitions_line": {
      "type": [
        "string"
      ],
      "example": "-----\u003e Ruby app detected\n",
      "readOnly": true,
      "description": "A line of output from the build."
    },
    "definitions_build-result_definitions_exit_code": {
      "description": "status from the build",
      "example": 0,
      "readOnly": true,
      "type": [
        "number"
      ]
    },
    "definitions_build-result_definitions_line": {
      "description": "a single line of output to STDOUT or STDERR from the build.",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "example": {
        "stream": "STDOUT",
        "line": "-----\u003e Ruby app detected\n"
      },
      "readOnly": true,
      "definitions": {
        "stream": {
          "type": [
            "string"
          ],
          "enum": [
            "STDOUT",
            "STDERR"
          ],
          "description": "The output stream where the line was sent.",
          "example": "STDOUT",
          "readOnly": true
        },
        "line": {
          "type": [
            "string"
          ],
          "example": "-----\u003e Ruby app detected\n",
          "readOnly": true,
          "description": "A line of output from the build."
        }
      },
      "properties": {
        "stream": {
          "$ref": "#/definitions/definitions_build-result_definitions_line_definitions_stream"
        },
        "line": {
          "$ref": "#/definitions/definitions_build-result_definitions_line_definitions_line"
        }
      }
    },
    "definitions_buildpack-installation_definitions_url": {
      "description": "location of the buildpack for the app. Either a url (unofficial buildpacks) or an internal urn (heroku official buildpacks).",
      "example": "https://github.com/heroku/heroku-buildpack-ruby",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_release_definitions_id": {
      "description": "unique identifier of release",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_build_definitions_buildpacks": {
      "description": "buildpacks executed for this build, in order",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "Buildpack to execute in a build",
        "type": [
          "object"
        ],
        "properties": {
          "url": {
            "$ref": "#/definitions/definitions_buildpack-installation_definitions_url"
          }
        }
      }
    },
    "definitions_build_definitions_source_blob": {
      "description": "location of gzipped tarball of source code used to create build",
      "properties": {
        "checksum": {
          "description": "an optional checksum of the gzipped tarball for verifying its integrity",
          "example": "SHA256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
          "readOnly": true,
          "type": [
            "null",
            "string"
          ]
        },
        "url": {
          "description": "URL where gzipped tar archive of source code for build was downloaded.",
          "example": "https://example.com/source.tgz?token\u003dxyz",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "version": {
          "description": "Version of the gzipped tarball.",
          "example": "v1.3.0",
          "readOnly": true,
          "type": [
            "string",
            "null"
          ]
        }
      },
      "strictProperties": true,
      "type": [
        "object"
      ]
    },
    "definitions_build_definitions_created_at": {
      "description": "when build was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_build_definitions_release": {
      "description": "release resulting from the build",
      "strictProperties": true,
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_release_definitions_id"
        }
      },
      "example": {},
      "readOnly": true,
      "type": [
        "null",
        "object"
      ],
      "definitions": {
        "id": {
          "description": "unique identifier of release",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "type": [
            "string"
          ]
        }
      }
    },
    "definitions_slug_definitions_id": {
      "description": "unique identifier of slug",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_build_definitions_updated_at": {
      "description": "when build was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_buildpack-installation_definitions_update": {
      "additionalProperties": false,
      "description": "Properties to update a buildpack installation",
      "properties": {
        "buildpack": {
          "$ref": "#/definitions/definitions_buildpack-installation_definitions_url"
        }
      },
      "readOnly": false,
      "required": [
        "buildpack"
      ],
      "type": [
        "object"
      ]
    },
    "definitions_buildpack-installation_definitions_ordinal": {
      "description": "determines the order in which the buildpacks will execute",
      "example": 0,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_buildpack-installation_definitions_name": {
      "description": "either the shorthand name (heroku official buildpacks) or url (unofficial buildpacks) of the buildpack for the app",
      "example": "heroku/ruby",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_collaborator_definitions_email": {
      "description": "invited email address of collaborator",
      "example": "collaborator@example.com",
      "format": "email",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_collaborator_definitions_id": {
      "description": "unique identifier of collaborator",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_collaborator_definitions_silent": {
      "default": false,
      "description": "whether to suppress email invitation when creating collaborator",
      "example": false,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_collaborator_definitions_created_at": {
      "description": "when collaborator was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization_definitions_role": {
      "description": "role in the organization",
      "enum": [
        "admin",
        "collaborator",
        "member",
        "owner",
        null
      ],
      "example": "admin",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_collaborator_definitions_updated_at": {
      "description": "when collaborator was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_config-var_definitions_config_vars": {
      "additionalProperties": false,
      "description": "hash of config vars",
      "example": {
        "FOO": "bar",
        "BAZ": "qux"
      },
      "patternProperties": {
        "^\\w+$": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "type": [
        "object"
      ]
    },
    "definitions_credit_definitions_id": {
      "description": "unique identifier of credit",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "type": [
        "string"
      ]
    },
    "definitions_credit_definitions_amount": {
      "description": "total value of credit in cents",
      "example": 10000,
      "type": [
        "number"
      ]
    },
    "definitions_credit_definitions_balance": {
      "description": "remaining value of credit in cents",
      "example": 5000,
      "type": [
        "number"
      ]
    },
    "definitions_credit_definitions_created_at": {
      "description": "when credit was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "type": [
        "string"
      ]
    },
    "definitions_credit_definitions_expires_at": {
      "description": "when credit will expire",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "type": [
        "string"
      ]
    },
    "definitions_credit_definitions_title": {
      "description": "a name for credit",
      "example": "gift card",
      "type": [
        "string"
      ]
    },
    "definitions_credit_definitions_updated_at": {
      "description": "when credit was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "type": [
        "string"
      ]
    },
    "definitions_domain_definitions_id": {
      "description": "unique identifier of this domain",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_domain_definitions_hostname": {
      "description": "full hostname",
      "example": "subdomain.example.com",
      "format": "uri",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_domain_definitions_cname": {
      "description": "canonical name record, the address to point a domain at",
      "example": "example.herokudns.com",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_domain_definitions_created_at": {
      "description": "when domain was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_domain_definitions_kind": {
      "description": "type of domain name",
      "enum": [
        "heroku",
        "custom"
      ],
      "example": "custom",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_domain_definitions_updated_at": {
      "description": "when domain was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_domain_definitions_status": {
      "description": "status of this record\u0027s cname",
      "example": "pending",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_dyno_definitions_id": {
      "description": "unique identifier of this dyno",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_dyno_definitions_name": {
      "description": "the name of this process on this dyno",
      "example": "run.1",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_dyno_definitions_attach": {
      "description": "whether to stream output or not",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_dyno_definitions_command": {
      "description": "command used to start this process",
      "example": "bash",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_dyno_definitions_env": {
      "additionalProperties": false,
      "description": "custom environment to add to the dyno config vars",
      "example": {
        "COLUMNS": "80",
        "LINES": "24"
      },
      "patternProperties": {
        "^\\w+$": {
          "type": [
            "string"
          ]
        }
      },
      "readOnly": false,
      "strictProperties": true,
      "type": [
        "object"
      ]
    },
    "definitions_dyno_definitions_force_no_tty": {
      "description": "force an attached one-off dyno to not run in a tty",
      "readOnly": false,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_dyno_definitions_size": {
      "description": "dyno size (default: \"standard-1X\")",
      "example": "standard-1X",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_dyno_definitions_type": {
      "description": "type of process",
      "example": "run",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_dyno_definitions_time_to_live": {
      "description": "seconds until dyno expires, after which it will soon be killed",
      "example": 1800,
      "readOnly": false,
      "type": [
        "integer"
      ]
    },
    "definitions_dyno_definitions_attach_url": {
      "description": "a URL to stream output from for attached processes or null for non-attached processes",
      "example": "rendezvous://rendezvous.runtime.heroku.com:5000/{rendezvous-id}",
      "readOnly": true,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_dyno_definitions_created_at": {
      "description": "when dyno was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_release_definitions_version": {
      "description": "unique version assigned to the release",
      "example": 11,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_dyno_definitions_state": {
      "description": "current status of process (either: crashed, down, idle, starting, or up)",
      "example": "up",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_dyno_definitions_updated_at": {
      "description": "when process last changed state",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_event_definitions_id": {
      "description": "unique identifier of an event",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_event_definitions_action": {
      "description": "the operation performed on the resource",
      "enum": [
        "create",
        "destroy",
        "update"
      ],
      "example": "create",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_event_definitions_created_at": {
      "description": "when the event was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_event_definitions_data": {
      "description": "the serialized resource affected by the event",
      "example": {},
      "anyOf": [
        {
          "$ref": "#/definitions/account"
        },
        {
          "$ref": "#/definitions/add-on"
        },
        {
          "$ref": "#/definitions/add-on-attachment"
        },
        {
          "$ref": "#/definitions/app"
        },
        {
          "$ref": "#/definitions/app-setup"
        },
        {
          "$ref": "#/definitions/app-transfer"
        },
        {
          "$ref": "#/definitions/build"
        },
        {
          "$ref": "#/definitions/collaborator"
        },
        {
          "$ref": "#/definitions/domain"
        },
        {
          "$ref": "#/definitions/dyno"
        },
        {
          "$ref": "#/definitions/failed-event"
        },
        {
          "$ref": "#/definitions/formation"
        },
        {
          "$ref": "#/definitions/organization"
        },
        {
          "$ref": "#/definitions/release"
        },
        {
          "$ref": "#/definitions/space"
        }
      ],
      "readOnly": true,
      "type": [
        "object"
      ]
    },
    "definitions_event_definitions_published_at": {
      "description": "when the event was published",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_event_definitions_resource": {
      "description": "the type of resource affected",
      "enum": [
        "addon",
        "addon-attachment",
        "app",
        "app-setup",
        "app-transfer",
        "build",
        "collaborator",
        "domain",
        "dyno",
        "failed-event",
        "formation",
        "organization",
        "release",
        "space",
        "user"
      ],
      "example": "app",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_event_definitions_sequence": {
      "description": "a numeric string representing the event\u0027s sequence",
      "example": "1234567890",
      "pattern": "^[0-9]{1,128}$",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_event_definitions_updated_at": {
      "description": "when the event was updated (same as created)",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_event_definitions_version": {
      "description": "the event\u0027s API version string",
      "example": "application/vnd.heroku+json; version\u003d3",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_failed-event_definitions_action": {
      "description": "The attempted operation performed on the resource.",
      "enum": [
        "create",
        "destroy",
        "update",
        "unknown"
      ],
      "example": "create",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_failed-event_definitions_code": {
      "description": "An HTTP status code.",
      "example": 404,
      "readOnly": true,
      "type": [
        "integer",
        "null"
      ]
    },
    "definitions_failed-event_definitions_error_id": {
      "description": "ID of error raised.",
      "example": "rate_limit",
      "readOnly": true,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_failed-event_definitions_message": {
      "description": "A detailed error message.",
      "example": "Your account reached the API rate limit\nPlease wait a few minutes before making new requests",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_failed-event_definitions_method": {
      "description": "The HTTP method type of the failed action.",
      "enum": [
        "DELETE",
        "GET",
        "HEAD",
        "OPTIONS",
        "PATCH",
        "POST",
        "PUT"
      ],
      "example": "POST",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_failed-event_definitions_path": {
      "description": "The path of the attempted operation.",
      "example": "/apps/my-app",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_failed-event_definitions_resource_id": {
      "description": "Unique identifier of a resource.",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_filter-apps_definitions_in": {
      "type": [
        "object"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_filter-apps_definitions_id"
        }
      }
    },
    "definitions_filter-apps_definitions_id": {
      "type": [
        "array"
      ],
      "items": {
        "$ref": "#/definitions/definitions_app_definitions_id"
      }
    },
    "definitions_filter-apps_definitions_filter": {
      "type": [
        "object"
      ],
      "properties": {
        "in": {
          "$ref": "#/definitions/definitions_filter-apps_definitions_in"
        }
      }
    },
    "definitions_formation_definitions_id": {
      "description": "unique identifier of this process type",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_formation_definitions_type": {
      "description": "type of process to maintain",
      "example": "web",
      "readOnly": true,
      "pattern": "^[-\\w]{1,128}$",
      "type": [
        "string"
      ]
    },
    "definitions_formation_definitions_quantity": {
      "description": "number of processes to maintain",
      "example": 1,
      "readOnly": false,
      "type": [
        "integer"
      ]
    },
    "definitions_formation_definitions_size": {
      "description": "dyno size (default: \"standard-1X\")",
      "example": "standard-1X",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_formation_definitions_update": {
      "additionalProperties": false,
      "description": "Properties to update a process type",
      "properties": {
        "quantity": {
          "$ref": "#/definitions/definitions_formation_definitions_quantity"
        },
        "size": {
          "$ref": "#/definitions/definitions_formation_definitions_size"
        },
        "type": {
          "$ref": "#/definitions/definitions_formation_definitions_type"
        }
      },
      "readOnly": false,
      "required": [
        "type"
      ],
      "type": [
        "object"
      ]
    },
    "definitions_formation_definitions_command": {
      "description": "command to use to launch this process",
      "example": "bundle exec rails server -p $PORT",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_formation_definitions_created_at": {
      "description": "when process type was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_formation_definitions_updated_at": {
      "description": "when dyno type was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_identity-provider_definitions_certificate": {
      "description": "raw contents of the public certificate (eg: .crt or .pem file)",
      "example": "-----BEGIN CERTIFICATE----- ...",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_identity-provider_definitions_entity_id": {
      "description": "URL identifier provided by the identity provider",
      "example": "https://customer-domain.idp.com",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_identity-provider_definitions_slo_target_url": {
      "description": "single log out URL for this identity provider",
      "example": "https://example.com/idp/logout",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_identity-provider_definitions_sso_target_url": {
      "description": "single sign on URL for this identity provider",
      "example": "https://example.com/idp/login",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_identity-provider_definitions_created_at": {
      "description": "when provider record was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_identity-provider_definitions_updated_at": {
      "description": "when the identity provider record was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_inbound-ruleset_definitions_id": {
      "description": "unique identifier of an inbound-ruleset",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_inbound-ruleset_definitions_action": {
      "description": "states whether the connection is allowed or denied",
      "example": "allow",
      "readOnly": false,
      "type": [
        "string"
      ],
      "enum": [
        "allow",
        "deny"
      ]
    },
    "definitions_inbound-ruleset_definitions_source": {
      "description": "is the request’s source in CIDR notation",
      "example": "1.1.1.1/1",
      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_inbound-ruleset_definitions_rule": {
      "description": "the combination of an IP address in CIDR notation and whether to allow or deny it\u0027s traffic.",
      "type": [
        "object"
      ],
      "properties": {
        "action": {
          "$ref": "#/definitions/definitions_inbound-ruleset_definitions_action"
        },
        "source": {
          "$ref": "#/definitions/definitions_inbound-ruleset_definitions_source"
        }
      },
      "required": [
        "source",
        "action"
      ]
    },
    "definitions_inbound-ruleset_definitions_created_at": {
      "description": "when inbound-ruleset was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_invitation_definitions_token": {
      "description": "Unique identifier of an invitation",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_invitation_definitions_receive_newsletter": {
      "description": "whether this user should receive a newsletter or not",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_invitation_definitions_created_at": {
      "description": "when invitation was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_invoice-address_definitions_heroku_id": {
      "type": [
        "string"
      ],
      "description": "heroku_id identifier reference",
      "example": "user930223902@heroku.com",
      "readOnly": true
    },
    "definitions_invoice-address_definitions_address_1": {
      "type": [
        "string"
      ],
      "description": "invoice street address line 1",
      "example": "40 Hickory Blvd."
    },
    "definitions_invoice-address_definitions_address_2": {
      "type": [
        "string"
      ],
      "description": "invoice street address line 2",
      "example": "Suite 300"
    },
    "definitions_invoice-address_definitions_city": {
      "type": [
        "string"
      ],
      "description": "invoice city",
      "example": "Seattle"
    },
    "definitions_invoice-address_definitions_country": {
      "type": [
        "string"
      ],
      "description": "country",
      "example": "US"
    },
    "definitions_invoice-address_definitions_other": {
      "type": [
        "string"
      ],
      "description": "metadata / additional information to go on invoice",
      "example": "Company ABC Inc. VAT 903820"
    },
    "definitions_invoice-address_definitions_postal_code": {
      "type": [
        "string"
      ],
      "description": "invoice zip code",
      "example": "98101"
    },
    "definitions_invoice-address_definitions_state": {
      "type": [
        "string"
      ],
      "description": "invoice state",
      "example": "WA"
    },
    "definitions_invoice-address_definitions_use_invoice_address": {
      "type": [
        "boolean"
      ],
      "description": "flag to use the invoice address for an account or not",
      "example": true,
      "default": false
    },
    "definitions_invoice-address_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_invoice-address_definitions_heroku_id"
        }
      ]
    },
    "definitions_invoice_definitions_number": {
      "description": "human readable invoice number",
      "example": 9403943,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_invoice_definitions_charges_total": {
      "description": "total charges on this invoice",
      "example": 100.0,
      "readOnly": true,
      "type": [
        "number"
      ]
    },
    "definitions_invoice_definitions_created_at": {
      "description": "when invoice was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_invoice_definitions_credits_total": {
      "description": "total credits on this invoice",
      "example": 100.0,
      "readOnly": true,
      "type": [
        "number"
      ]
    },
    "definitions_invoice_definitions_id": {
      "description": "unique identifier of this invoice",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_invoice_definitions_period_end": {
      "description": "the ending date that the invoice covers",
      "example": "01/31/2014",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_invoice_definitions_period_start": {
      "description": "the starting date that this invoice covers",
      "example": "01/01/2014",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_invoice_definitions_state": {
      "description": "payment status for this invoice (pending, successful, failed)",
      "example": 1,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_invoice_definitions_total": {
      "description": "combined total of charges and credits on this invoice",
      "example": 100.0,
      "readOnly": true,
      "type": [
        "number"
      ]
    },
    "definitions_invoice_definitions_updated_at": {
      "description": "when invoice was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_key_definitions_id": {
      "description": "unique identifier of this key",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_key_definitions_fingerprint": {
      "description": "a unique identifying string based on contents",
      "example": "17:63:a4:ba:24:d3:7f:af:17:c8:94:82:7e:80:56:bf",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_key_definitions_public_key": {
      "description": "full public_key as uploaded",
      "example": "ssh-rsa AAAAB3NzaC1ycVc/../839Uv username@example.com",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_key_definitions_comment": {
      "description": "comment on the key",
      "example": "username@host",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_key_definitions_created_at": {
      "description": "when key was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_key_definitions_email": {
      "deprecated": true,
      "description": "deprecated. Please refer to \u0027comment\u0027 instead",
      "example": "username@host",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_key_definitions_updated_at": {
      "description": "when key was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_log-drain_definitions_id": {
      "description": "unique identifier of this log drain",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_log-drain_definitions_url": {
      "description": "url associated with the log drain",
      "example": "https://example.com/drain",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_log-drain_definitions_token": {
      "description": "token associated with the log drain",
      "example": "d.01234567-89ab-cdef-0123-456789abcdef",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_log-drain_definitions_addon": {
      "description": "add-on that created the drain",
      "example": {
        "name": "singing-swiftly-1242"
      },
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_add-on_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_add-on_definitions_name"
        }
      },
      "readOnly": true,
      "type": [
        "object",
        "null"
      ]
    },
    "definitions_log-drain_definitions_created_at": {
      "description": "when log drain was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_log-drain_definitions_updated_at": {
      "description": "when log drain was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_log-session_definitions_id": {
      "description": "unique identifier of this log session",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_log-session_definitions_dyno": {
      "description": "dyno to limit results to",
      "example": "web.1",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_log-session_definitions_lines": {
      "description": "number of log lines to stream at once",
      "example": 10,
      "readOnly": false,
      "type": [
        "integer"
      ]
    },
    "definitions_log-session_definitions_source": {
      "description": "log source to limit results to",
      "example": "app",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_log-session_definitions_tail": {
      "description": "whether to stream ongoing logs",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_log-session_definitions_created_at": {
      "description": "when log connection was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_log-session_definitions_logplex_url": {
      "description": "URL for log streaming session",
      "example": "https://logplex.heroku.com/sessions/01234567-89ab-cdef-0123-456789abcdef?srv\u003d1325419200",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_log-session_definitions_updated_at": {
      "description": "when log session was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-authorization_definitions_id": {
      "description": "unique identifier of OAuth authorization",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-client_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_oauth-client_definitions_id"
        }
      ]
    },
    "definitions_oauth-client_definitions_id": {
      "description": "unique identifier of this OAuth client",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-authorization_definitions_description": {
      "description": "human-friendly description of this OAuth authorization",
      "example": "sample authorization",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-token_definitions_expires_in": {
      "description": "seconds until OAuth token expires; may be `null` for tokens with indefinite lifetime",
      "example": 2592000,
      "readOnly": true,
      "type": [
        "null",
        "integer"
      ]
    },
    "definitions_oauth-authorization_definitions_scope": {
      "description": "The scope of access OAuth authorization allows",
      "example": [
        "global"
      ],
      "readOnly": true,
      "type": [
        "array"
      ],
      "items": {
        "type": [
          "string"
        ]
      }
    },
    "definitions_oauth-token_definitions_id": {
      "description": "unique identifier of OAuth token",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-token_definitions_token": {
      "description": "contents of the token to be used for authorization",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-client_definitions_name": {
      "description": "OAuth client name",
      "example": "example",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-client_definitions_redirect_uri": {
      "description": "endpoint for redirection after authorization with OAuth client",
      "example": "https://example.com/auth/heroku/callback",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-authorization_definitions_created_at": {
      "description": "when OAuth authorization was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-grant_definitions_code": {
      "description": "grant code received from OAuth web application authorization",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-grant_definitions_expires_in": {
      "description": "seconds until OAuth grant expires",
      "example": 2592000,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_oauth-grant_definitions_id": {
      "description": "unique identifier of OAuth grant",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-authorization_definitions_updated_at": {
      "description": "when OAuth authorization was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-client_definitions_created_at": {
      "description": "when OAuth client was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-client_definitions_ignores_delinquent": {
      "description": "whether the client is still operable given a delinquent account",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_oauth-client_definitions_secret": {
      "description": "secret used to obtain OAuth authorizations under this client",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-client_definitions_updated_at": {
      "description": "when OAuth client was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-grant_definitions_type": {
      "description": "type of grant requested, one of `authorization_code` or `refresh_token`",
      "example": "authorization_code",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-token_definitions_created_at": {
      "description": "when OAuth token was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_oauth-token_definitions_updated_at": {
      "description": "when OAuth token was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-app_definitions_joined": {
      "default": false,
      "description": "is the current member a collaborator on this app.",
      "example": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_organization-feature_definitions_id": {
      "description": "unique identifier of organization feature",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-feature_definitions_name": {
      "description": "unique name of organization feature",
      "example": "name",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invitation_definitions_id": {
      "description": "Unique identifier of an invitation",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invitation_definitions_created_at": {
      "description": "when invitation was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invitation_definitions_updated_at": {
      "description": "when invitation was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invoice_definitions_number": {
      "description": "human readable invoice number",
      "example": 9403943,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_organization-invoice_definitions_addons_total": {
      "description": "total add-ons charges in on this invoice",
      "example": 25000,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_organization-invoice_definitions_database_total": {
      "description": "total database charges on this invoice",
      "example": 25000,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_organization-invoice_definitions_charges_total": {
      "description": "total charges on this invoice",
      "example": 0,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_organization-invoice_definitions_created_at": {
      "description": "when invoice was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invoice_definitions_credits_total": {
      "description": "total credits on this invoice",
      "example": 100000,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_organization-invoice_definitions_dyno_units": {
      "description": "The total amount of dyno units consumed across dyno types.",
      "example": 1.92,
      "readOnly": true,
      "type": [
        "number"
      ]
    },
    "definitions_organization-invoice_definitions_id": {
      "description": "unique identifier of this invoice",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invoice_definitions_payment_status": {
      "description": "Status of the invoice payment.",
      "example": "Paid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invoice_definitions_period_end": {
      "description": "the ending date that the invoice covers",
      "example": "01/31/2014",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invoice_definitions_period_start": {
      "description": "the starting date that this invoice covers",
      "example": "01/01/2014",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invoice_definitions_platform_total": {
      "description": "total platform charges on this invoice",
      "example": 50000,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_organization-invoice_definitions_state": {
      "description": "payment status for this invoice (pending, successful, failed)",
      "example": 1,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_organization-invoice_definitions_total": {
      "description": "combined total of charges and credits on this invoice",
      "example": 100000,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_organization-invoice_definitions_updated_at": {
      "description": "when invoice was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-invoice_definitions_weighted_dyno_hours": {
      "description": "The total amount of hours consumed across dyno types.",
      "example": 1488,
      "readOnly": true,
      "type": [
        "number"
      ]
    },
    "definitions_organization-member_definitions_email": {
      "description": "email address of the organization member",
      "example": "someone@example.org",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-member_definitions_id": {
      "description": "unique identifier of organization member",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-member_definitions_federated": {
      "description": "whether the user is federated and belongs to an Identity Provider",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_organization-member_definitions_created_at": {
      "description": "when the membership record was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-member_definitions_two_factor_authentication": {
      "description": "whether the Enterprise organization member has two factor authentication enabled",
      "example": true,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_organization-member_definitions_updated_at": {
      "description": "when the membership record was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-payment-method_definitions_address_1": {
      "type": [
        "string"
      ],
      "description": "street address line 1",
      "example": "40 Hickory Lane"
    },
    "definitions_organization-payment-method_definitions_address_2": {
      "type": [
        "string"
      ],
      "description": "street address line 2",
      "example": "Suite 103"
    },
    "definitions_organization-payment-method_definitions_card_number": {
      "type": [
        "string"
      ],
      "description": "encrypted card number of payment method",
      "example": "encrypted-card-number"
    },
    "definitions_organization-payment-method_definitions_city": {
      "type": [
        "string"
      ],
      "description": "city",
      "example": "San Francisco"
    },
    "definitions_organization-payment-method_definitions_country": {
      "type": [
        "string"
      ],
      "description": "country",
      "example": "US"
    },
    "definitions_organization-payment-method_definitions_cvv": {
      "type": [
        "string"
      ],
      "description": "card verification value",
      "example": "123"
    },
    "definitions_organization-payment-method_definitions_expiration_month": {
      "type": [
        "string"
      ],
      "description": "expiration month",
      "example": "11"
    },
    "definitions_organization-payment-method_definitions_expiration_year": {
      "type": [
        "string"
      ],
      "description": "expiration year",
      "example": "2014"
    },
    "definitions_organization-payment-method_definitions_first_name": {
      "type": [
        "string"
      ],
      "description": "the first name for payment method",
      "example": "Jason"
    },
    "definitions_organization-payment-method_definitions_last_name": {
      "type": [
        "string"
      ],
      "description": "the last name for payment method",
      "example": "Walker"
    },
    "definitions_organization-payment-method_definitions_other": {
      "type": [
        "string"
      ],
      "description": "metadata",
      "example": "Additional information for payment method"
    },
    "definitions_organization-payment-method_definitions_postal_code": {
      "type": [
        "string"
      ],
      "description": "postal code",
      "example": "90210"
    },
    "definitions_organization-payment-method_definitions_state": {
      "type": [
        "string"
      ],
      "description": "state",
      "example": "CA"
    },
    "definitions_organization-payment-method_definitions_card_last4": {
      "type": [
        "string"
      ],
      "description": "last 4 digits of credit card number",
      "example": "1234",
      "readOnly": true
    },
    "definitions_organization-payment-method_definitions_card_type": {
      "type": [
        "string"
      ],
      "description": "name of credit card issuer",
      "example": "VISA",
      "readOnly": true
    },
    "definitions_organization_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_organization_definitions_name"
        },
        {
          "$ref": "#/definitions/definitions_organization_definitions_id"
        }
      ]
    },
    "definitions_organization-preferences_definitions_whitelisting-enabled": {
      "description": "Whether whitelisting rules should be applied to add-on installations",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_organization_definitions_default": {
      "description": "whether to use this organization when none is specified",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_payment-method_definitions_address_1": {
      "type": [
        "string"
      ],
      "description": "street address line 1",
      "example": "40 Hickory Lane"
    },
    "definitions_payment-method_definitions_address_2": {
      "type": [
        "string"
      ],
      "description": "street address line 2",
      "example": "Suite 103"
    },
    "definitions_payment-method_definitions_card_number": {
      "type": [
        "string"
      ],
      "description": "encrypted card number of payment method",
      "example": "encrypted-card-number"
    },
    "definitions_payment-method_definitions_city": {
      "type": [
        "string"
      ],
      "description": "city",
      "example": "San Francisco"
    },
    "definitions_payment-method_definitions_country": {
      "type": [
        "string"
      ],
      "description": "country",
      "example": "US"
    },
    "definitions_payment-method_definitions_cvv": {
      "type": [
        "string"
      ],
      "description": "card verification value",
      "example": "123"
    },
    "definitions_payment-method_definitions_expiration_month": {
      "type": [
        "string"
      ],
      "description": "expiration month",
      "example": "11"
    },
    "definitions_payment-method_definitions_expiration_year": {
      "type": [
        "string"
      ],
      "description": "expiration year",
      "example": "2014"
    },
    "definitions_payment-method_definitions_first_name": {
      "type": [
        "string"
      ],
      "description": "the first name for payment method",
      "example": "Jason"
    },
    "definitions_payment-method_definitions_last_name": {
      "type": [
        "string"
      ],
      "description": "the last name for payment method",
      "example": "Walker"
    },
    "definitions_payment-method_definitions_other": {
      "type": [
        "string"
      ],
      "description": "metadata",
      "example": "Additional information for payment method"
    },
    "definitions_payment-method_definitions_postal_code": {
      "type": [
        "string"
      ],
      "description": "postal code",
      "example": "90210"
    },
    "definitions_payment-method_definitions_state": {
      "type": [
        "string"
      ],
      "description": "state",
      "example": "CA"
    },
    "definitions_organization_definitions_created_at": {
      "description": "when the organization was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization_definitions_credit_card_collections": {
      "description": "whether charges incurred by the org are paid by credit card.",
      "example": true,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_organization_definitions_membership_limit": {
      "description": "upper limit of members allowed in an organization.",
      "example": 25,
      "readOnly": true,
      "type": [
        "number",
        "null"
      ]
    },
    "definitions_organization_definitions_provisioned_licenses": {
      "description": "whether the org is provisioned licenses by salesforce.",
      "example": true,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_organization_definitions_type": {
      "description": "type of organization.",
      "example": "team",
      "enum": [
        "enterprise",
        "team"
      ],
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization_definitions_updated_at": {
      "description": "when the organization was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_otp-secret_definitions_id": {
      "description": "unique identifier of OTP secret",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_otp-secret_definitions_created_at": {
      "description": "when OTP secret was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_otp-secret_definitions_updated_at": {
      "description": "when OTP secret was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_otp-secret_definitions_url": {
      "description": "OTP secret rendered in URL format",
      "example": "otpauth://totp/username@example.com?issuer\u003dHeroku\u0026secret\u003dabcd1234",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_outbound-ruleset_definitions_id": {
      "description": "unique identifier of an outbound-ruleset",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_outbound-ruleset_definitions_target": {
      "description": "is the target destination in CIDR notation",
      "example": "1.1.1.1/1",
      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_outbound-ruleset_definitions_port": {
      "description": "an endpoint of communication in an operating system.",
      "example": 80,
      "readOnly": false,
      "type": [
        "integer"
      ]
    },
    "definitions_outbound-ruleset_definitions_protocol": {
      "description": "formal standards and policies comprised of rules, procedures and formats that define communication between two or more devices over a network",
      "example": "tcp",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_outbound-ruleset_definitions_rule": {
      "description": "the combination of an IP address in CIDR notation, a from_port, to_port and protocol.",
      "type": [
        "object"
      ],
      "properties": {
        "target": {
          "$ref": "#/definitions/definitions_outbound-ruleset_definitions_target"
        },
        "from_port": {
          "$ref": "#/definitions/definitions_outbound-ruleset_definitions_port"
        },
        "to_port": {
          "$ref": "#/definitions/definitions_outbound-ruleset_definitions_port"
        },
        "protocol": {
          "$ref": "#/definitions/definitions_outbound-ruleset_definitions_protocol"
        }
      },
      "required": [
        "target",
        "from_port",
        "to_port",
        "protocol"
      ]
    },
    "definitions_outbound-ruleset_definitions_created_at": {
      "description": "when outbound-ruleset was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_password-reset_definitions_password_confirmation": {
      "description": "confirmation of the new password",
      "example": "newpassword",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_password-reset_definitions_created_at": {
      "description": "when password reset was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_payment-method_definitions_card_last4": {
      "type": [
        "string"
      ],
      "description": "last 4 digits of credit card number",
      "example": "1234",
      "readOnly": true
    },
    "definitions_payment-method_definitions_card_type": {
      "type": [
        "string"
      ],
      "description": "name of credit card issuer",
      "example": "VISA",
      "readOnly": true
    },
    "definitions_payment_definitions_id": {
      "type": [
        "integer"
      ],
      "description": "legacy unique identifier of payment",
      "example": 9403943,
      "readOnly": true
    },
    "definitions_payment_definitions_amount": {
      "type": [
        "number"
      ],
      "description": "amount of payment in cents",
      "example": 50000,
      "readOnly": false
    },
    "definitions_invoice_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_invoice_definitions_number"
        }
      ]
    },
    "definitions_payment_definitions_uuid": {
      "description": "unique identifier for a payment transaction",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_payment_definitions_created_at": {
      "description": "when payment was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_payment_definitions_updated_at": {
      "description": "when credit was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_payment_definitions_state": {
      "enum": [
        "failure",
        "pending",
        "success"
      ],
      "type": [
        "string"
      ],
      "description": "state of the payment",
      "example": "pending",
      "readOnly": true
    },
    "definitions_organization-app-permission_definitions_name": {
      "description": "The name of the app permission.",
      "example": "view",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_organization-app-permission_definitions_description": {
      "description": "A description of what the app permission allows.",
      "example": "Can manage config, deploy, run commands and restart the app.",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-coupling_definitions_id": {
      "description": "unique identifier of pipeline coupling",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_pipeline_definitions_id": {
      "description": "unique identifier of pipeline",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-coupling_definitions_stage": {
      "description": "target pipeline stage",
      "example": "production",
      "enum": [
        "review",
        "development",
        "staging",
        "production"
      ],
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-coupling_definitions_created_at": {
      "description": "when pipeline coupling was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-coupling_definitions_updated_at": {
      "description": "when pipeline coupling was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-promotion-target_definitions_id": {
      "description": "unique identifier of promotion target",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "readOnly": true,
      "format": "uuid",
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-promotion-target_definitions_error_message": {
      "description": "an error message for why the promotion failed",
      "example": "User does not have access to that app",
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_pipeline-promotion_definitions_id": {
      "description": "unique identifier of promotion",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "readOnly": true,
      "format": "uuid",
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-promotion-target_definitions_status": {
      "description": "status of promotion",
      "example": "pending",
      "readOnly": true,
      "enum": [
        "pending",
        "succeeded",
        "failed"
      ],
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-promotion_definitions_created_at": {
      "description": "when promotion was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-promotion_definitions_status": {
      "description": "status of promotion",
      "example": "pending",
      "readOnly": true,
      "enum": [
        "pending",
        "completed"
      ],
      "type": [
        "string"
      ]
    },
    "definitions_pipeline-promotion_definitions_updated_at": {
      "description": "when promotion was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_pipeline_definitions_name": {
      "description": "name of pipeline",
      "example": "example",
      "pattern": "^[a-z][a-z0-9-]{2,29}$",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_pipeline_definitions_created_at": {
      "description": "when pipeline was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_pipeline_definitions_updated_at": {
      "description": "when pipeline was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_plan_definitions_regime": {
      "description": "compliance requirements an add-on plan must adhere to",
      "readOnly": true,
      "example": "HIPAA",
      "type": [
        "string"
      ],
      "enum": [
        "HIPAA",
        "PCI"
      ]
    },
    "definitions_plan_definitions_created_at": {
      "description": "when plan was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_plan_definitions_compliance": {
      "description": "the compliance regimes applied to an add-on plan",
      "example": [
        "HIPAA"
      ],
      "readOnly": false,
      "type": [
        "null",
        "array"
      ],
      "items": {
        "$ref": "#/definitions/definitions_plan_definitions_regime"
      }
    },
    "definitions_plan_definitions_default": {
      "description": "whether this plan is the default for its add-on service",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_plan_definitions_description": {
      "description": "description of plan",
      "example": "Heroku Postgres Dev",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_plan_definitions_human_name": {
      "description": "human readable name of the add-on plan",
      "example": "Dev",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_plan_definitions_installable_inside_private_network": {
      "description": "whether this plan is installable to a Private Spaces app",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_plan_definitions_installable_outside_private_network": {
      "description": "whether this plan is installable to a Common Runtime app",
      "example": true,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_plan_definitions_cents": {
      "description": "price in cents per unit of plan",
      "example": 0,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_plan_definitions_unit": {
      "description": "unit of price for plan",
      "example": "month",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_plan_definitions_space_default": {
      "description": "whether this plan is the default for apps in Private Spaces",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_plan_definitions_state": {
      "description": "release status for plan",
      "example": "public",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_plan_definitions_updated_at": {
      "description": "when plan was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_rate-limit_definitions_remaining": {
      "description": "allowed requests remaining in current interval",
      "example": 2399,
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "definitions_region_definitions_country": {
      "description": "country where the region exists",
      "example": "United States",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_region_definitions_created_at": {
      "description": "when region was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_region_definitions_description": {
      "description": "description of region",
      "example": "United States",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_region_definitions_locale": {
      "description": "area in the country where the region exists",
      "example": "Virginia",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_region_definitions_private_capable": {
      "description": "whether or not region is available for creating a Private Space",
      "example": false,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_region_definitions_provider": {
      "description": "provider of underlying substrate",
      "type": [
        "object"
      ],
      "properties": {
        "name": {
          "description": "name of provider",
          "example": "amazon-web-services",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "region": {
          "description": "region name used by provider",
          "example": "us-east-1",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "readOnly": true
    },
    "definitions_region_definitions_updated_at": {
      "description": "when region was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_release_definitions_description": {
      "description": "description of changes in this release",
      "example": "Added new feature",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_slug_definitions_identity": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions_slug_definitions_id"
        }
      ]
    },
    "definitions_release_definitions_created_at": {
      "description": "when release was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_release_definitions_updated_at": {
      "description": "when release was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_release_definitions_status": {
      "description": "current status of the release",
      "enum": [
        "failed",
        "pending",
        "succeeded"
      ],
      "example": "succeeded",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_release_definitions_current": {
      "description": "indicates this release as being the current one for the app",
      "example": true,
      "readOnly": true,
      "type": [
        "boolean"
      ]
    },
    "definitions_slug_definitions_buildpack_provided_description": {
      "description": "description from buildpack of slug",
      "example": "Ruby/Rack",
      "readOnly": false,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_slug_definitions_checksum": {
      "description": "an optional checksum of the slug for verifying its integrity",
      "example": "SHA256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "readOnly": true,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_slug_definitions_commit": {
      "description": "identification of the code with your version control system (eg: SHA of the git HEAD)",
      "example": "60883d9e8947a57e04dc9124f25df004866a2051",
      "readOnly": false,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_slug_definitions_commit_description": {
      "description": "an optional description of the provided commit",
      "example": "fixed a bug with API documentation",
      "readOnly": false,
      "type": [
        "null",
        "string"
      ]
    },
    "definitions_slug_definitions_process_types": {
      "additionalProperties": false,
      "description": "hash mapping process type names to their respective command",
      "example": {
        "web": "./bin/web -p $PORT"
      },
      "patternProperties": {
        "^[-\\w]{1,128}$": {
          "type": [
            "string"
          ]
        }
      },
      "readOnly": false,
      "type": [
        "object"
      ]
    },
    "definitions_slug_definitions_method": {
      "description": "method to be used to interact with the slug blob",
      "example": "GET",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_slug_definitions_url": {
      "description": "URL to interact with the slug blob",
      "example": "https://api.heroku.com/slugs/1234.tgz",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_slug_definitions_created_at": {
      "description": "when slug was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_slug_definitions_size": {
      "description": "size of slug, in bytes",
      "example": 2048,
      "readOnly": true,
      "type": [
        "integer",
        "null"
      ]
    },
    "definitions_slug_definitions_updated_at": {
      "description": "when slug was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_sni-endpoint_definitions_id": {
      "description": "unique identifier of this SNI endpoint",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_sni-endpoint_definitions_name": {
      "description": "unique name for SNI endpoint",
      "example": "example",
      "pattern": "^[a-z][a-z0-9-]{2,29}$",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_sni-endpoint_definitions_certificate_chain": {
      "description": "raw contents of the public certificate chain (eg: .crt or .pem file)",
      "example": "-----BEGIN CERTIFICATE----- ...",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_sni-endpoint_definitions_private_key": {
      "description": "contents of the private key (eg .key file)",
      "example": "-----BEGIN RSA PRIVATE KEY----- ...",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_sni-endpoint_definitions_cname": {
      "description": "canonical name record, the address to point a domain at",
      "example": "example.herokussl.com",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_sni-endpoint_definitions_created_at": {
      "description": "when endpoint was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_sni-endpoint_definitions_updated_at": {
      "description": "when SNI endpoint was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_source_definitions_get_url": {
      "description": "URL to download the source",
      "example": "https://api.heroku.com/sources/1234.tgz",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_source_definitions_put_url": {
      "description": "URL to upload the source",
      "example": "https://api.heroku.com/sources/1234.tgz",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_space-app-access_definitions_id": {
      "description": "unique identifier of the space a user has permissions on",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_space_definitions_created_at": {
      "description": "when space was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_space_definitions_updated_at": {
      "description": "when space was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_space-nat_definitions_ip_v4_address": {
      "example": "123.123.123.123",
      "format": "ipv4",
      "pattern": "^(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d?\\d|2[0-4]\\d|25[0-5])$",
      "type": [
        "string"
      ]
    },
    "definitions_space-nat_definitions_created_at": {
      "description": "when network address translation for a space was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_space-nat_definitions_sources": {
      "description": "potential IPs from which outbound network traffic will originate",
      "readOnly": true,
      "type": [
        "array"
      ],
      "items": {
        "$ref": "#/definitions/definitions_space-nat_definitions_ip_v4_address"
      }
    },
    "definitions_space-nat_definitions_state": {
      "description": "availability of network address translation for a space",
      "enum": [
        "disabled",
        "updating",
        "enabled"
      ],
      "example": "enabled",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_space-nat_definitions_updated_at": {
      "description": "when network address translation for a space was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_space_definitions_regime": {
      "description": "compliance requirements a space must adhere to",
      "readOnly": true,
      "example": "HIPAA",
      "type": [
        "string"
      ],
      "enum": [
        "HIPAA",
        "PCI"
      ]
    },
    "definitions_space_definitions_compliance": {
      "description": "the compliance regimes applied to a space",
      "example": [
        "HIPAA"
      ],
      "readOnly": false,
      "type": [
        "null",
        "array"
      ],
      "items": {
        "$ref": "#/definitions/definitions_space_definitions_regime"
      }
    },
    "definitions_space_definitions_state": {
      "description": "availability of this space",
      "enum": [
        "allocating",
        "allocated",
        "deleting"
      ],
      "example": "allocated",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_ssl-endpoint_definitions_id": {
      "description": "unique identifier of this SSL endpoint",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_ssl-endpoint_definitions_name": {
      "description": "unique name for SSL endpoint",
      "example": "example",
      "pattern": "^[a-z][a-z0-9-]{2,29}$",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_ssl-endpoint_definitions_certificate_chain": {
      "description": "raw contents of the public certificate chain (eg: .crt or .pem file)",
      "example": "-----BEGIN CERTIFICATE----- ...",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_ssl-endpoint_definitions_preprocess": {
      "default": true,
      "description": "allow Heroku to modify an uploaded public certificate chain if deemed advantageous by adding missing intermediaries, stripping unnecessary ones, etc.",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_ssl-endpoint_definitions_private_key": {
      "description": "contents of the private key (eg .key file)",
      "example": "-----BEGIN RSA PRIVATE KEY----- ...",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_ssl-endpoint_definitions_rollback": {
      "default": false,
      "description": "indicates that a rollback should be performed",
      "example": false,
      "readOnly": false,
      "type": [
        "boolean"
      ]
    },
    "definitions_ssl-endpoint_definitions_cname": {
      "description": "canonical name record, the address to point a domain at",
      "example": "example.herokussl.com",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "definitions_ssl-endpoint_definitions_created_at": {
      "description": "when endpoint was created",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_ssl-endpoint_definitions_updated_at": {
      "description": "when endpoint was updated",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_stack_definitions_created_at": {
      "description": "when stack was introduced",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_stack_definitions_state": {
      "description": "availability of this stack: beta, deprecated or public",
      "example": "public",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_stack_definitions_updated_at": {
      "description": "when stack was last modified",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_user-preferences_definitions_self": {
      "description": "Implicit reference to currently authorized user",
      "enum": [
        "~"
      ],
      "example": "~",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_user-preferences_definitions_timezone": {
      "description": "User\u0027s default timezone",
      "example": "UTC",
      "readOnly": false,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_user-preferences_definitions_default-organization": {
      "description": "User\u0027s default organization",
      "example": "sushi-inc",
      "readOnly": false,
      "type": [
        "string",
        "null"
      ]
    },
    "definitions_user-preferences_definitions_dismissed-github-banner": {
      "description": "Whether the user has dismissed the GitHub link banner",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_user-preferences_definitions_dismissed-getting-started": {
      "description": "Whether the user has dismissed the getting started banner",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_user-preferences_definitions_dismissed-org-access-controls": {
      "description": "Whether the user has dismissed the Organization Access Controls banner",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_user-preferences_definitions_dismissed-org-wizard-notification": {
      "description": "Whether the user has dismissed the Organization Wizard",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_user-preferences_definitions_dismissed-pipelines-banner": {
      "description": "Whether the user has dismissed the Pipelines banner",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_user-preferences_definitions_dismissed-pipelines-github-banner": {
      "description": "Whether the user has dismissed the GitHub banner on a pipeline overview",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_user-preferences_definitions_dismissed-pipelines-github-banners": {
      "description": "Which pipeline uuids the user has dismissed the GitHub banner for",
      "example": [
        "96c68759-f310-4910-9867-e0b062064098"
      ],
      "readOnly": false,
      "type": [
        "null",
        "array"
      ],
      "items": {
        "$ref": "#/definitions/definitions_pipeline_definitions_id"
      }
    },
    "definitions_user-preferences_definitions_dismissed-sms-banner": {
      "description": "Whether the user has dismissed the 2FA SMS banner",
      "example": true,
      "readOnly": false,
      "type": [
        "boolean",
        "null"
      ]
    },
    "definitions_whitelisted-add-on-service_definitions_id": {
      "description": "unique identifier for this whitelisting entity",
      "example": "01234567-89ab-cdef-0123-456789abcdef",
      "format": "uuid",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_whitelisted-add-on-service_definitions_added_at": {
      "description": "when the add-on service was whitelisted",
      "example": "2012-01-01T12:00:00Z",
      "format": "date-time",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "definitions_whitelisted-add-on-service_definitions_added_by": {
      "description": "the user which whitelisted the Add-on Service",
      "properties": {
        "email": {
          "$ref": "#/definitions/definitions_account_definitions_email"
        },
        "id": {
          "$ref": "#/definitions/definitions_account_definitions_id"
        }
      },
      "readOnly": true,
      "type": [
        "object"
      ]
    },
    "definitions_whitelisted-add-on-service_definitions_addon_service": {
      "description": "the Add-on Service whitelisted for use",
      "properties": {
        "id": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_id"
        },
        "name": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_name"
        },
        "human_name": {
          "$ref": "#/definitions/definitions_add-on-service_definitions_human_name"
        }
      },
      "readOnly": true,
      "type": [
        "object"
      ]
    }
  },
  "properties": {
    "account-feature": {
      "$ref": "#/definitions/account-feature"
    },
    "account": {
      "$ref": "#/definitions/account"
    },
    "add-on-action": {
      "$ref": "#/definitions/add-on-action"
    },
    "add-on-attachment": {
      "$ref": "#/definitions/add-on-attachment"
    },
    "add-on-config": {
      "$ref": "#/definitions/add-on-config"
    },
    "add-on-plan-action": {
      "$ref": "#/definitions/add-on-plan-action"
    },
    "add-on-region-capability": {
      "$ref": "#/definitions/add-on-region-capability"
    },
    "add-on-service": {
      "$ref": "#/definitions/add-on-service"
    },
    "add-on": {
      "$ref": "#/definitions/add-on"
    },
    "app-feature": {
      "$ref": "#/definitions/app-feature"
    },
    "app-setup": {
      "$ref": "#/definitions/app-setup"
    },
    "app-transfer": {
      "$ref": "#/definitions/app-transfer"
    },
    "app": {
      "$ref": "#/definitions/app"
    },
    "build-result": {
      "$ref": "#/definitions/build-result"
    },
    "build": {
      "$ref": "#/definitions/build"
    },
    "buildpack-installation": {
      "$ref": "#/definitions/buildpack-installation"
    },
    "collaborator": {
      "$ref": "#/definitions/collaborator"
    },
    "config-var": {
      "$ref": "#/definitions/config-var"
    },
    "credit": {
      "$ref": "#/definitions/credit"
    },
    "domain": {
      "$ref": "#/definitions/domain"
    },
    "dyno": {
      "$ref": "#/definitions/dyno"
    },
    "event": {
      "$ref": "#/definitions/event"
    },
    "failed-event": {
      "$ref": "#/definitions/failed-event"
    },
    "filter-apps": {
      "$ref": "#/definitions/filter-apps"
    },
    "formation": {
      "$ref": "#/definitions/formation"
    },
    "identity-provider": {
      "$ref": "#/definitions/identity-provider"
    },
    "inbound-ruleset": {
      "$ref": "#/definitions/inbound-ruleset"
    },
    "invitation": {
      "$ref": "#/definitions/invitation"
    },
    "invoice-address": {
      "$ref": "#/definitions/invoice-address"
    },
    "invoice": {
      "$ref": "#/definitions/invoice"
    },
    "key": {
      "$ref": "#/definitions/key"
    },
    "log-drain": {
      "$ref": "#/definitions/log-drain"
    },
    "log-session": {
      "$ref": "#/definitions/log-session"
    },
    "oauth-authorization": {
      "$ref": "#/definitions/oauth-authorization"
    },
    "oauth-client": {
      "$ref": "#/definitions/oauth-client"
    },
    "oauth-grant": {
      "$ref": "#/definitions/oauth-grant"
    },
    "oauth-token": {
      "$ref": "#/definitions/oauth-token"
    },
    "organization-add-on": {
      "$ref": "#/definitions/organization-add-on"
    },
    "organization-app-collaborator": {
      "$ref": "#/definitions/organization-app-collaborator"
    },
    "organization-app": {
      "$ref": "#/definitions/organization-app"
    },
    "organization-feature": {
      "$ref": "#/definitions/organization-feature"
    },
    "organization-invitation": {
      "$ref": "#/definitions/organization-invitation"
    },
    "organization-invoice": {
      "$ref": "#/definitions/organization-invoice"
    },
    "organization-member": {
      "$ref": "#/definitions/organization-member"
    },
    "organization-payment-method": {
      "$ref": "#/definitions/organization-payment-method"
    },
    "organization-preferences": {
      "$ref": "#/definitions/organization-preferences"
    },
    "organization": {
      "$ref": "#/definitions/organization"
    },
    "otp-secret": {
      "$ref": "#/definitions/otp-secret"
    },
    "outbound-ruleset": {
      "$ref": "#/definitions/outbound-ruleset"
    },
    "password-reset": {
      "$ref": "#/definitions/password-reset"
    },
    "payment-method": {
      "$ref": "#/definitions/payment-method"
    },
    "payment": {
      "$ref": "#/definitions/payment"
    },
    "organization-app-permission": {
      "$ref": "#/definitions/organization-app-permission"
    },
    "pipeline-coupling": {
      "$ref": "#/definitions/pipeline-coupling"
    },
    "pipeline-promotion-target": {
      "$ref": "#/definitions/pipeline-promotion-target"
    },
    "pipeline-promotion": {
      "$ref": "#/definitions/pipeline-promotion"
    },
    "pipeline": {
      "$ref": "#/definitions/pipeline"
    },
    "plan": {
      "$ref": "#/definitions/plan"
    },
    "rate-limit": {
      "$ref": "#/definitions/rate-limit"
    },
    "recovery-code": {
      "$ref": "#/definitions/recovery-code"
    },
    "region": {
      "$ref": "#/definitions/region"
    },
    "release": {
      "$ref": "#/definitions/release"
    },
    "slug": {
      "$ref": "#/definitions/slug"
    },
    "sms-number": {
      "$ref": "#/definitions/sms-number"
    },
    "sni-endpoint": {
      "$ref": "#/definitions/sni-endpoint"
    },
    "source": {
      "$ref": "#/definitions/source"
    },
    "space-app-access": {
      "$ref": "#/definitions/space-app-access"
    },
    "space-nat": {
      "$ref": "#/definitions/space-nat"
    },
    "space": {
      "$ref": "#/definitions/space"
    },
    "ssl-endpoint": {
      "$ref": "#/definitions/ssl-endpoint"
    },
    "stack": {
      "$ref": "#/definitions/stack"
    },
    "user-preferences": {
      "$ref": "#/definitions/user-preferences"
    },
    "whitelisted-add-on-service": {
      "$ref": "#/definitions/whitelisted-add-on-service"
    }
  },
  "description": "The platform API empowers developers to automate, extend and combine Heroku with other services.",
  "id": "http://api.heroku.com/schema#",
  "links": [
    {
      "href": "https://api.heroku.com",
      "rel": "self"
    },
    {
      "href": "/schema",
      "method": "GET",
      "rel": "self",
      "targetSchema": {
        "additionalProperties": true
      }
    }
  ],
  "title": "Heroku Platform API"
}