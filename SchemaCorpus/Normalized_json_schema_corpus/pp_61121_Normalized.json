{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "name"
  ],
  "properties": {
    "name": {
      "type": "string",
      "pattern": "^[a-z0-9-]+/[a-z0-9-]+$",
      "description": "Package name using \u0027org/name\u0027 format."
    },
    "type": {
      "type": "string",
      "description": "Either \u0027library\u0027 for static and shared libraries or \u0027project\u0027 for executable projects. The default value is \u0027library\u0027."
    },
    "include": {
      "type": "string",
      "description": "Path to the directory containing header files (.h and .hpp). The default is \u0027include\u0027."
    },
    "source": {
      "type": "string",
      "description": "Path to the directory containing source files (.c and .cpp). The default is \u0027src\u0027."
    },
    "compiler": {
      "type": "object",
      "description": "List of supported compilers. By default one of the locally supported compilers is used.",
      "additionalProperties": {
        "type": "string",
        "description": "The compiler name (key) and version constraint (value)."
      }
    },
    "platform": {
      "oneOf": [
        {
          "type": "string",
          "description": "Supported platform. If no platform is specified then it\u0027s assumed that all platforms are supported."
        },
        {
          "type": "array",
          "description": "List of supported platforms. If no platforms are specified then it\u0027s assumed that all platforms are supported.",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "arch": {
      "oneOf": [
        {
          "type": "string",
          "description": "Supported architecture. The defaults are \u0027x86\u0027 and \u0027x64\u0027."
        },
        {
          "type": "array",
          "description": "List of supported architectures. The defaults are \u0027x86\u0027 and \u0027x64\u0027.",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "linking": {
      "oneOf": [
        {
          "type": "string",
          "description": "Support only one linking type. By default supports both, the static and dynamic linking."
        },
        {
          "type": "array",
          "description": "List of supported linking types. The defaults are \u0027static\u0027 and \u0027dynamic\u0027.",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "dependencies": {
      "type": "object",
      "description": "List of required dependencies.",
      "items": {
        "type": "string",
        "description": "Each item contains the package name and version constraint, additionally the linking type constraint (eq. \u0027\"org/package\": \"^5.3:static\"\u0027)."
      }
    },
    "dev-dependencies": {
      "type": "object",
      "description": "List of required dependencies while developing (i.e. package is the root one).",
      "items": {
        "type": "string",
        "description": "Each item contains the package name and version constraint, additionally the linking type constraint (eq. \u0027\"org/package\": \"^5.3:static\"\u0027)."
      }
    },
    "define": {
      "type": "object",
      "description": "List of preprocessor macros.",
      "additionalProperties": false,
      "properties": {
        "debug": {
          "type": "object"
        },
        "release": {
          "type": "object"
        }
      }
    },
    "scripts": {
      "type": "object",
      "description": "List of user and system callbacks scripts.",
      "patternProperties": {
        ".*": {
          "oneOf": [
            {
              "type": "string",
              "description": "Each item contains the script name with constraints and command (eq. \u0027\"clear-cache:linux\": \"rm -r ./cache\"\u0027)."
            },
            {
              "type": "array",
              "description": "Each item contains the script name with constraints and commands (eq. \u0027\"clear-cache:linux\": \"rm -r ./cache\"\u0027).",
              "items": {
                "type": "string",
                "description": "The list of commands executed one by one. Commands are executed as long as previous command exits with status code 0."
              }
            }
          ]
        }
      }
    },
    "repositories": {
      "type": "array",
      "description": "List of repositories to search for packages before looking up to the official one.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the repository, eq. local, git, register etc."
          },
          "src": {
            "type": "string",
            "description": "Repository source, eq. directory path for local repository etc."
          }
        }
      }
    }
  }
}