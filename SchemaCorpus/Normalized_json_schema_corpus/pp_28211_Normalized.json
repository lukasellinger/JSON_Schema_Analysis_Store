{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "uniProductOrder",
  "id": "uniProductOrder",
  "description": "An orderable representation of a UNI Product.",
  "type": "object",
  "required": [
    "objectType",
    "productSpecification"
  ],
  "properties": {
    "objectType": {
      "type": "string",
      "enum": [
        "uniProductOrder"
      ],
      "description": "The type of the object, uniProduct for an Order."
    },
    "sellerUniId": {
      "type": "string",
      "description": "The circuit identifier that the seller uses to refer to this UNI.",
      "maxLength": 45
    },
    "buyerUniId": {
      "type": "string",
      "description": "The circuit identifier that the buyer uses to refer to this UNI.",
      "maxLength": 45
    },
    "productSpecification": {
      "$ref": "#/definitions/productSpecRef",
      "description": "A reference to the Partner/Access Provider (Seller) Product Specification (product catalog item) that the buyer is ordering."
    },
    "physicalLayer": {
      "type": "string",
      "enum": [
        "10BASE_T",
        "100BASE_TX",
        "100BASE_FX",
        "1000BASE_T",
        "1000BASE_SX",
        "1000BASE_LX",
        "10GBASE_SR",
        "10GBASE_SW",
        "10GBASE_LR",
        "10GBASE_LW",
        "10GBASE_ER",
        "10GBASE_EW"
      ],
      "description": "The layer (layer 1) that provides transparent transmission of a bit stream over a circuit built from some physical communications medium."
    },
    "synchronousModeEnabled": {
      "type": "boolean",
      "description": "Identifies if the synchronous transmissions are to proceed at a constant rate."
    },
    "numberOfLinks": {
      "type": "integer",
      "description": "The number of links supporting the UNI.",
      "minimum": 1
    },
    "uniResiliency": {
      "type": "string",
      "enum": [
        "NONE",
        "2_LINK_ACTIVE_STANDBY",
        "ALL_ACTIVE",
        "OTHER"
      ],
      "description": "Indicates UNI resiliency and corresponding value."
    },
    "uniMaximumServiceFrameSize": {
      "type": "integer",
      "description": "Indicates the maximum service frame size that can be reliably processed at the UNI level. An integer greater or equal to 1522.",
      "minimum": 1522
    },
    "tokenShareEnabled": {
      "type": "boolean",
      "description": "Identifies whether a given UNI is capable of sharing tokens across Bandwidth Profile Flows in an Envelope. MEF valid values are Enabled or Disabled."
    },
    "allToOneBundlingEnabled": {
      "type": "boolean",
      "description": "All-to-One Bundling can be either Enabled or Disabled.  A value of True would equate to \u0027Enabled\u0027."
    },
    "linkOamEnabled": {
      "type": "boolean",
      "description": "Link OAM enables the operator to monitor and troubleshoot a single Ethernet link. For ordering, this is an optional parameter that may be requested."
    },
    "uniMegEnabled": {
      "type": "boolean",
      "description": "Request for monitoring of a UNI. For ordering, this is an optional parameter that may be requested."
    },
    "elmiEnabled": {
      "type": "boolean",
      "description": "Indicates the desire for management of the customer interface. For ordering, this is an optional parameter that may be requested."
    },
    "uniL2cpAddressSet": {
      "type": "string",
      "enum": [
        "CTA",
        "CTB",
        "CTB_2"
      ],
      "description": "Identifies the discard/pass action for all non-peered layer two control protocols. Enumeration: \u0027CTA\u0027, \u0027CTB\u0027 or \u0027CTB-2\u0027."
    },
    "uniL2cpPeerings": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/layer2ControlProtocol"
      },
      "minItems": 1,
      "maxitems": 20,
      "uniqueItems": true,
      "description": "An array of Layer 2 Control Protocols to peer at the UNI."
    },
    "serviceSiteInformation": {
      "$ref": "#/definitions/serviceSiteInformation",
      "description": "The service site for the UNI."
    },
    "primarySiteContact": {
      "$ref": "#/definitions/contact",
      "description": "The primary site contact for the site."
    },
    "alternateSiteContact": {
      "$ref": "#/definitions/contact",
      "description": "The secondary site contact for the site."
    }
  },
  "definitions": {
    "productSpecRef": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "productSpecRef",
      "description": "A reference (by name, id or link) to a Product Specification.",
      "type": "object",
      "required": [
        "objectType"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "productSpecRef"
          ],
          "description": "The type of the object, A Product Specification Reference."
        },
        "name": {
          "type": "string",
          "description": "The name a product (specification) is known by within an organization (e.g., Access EVPL 100).",
          "maxLength": 25
        },
        "code": {
          "type": "string",
          "description": "Unique identifier that an organization uses for a product (specification) in its internal systems that can refer to one or a set of products (e.g., AEVPL100).",
          "maxLength": 15
        },
        "productSpecification": {
          "$ref": "#/definitions/resourceReference",
          "description": "A reference to the Partner/Access Provider (Seller) Product Specification (product catalog item) that the buyer is ordering."
        }
      }
    },
    "resourceReference": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "resourceReference",
      "description": "A reference to a resource, including it\u0027s ID, type, and a link to retrieve the resource.",
      "type": "object",
      "required": [
        "objectType",
        "id",
        "type",
        "link"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "resourceReference"
          ],
          "description": "The type of the object, resourceReference."
        },
        "id": {
          "type": "string",
          "description": "The resource\u0027s unique identifier.",
          "maxLength": 45
        },
        "type": {
          "type": "string",
          "description": "Specifies the type for the referenced resource.",
          "maxLength": 25
        },
        "link": {
          "$ref": "#/definitions/link",
          "description": "A link for accessing the resource."
        }
      }
    },
    "link": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "link",
      "description": "Specifies relationships between the current document and an external resource.",
      "type": "object",
      "required": [
        "objectType",
        "href",
        "rel"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "description": "The type of the object, link.",
          "maxLength": 25
        },
        "href": {
          "type": "string",
          "description": "A URL. Specifies the location of the linked document.",
          "maxLength": 255
        },
        "rel": {
          "type": "string",
          "description": "Specifies the relationship between the current document and the linked document.",
          "maxLength": 25
        },
        "title": {
          "type": "string",
          "description": "Provide additional / advisory information (expand on the meaning of the link).",
          "maxLength": 25
        },
        "method": {
          "type": "string",
          "enum": [
            "get",
            "post"
          ],
          "description": "Specifies how to send the data (e.g. get, post)."
        },
        "type": {
          "type": "string",
          "description": "Specifies the media type of the linked document.",
          "maxLength": 25
        }
      }
    },
    "layer2ControlProtocol": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "layer2ControlProtocol",
      "description": "An identification of a specific Layer 2 Control Protocol.",
      "type": "object",
      "required": [
        "objectType",
        "destinationAddress",
        "protocolIdentifier"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "layer2ControlProtocol"
          ],
          "description": "The type of the object, layer2ControlProtocol."
        },
        "destinationAddress": {
          "type": "string",
          "description": "The MAC Address used for the Layer 2 Control Protocol.",
          "maxLength": 17
        },
        "etherType": {
          "type": "string",
          "description": "A two-octet field in an Ethernet frame used to indicate which protocol is encapsulated in the payload of the frame.",
          "maxLength": 6
        },
        "subtype": {
          "type": "string",
          "description": "Subtype for Slow Protocols, in hexadecimal format.",
          "maxLength": 6
        },
        "linkId": {
          "type": "string",
          "description": "Link Identifier",
          "maxLength": 45
        }
      }
    },
    "serviceSiteInformation": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "serviceSiteInformation",
      "description": "Information about an ENNI or UNI service site.",
      "type": "object",
      "required": [
        "objectType",
        "siteAddress"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "serviceSiteInformation"
          ],
          "description": "The type of the object, serviceSiteInformation."
        },
        "siteCompanyName": {
          "type": "string",
          "description": "The name of the company that is located at the Service location. This may be different from the name of the Customer that ordered services at that Service Site.",
          "maxLength": 25
        },
        "customerName": {
          "type": "string",
          "description": "The name of the end (retail) customer for the UNI.",
          "maxLength": 25
        },
        "siteAddressType": {
          "type": "string",
          "enum": [
            "FIELDED_ADDRESS",
            "FORMATTED_ADDRESS",
            "ADDRESS_REFERENCE",
            "GEOGRAPHIC_POINT"
          ]
        },
        "siteAddress": {
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/definitions/formattedAddress"
            },
            {
              "$ref": "#/definitions/fieldedAddress"
            },
            {
              "$ref": "#/definitions/geographicPoint"
            },
            {
              "$ref": "#/definitions/addressReference"
            }
          ],
          "description": "A property address for the site. Either a Site Address, a Site Code or a Site Geographic Point must be specified.",
          "title": "Address"
        },
        "additionalSiteInformation": {
          "type": "string",
          "description": "Additional information about the Site. Equates to the ASR AAI field.",
          "maxLength": 100
        }
      }
    },
    "formattedAddress": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "formattedAddress",
      "description": "A structured textual way of describing how to find an address, using unformatted strings for the street address.",
      "type": "object",
      "required": [
        "objectType"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "formattedAddress"
          ],
          "description": "The type of the object, formattedAddress."
        },
        "addressLine1": {
          "type": "string",
          "description": "A formatted address line that contains a non-fielded street address.",
          "maxLength": 60
        },
        "addressLine2": {
          "type": "string",
          "description": "A formatted address line that contains a non-fielded street address, sub-address (e.g. Suite number), etc.",
          "maxLength": 60
        },
        "locality": {
          "type": "string",
          "description": "A bounded locality within a city, town or shire principally of urban character.",
          "maxLength": 50
        },
        "city": {
          "type": "string",
          "description": "City that the address is in.",
          "maxLength": 50
        },
        "stateOrProvince": {
          "type": "string",
          "description": "The state or province that the address is in.",
          "maxLength": 50
        },
        "postcode": {
          "type": "string",
          "description": "A descriptor for a postal delivery area, used to speed and simplify the delivery of mail.",
          "maxLength": 6
        },
        "postcodeExtension": {
          "type": "string",
          "description": "The four-digit extension on an American postal code, what comes after the hyphen when specified.",
          "maxLength": 4
        },
        "country": {
          "type": "string",
          "description": "The country that the address is in.",
          "maxLength": 50
        }
      }
    },
    "fieldedAddress": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "fieldedAddress",
      "description": "A full representation of an address, as well as geocoding reference for the property.",
      "type": "object",
      "required": [
        "objectType"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "fieldedAddress"
          ],
          "description": "The type of the object, fieldedAddress."
        },
        "streetNr": {
          "type": "string",
          "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses.",
          "maxLength": 10
        },
        "streetNrSuffix": {
          "type": "string",
          "description": "The suffix of the first street number (in a street number range) or the suffix for the street number if there is no range.",
          "maxLength": 10
        },
        "streetNrLast": {
          "type": "string",
          "description": "Last number in a range of street numbers allocated to an address.",
          "maxLength": 10
        },
        "streetName": {
          "type": "string",
          "description": "The name of the street or other street type.",
          "maxLength": 60
        },
        "streetType": {
          "type": "string",
          "description": "The type of street (e.g., Street, St., Road, Rd., Alley).",
          "maxLength": 25
        },
        "streetSuffix": {
          "type": "string",
          "description": "A modifier denoting a relative direction.",
          "maxLength": 2
        },
        "subUnitType": {
          "type": "string",
          "description": "The type of subunit (e.g., Flat, Suite, Tower, Unit).",
          "maxLength": 25
        },
        "subUnitNr": {
          "type": "string",
          "description": "The discriminator used for the subunit, often just a sumple number but may also be a range.",
          "maxLength": 10
        },
        "levelType": {
          "type": "string",
          "description": "Describes level types within a building (e.g., Floor).",
          "maxLength": 25
        },
        "levelNr": {
          "type": "string",
          "description": "Used where a level type may be repeated (e.g., BASEMENT 1, BASEMENT 2).",
          "maxLength": 25
        },
        "buildingName": {
          "type": "string",
          "description": "Allows for buildings with well-known names to be used in an address.",
          "maxLength": 60
        },
        "privateStreetName": {
          "type": "string",
          "description": "Private streets internal to a property (e.g., a university) with an internal name not recorded by the land title office.",
          "maxLength": 60
        },
        "locality": {
          "type": "string",
          "description": "A bounded locality within a city, town or shire principally of urban character.",
          "maxLength": 50
        },
        "city": {
          "type": "string",
          "description": "The city that the address is in.",
          "maxLength": 50
        },
        "stateOrProvince": {
          "type": "string",
          "description": "The state or province that the address is in.",
          "maxLength": 50
        },
        "postcode": {
          "type": "string",
          "description": "A descriptor for a postal delivery area, used to speed and simplify the delivery of mail.",
          "maxLength": 6
        },
        "postcodeExtension": {
          "type": "string",
          "description": "The four-digit extension on an American postal code, what comes after the hyphen when specified.",
          "maxLength": 4
        },
        "country": {
          "type": "string",
          "description": "The country that the address is in.",
          "maxLength": 50
        }
      }
    },
    "geographicPoint": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "geographicPoint",
      "description": "Specifies a particular point on earth based upon geo coding information. Provides the means for quantitative description of the spatial characteristics of features, including dimension, position, size, shape, and orientation. Most commonly used for position (location).",
      "type": "object",
      "required": [
        "objectType",
        "latitude",
        "longitude"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "geographicPoint"
          ],
          "description": "The type of the object, geographicPoint."
        },
        "latitude": {
          "type": "string",
          "description": "Latitude of the point in decimal degrees format.",
          "maxLength": 10
        },
        "longitude": {
          "type": "string",
          "description": "Longitude of the point in decimal degrees format.",
          "maxLength": 10
        }
      }
    },
    "addressReference": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "addressReference",
      "description": "This represents a reference to an address. The reference should be an address id from an address inventory, a geocoded reference from a geospatial system, etc.",
      "type": "object",
      "required": [
        "objectType"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "addressReference"
          ],
          "description": "The type of the object, addressReference."
        },
        "referenceType": {
          "type": "string",
          "description": "The type of the reference.",
          "maxLength": 25
        },
        "reference": {
          "type": "string",
          "description": "The reference can be used to identify an address.",
          "maxLength": 60
        }
      }
    },
    "contact": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "contact",
      "description": "Represents a contact.",
      "type": "object",
      "required": [
        "objectType",
        "name",
        "telephoneNumber"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "contact"
          ],
          "description": "The type of the object, contact."
        },
        "name": {
          "type": "string",
          "description": "Identifies the name of the person or office.",
          "maxLength": 50
        },
        "telephoneNumber": {
          "type": "string",
          "description": "Identifies the telephone number (excluding extension) of the Contact.",
          "maxLength": 15
        },
        "telephoneNumberExt": {
          "type": "string",
          "description": "Identifies the telephone number extension of the Contact.",
          "maxLength": 6
        },
        "email": {
          "type": "string",
          "description": "Identifies the electronic mail address of the Contact.",
          "maxLength": 60
        }
      }
    }
  }
}