{
  "$id": "http://apicast.io/policy-v1.1/schema#manifest",
  "type": "object",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "schema": {
      "$ref": "#/definitions/http:__json-schema.org_draft-07_schema",
      "default": {}
    },
    "version": {
      "type": "string",
      "title": "The Policy Version",
      "description": "A semantic version of a policy.",
      "examples": [
        "1.3.4",
        "0.1"
      ],
      "pattern": "^((\\d+\\.)?(\\d+\\.)?(\\*|\\d+))|builtin$"
    },
    "http:__json-schema.org_draft-07_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Core schema meta-schema",
      "definitions": {
        "schemaArray": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
          }
        },
        "nonNegativeInteger": {
          "type": "integer",
          "minimum": 0
        },
        "nonNegativeIntegerDefault0": {
          "allOf": [
            {
              "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_nonNegativeInteger"
            },
            {
              "default": 0
            }
          ]
        },
        "simpleTypes": {
          "enum": [
            "array",
            "boolean",
            "integer",
            "null",
            "number",
            "object",
            "string"
          ]
        },
        "stringArray": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "default": []
        }
      },
      "type": [
        "object",
        "boolean"
      ],
      "properties": {
        "$id": {
          "type": "string",
          "format": "uri-reference"
        },
        "$schema": {
          "type": "string",
          "format": "uri"
        },
        "$ref": {
          "type": "string",
          "format": "uri-reference"
        },
        "$comment": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "default": true,
        "readOnly": {
          "type": "boolean",
          "default": false
        },
        "writeOnly": {
          "type": "boolean",
          "default": false
        },
        "examples": {
          "type": "array",
          "items": true
        },
        "multipleOf": {
          "type": "number",
          "exclusiveMinimum": 0
        },
        "maximum": {
          "type": "number"
        },
        "exclusiveMaximum": {
          "type": "number"
        },
        "minimum": {
          "type": "number"
        },
        "exclusiveMinimum": {
          "type": "number"
        },
        "maxLength": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_nonNegativeInteger"
        },
        "minLength": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_nonNegativeIntegerDefault0"
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "additionalItems": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
        },
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
            },
            {
              "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_schemaArray"
            }
          ],
          "default": true
        },
        "maxItems": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_nonNegativeInteger"
        },
        "minItems": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_nonNegativeIntegerDefault0"
        },
        "uniqueItems": {
          "type": "boolean",
          "default": false
        },
        "contains": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
        },
        "maxProperties": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_nonNegativeInteger"
        },
        "minProperties": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_nonNegativeIntegerDefault0"
        },
        "required": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_stringArray"
        },
        "additionalProperties": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
        },
        "definitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
          },
          "default": {}
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
          },
          "default": {}
        },
        "patternProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
          },
          "propertyNames": {
            "format": "regex"
          },
          "default": {}
        },
        "dependencies": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
              },
              {
                "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_stringArray"
              }
            ]
          }
        },
        "propertyNames": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
        },
        "const": true,
        "enum": {
          "type": "array",
          "items": true,
          "minItems": 1,
          "uniqueItems": true
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_simpleTypes"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_simpleTypes"
              },
              "minItems": 1,
              "uniqueItems": true
            }
          ]
        },
        "format": {
          "type": "string"
        },
        "contentMediaType": {
          "type": "string"
        },
        "contentEncoding": {
          "type": "string"
        },
        "if": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
        },
        "then": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
        },
        "else": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
        },
        "allOf": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_schemaArray"
        },
        "anyOf": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_schemaArray"
        },
        "oneOf": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_schemaArray"
        },
        "not": {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
        }
      },
      "default": true
    },
    "http:__json-schema.org_draft-07_schema_definitions_nonNegativeInteger": {
      "type": "integer",
      "minimum": 0
    },
    "http:__json-schema.org_draft-07_schema_definitions_nonNegativeIntegerDefault0": {
      "allOf": [
        {
          "$ref": "#/definitions/http:__json-schema.org_draft-07_schema_definitions_nonNegativeInteger"
        },
        {
          "default": 0
        }
      ]
    },
    "http:__json-schema.org_draft-07_schema_definitions_schemaArray": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/http:__json-schema.org_draft-07_schema"
      }
    },
    "http:__json-schema.org_draft-07_schema_definitions_stringArray": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "default": []
    },
    "http:__json-schema.org_draft-07_schema_definitions_simpleTypes": {
      "enum": [
        "array",
        "boolean",
        "integer",
        "null",
        "number",
        "object",
        "string"
      ]
    }
  },
  "properties": {
    "name": {
      "type": "string",
      "title": "The Policy Name",
      "description": "Name of the policy.",
      "examples": [
        "Basic Authentication"
      ],
      "minLength": 1
    },
    "summary": {
      "type": "string",
      "title": "The Policy Summary",
      "description": "Short description of what the policy does",
      "examples": [
        "Enables CORS (Cross Origin Resource Sharing) request handling."
      ],
      "maxLength": 75
    },
    "description": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      ],
      "title": "The Policy Description",
      "description": "Longer description of what the policy does.",
      "examples": [
        "Extract authentication credentials from the HTTP Authorization header and pass them to 3scale backend.",
        [
          "Redirect request to different upstream: ",
          " - based on path",
          "- set different Host header"
        ]
      ]
    },
    "order": {
      "type": "object",
      "title": "Order restrictions of the policy",
      "description": "Specifies before or after which policies the policy should be placed in the chain.",
      "properties": {
        "before": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "version"
            ]
          },
          "description": "The policy should be placed before these ones in the chain."
        },
        "after": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "version"
            ]
          },
          "description": "The policy should be placed after these ones in the chain."
        }
      }
    },
    "version": {
      "$ref": "#/definitions/version"
    },
    "configuration": {
      "$ref": "#/definitions/schema"
    }
  },
  "required": [
    "name",
    "version",
    "configuration",
    "summary"
  ]
}