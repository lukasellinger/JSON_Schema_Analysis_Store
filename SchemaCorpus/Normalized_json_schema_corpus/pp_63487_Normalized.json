{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "Animation Sampler",
  "type": "object",
  "description": "Combines input and output accessors with an interpolation algorithm to define a keyframe graph (but not its target).",
  "allOf": [
    {
      "$ref": "#/definitions/glTFProperty.schema.json"
    }
  ],
  "properties": {
    "input": {
      "allOf": [
        {
          "$ref": "#/definitions/glTFid.schema.json"
        }
      ],
      "description": "The index of an accessor containing keyframe input values, e.g., time.",
      "gltf_detailedDescription": "The index of an accessor containing keyframe input values, e.g., time. That accessor must have componentType `FLOAT`. The values represent time in seconds with `time[0] \u003e\u003d 0.0`, and strictly increasing values, i.e., `time[n + 1] \u003e time[n]`."
    },
    "interpolation": {
      "description": "Interpolation algorithm.",
      "default": "LINEAR",
      "gltf_detailedDescription": "Interpolation algorithm.",
      "anyOf": [
        {
          "enum": [
            "LINEAR"
          ],
          "description": "The animated values are linearly interpolated between keyframes. When targeting a rotation, spherical linear interpolation (slerp) should be used to interpolate quaternions. The number output of elements must equal the number of input elements."
        },
        {
          "enum": [
            "STEP"
          ],
          "description": "The animated values remain constant to the output of the first keyframe, until the next keyframe. The number of output elements must equal the number of input elements."
        },
        {
          "enum": [
            "CUBICSPLINE"
          ],
          "description": "The animation\u0027s interpolation is computed using a cubic spline with specified tangents. The number of output elements must equal three times the number of input elements. For each input element, the output stores three elements, an in-tangent, a spline vertex, and an out-tangent. There must be at least two keyframes when using this interpolation."
        },
        {
          "type": "string"
        }
      ]
    },
    "output": {
      "allOf": [
        {
          "$ref": "#/definitions/glTFid.schema.json"
        }
      ],
      "description": "The index of an accessor, containing keyframe output values.",
      "gltf_detailedDescription": "The index of an accessor containing keyframe output values. When targeting translation or scale paths, the `accessor.componentType` of the output values must be `FLOAT`. When targeting rotation or morph weights, the `accessor.componentType` of the output values must be `FLOAT` or normalized integer. For weights, each output element stores `SCALAR` values with a count equal to the number of morph targets."
    },
    "extensions": {},
    "extras": {}
  },
  "required": [
    "input",
    "output"
  ],
  "definitions": {
    "glTFProperty.schema.json": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "glTF Property",
      "type": "object",
      "properties": {
        "extensions": {
          "$ref": "#/definitions/extension.schema.json"
        },
        "extras": {
          "$ref": "#/definitions/extras.schema.json"
        }
      }
    },
    "extension.schema.json": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Extension",
      "type": "object",
      "description": "Dictionary object with extension-specific objects.",
      "properties": {},
      "additionalProperties": {
        "type": "object"
      }
    },
    "extras.schema.json": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Extras",
      "description": "Application-specific data."
    },
    "glTFid.schema.json": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "glTF Id",
      "type": "integer",
      "minimum": 0
    }
  }
}