{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "email-message",
  "description": "The Email Message Object represents an instance of an email message.",
  "type": "object",
  "allOf": [
    {
      "$ref": "#/definitions/..\\common\\cyber-observable-core.json"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "The value of this property MUST be `email-message`.",
          "enum": [
            "email-message"
          ]
        },
        "date": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies the date/time that the email message was sent."
        },
        "content_type": {
          "type": "string",
          "description": "Specifies the value of the \u0027Content-Type\u0027 header of the email message."
        },
        "from_ref": {
          "type": "string",
          "description": "Specifies the value of the \u0027From:\u0027 header of the email message."
        },
        "sender_ref": {
          "type": "string",
          "description": "Specifies the value of the \u0027From\u0027 field of the email message"
        },
        "to_refs": {
          "type": "array",
          "description": "Specifies the mailboxes that are \u0027To:\u0027 recipients of the email message",
          "items": {
            "type": "string"
          }
        },
        "cc_refs": {
          "type": "array",
          "description": "Specifies the mailboxes that are \u0027CC:\u0027 recipients of the email message",
          "items": {
            "type": "string"
          }
        },
        "bcc_refs": {
          "type": "array",
          "description": "Specifies the mailboxes that are \u0027BCC:\u0027 recipients of the email message.",
          "items": {
            "type": "string"
          }
        },
        "subject": {
          "type": "string",
          "description": "Specifies the subject of the email message."
        },
        "received_lines": {
          "type": "array",
          "description": "Specifies one or more Received header fields that may be included in the email headers.",
          "items": {
            "type": "string"
          }
        },
        "additional_header_fields": {
          "$ref": "#/definitions/email-additional-header-fields",
          "description": "Specifies any other header fields found in the email message, as a dictionary."
        },
        "raw_email_ref": {
          "type": "string",
          "description": "Specifies the raw binary contents of the email message, including both the headers and body, as a reference to an Artifact Object."
        }
      }
    }
  ],
  "oneOf": [
    {
      "properties": {
        "is_multipart": {
          "type": "boolean",
          "enum": [
            false
          ],
          "description": "Indicates whether the email body contains multiple MIME parts."
        },
        "body": {
          "type": "string",
          "description": "Specifies a string containing the email body. This field MAY only be used if is_multipart is false."
        }
      },
      "required": [
        "is_multipart"
      ],
      "not": {
        "required": [
          "body_multipart"
        ]
      }
    },
    {
      "properties": {
        "is_multipart": {
          "type": "boolean",
          "enum": [
            true
          ],
          "description": "Indicates whether the email body contains multiple MIME parts."
        },
        "body_multipart": {
          "type": "array",
          "description": "Specifies a list of the MIME parts that make up the email body. This property MAY only be used if is_multipart is true.",
          "items": {
            "$ref": "#/definitions/mime-part-type"
          }
        }
      },
      "required": [
        "is_multipart"
      ],
      "not": {
        "required": [
          "body"
        ]
      }
    }
  ],
  "definitions": {
    "mime-part-type": {
      "type": "object",
      "description": "Specifies a component of a multi-part email body.",
      "properties": {
        "body": {
          "type": "string",
          "description": "Specifies the contents of the MIME part if the content_type is not provided OR starts with text/"
        },
        "body_raw_ref": {
          "type": "string",
          "description": "Specifies the contents of non-textual MIME parts, that is those whose content_type does not start with text/, as a reference to an Artifact Object or File Object."
        },
        "content_type": {
          "type": "string",
          "description": "Specifies the value of the \u0027Content-Type\u0027 header field of the MIME part."
        },
        "content_disposition": {
          "type": "string",
          "description": "Specifies the value of the \u0027Content-Disposition\u0027 header field of the MIME part."
        }
      },
      "oneOf": [
        {
          "required": [
            "body"
          ]
        },
        {
          "required": [
            "body_raw_ref"
          ]
        }
      ]
    },
    "email-additional-header-fields": {
      "type": "object",
      "description": "Specifies any other header fields (except for date, received_lines, content_type, from_ref, sender_ref, to_refs, cc_refs, bcc_refs, and subject) found in the email message, as a dictionary.",
      "not": {
        "patternProperties": {
          "^date|received_lines|content_type|from_ref|sender_ref|to_refs|cc_refs|bcc_refs|subject$": {
            "description": "Invalid additional header field types"
          }
        },
        "additionalProperties": false
      },
      "patternProperties": {
        "^[a-zA-Z0-9_-]{3,256}$": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 2
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "..\\common\\cyber-observable-core.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "core",
      "description": "Common properties and behavior across all Cyber Observable Objects.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^\\-?[a-z0-9]+(-[a-z0-9]+)*\\-?$",
          "minLength": 3,
          "maxLength": 250,
          "description": "Indicates that this object is an Observable Object. The value of this property MUST be a valid Observable Object type name, but to allow for custom objects this has been removed from the schema.",
          "not": {
            "enum": [
              "action"
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Specifies a textual description of the Object."
        },
        "extensions": {
          "$ref": "#/definitions/..\\common\\dictionary.json",
          "description": "Specifies any extensions of the object, as a dictionary."
        }
      },
      "patternProperties": {
        "^[a-z0-9_]{3,250}$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false,
      "not": {
        "anyOf": [
          {
            "required": [
              "action"
            ]
          }
        ]
      },
      "required": [
        "type"
      ]
    },
    "..\\common\\dictionary.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "dictionary",
      "description": "A dictionary captures a set of key/value pairs",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_-]{3,256}$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "..\\common\\timestamp.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "timestamp",
      "description": "Represents timestamps across the CTI specifications. The format is an RFC3339 timestamp, with a required timezone specification of \u0027Z\u0027.",
      "type": "string",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?Z$"
    }
  }
}