{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "oneOf": [
    {
      "type": [
        "string",
        "null"
      ],
      "minLength": 2
    },
    {
      "name": "sanction",
      "description": "A sanction issued by a government or regulatory body to an entity to prevent it operating (e.g. disqualified director) or ban others from dealing with it (e.g. a OFAC sanctioned entity).",
      "type": "object",
      "properties": {
        "sanction_type": {
          "enum": [
            "disqualification",
            "sanctions_listing",
            "debarment"
          ],
          "description": "types of sanction - one of \u0027disqualification\u0027, \u0027sanctions_list\u0027, \u0027debarment\u0027"
        },
        "restrictions": {
          "type": "array",
          "description": "conditions or restrictions on the sanctions",
          "items": {
            "type": "string"
          }
        },
        "cause": {
          "type": "array",
          "description": "reasons for the sanction being applied",
          "items": {
            "type": "string"
          }
        },
        "legal_basis": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/legislation.json"
          }
        },
        "sanction_jurisdictions": {
          "description": "list of jurisdictions that this sanction applies to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sanction_issuer": {
          "oneOf": [
            {
              "type": [
                "string",
                "null"
              ],
              "minLength": 2
            },
            {
              "$ref": "#/definitions/organisation.json"
            }
          ]
        },
        "notes": {
          "type": "string"
        },
        "other_attributes": {
          "type": "object"
        }
      },
      "required": [
        "sanction_type"
      ]
    }
  ],
  "definitions": {
    "legislation.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "oneOf": [
        {
          "type": [
            "string",
            "null"
          ],
          "format": "non-blank"
        },
        {
          "description": "A piece of legislation. NB we expect to add additional properties to this over time",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "format": "non-blank",
              "description": "name of the the legislation"
            },
            "url": {
              "type": "string",
              "format": "non-blank"
            }
          }
        }
      ]
    },
    "organisation.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "An entity which is a distinct organisation, but is not a company nor an individual. Examples include governments and governmental entities (e.g. Multilateral Development Banks, Government Departments, municipalities, etc), and also membership organisations",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the entity",
          "minLength": 1
        },
        "jurisdiction": {
          "type": "string",
          "description": "Name of the jurisdiction in which the entity is incorporated/domiciled (use global for global entities, e.g. UN)"
        },
        "legal_form": {
          "type": "string",
          "description": "legal form of organisation, e.g. municipality, government department, trust, etc"
        },
        "website": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 5
            },
            {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string",
                "minLength": 5
              }
            }
          ]
        },
        "telephone_number": {
          "type": "string",
          "minLength": 4
        },
        "fax_number": {
          "type": "string",
          "minLength": 4
        },
        "identifiers": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/identifier.json"
          }
        },
        "registered_address": {
          "$ref": "#/definitions/address.json"
        },
        "headquarters_address": {
          "$ref": "#/definitions/address.json"
        },
        "mailing_address": {
          "$ref": "#/definitions/address.json"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/address-with-type.json"
          }
        },
        "industry_codes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/industry-code.json"
          }
        },
        "previous_names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/previous-name.json"
          }
        },
        "alternative_names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/alternative-name.json"
          }
        },
        "other_attributes": {
          "description": "Use for other attributes for which we don\u0027t yet have curated schema attributes",
          "type": "object"
        }
      },
      "required": [
        "name"
      ]
    },
    "identifier.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "An identifier for an entity (possibly other things, e.g. securities in the future). Examples are tax IDs, non-profit IDs, SEC CIK numbers, Federal Reserve RSSD id. The main requirements for an identifier is that they should be well-defined, and issued by a government or have statutory standing",
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The unique identifier given by the identifier system â€“ it should be unique in the context of the identifier_system",
          "minLength": 1
        },
        "identifier_system_code": {
          "type": "string",
          "description": "An identifier representing the identifier scheme. Some examples of this are us_fein (US Federal tax number), us_sec_cik (US Securities and Exchange Commission CIK), uk_ew_cc (Charity Commission of England \u0026 Wales), lei (Global Legal Entity Identifier System)"
        }
      },
      "required": [
        "uid",
        "identifier_system_code"
      ]
    },
    "address.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "oneOf": [
        {
          "type": [
            "string",
            "null"
          ],
          "minLength": 2
        },
        {
          "name": "Address",
          "description": "An address object",
          "type": "object",
          "properties": {
            "street_address": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "postal_code": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "country_code": {
              "description": "ISO 3166-2 code for country",
              "type": "string"
            }
          },
          "anyOf": [
            {
              "required": [
                "street_address"
              ]
            },
            {
              "required": [
                "postal_code"
              ]
            },
            {
              "required": [
                "locality",
                "country"
              ]
            }
          ]
        }
      ]
    },
    "address-with-type.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "An address with a type",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/address.json"
        },
        "type": {
          "enum": [
            "registered",
            "headquarters",
            "mailing",
            "trading",
            "unknown"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "address",
        "type"
      ]
    },
    "industry-code.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "An industry code from a standard code list (e.g. NAICS 2007 or NACE 2). This schema is a sub-schema of Classification.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "code_scheme_id": {
          "type": "string",
          "description": "An identifier representing industry code scheme. At the moment these are eu_nace_2, uk_sic_2003, uk_sic_2007, us_naics_2002, us_naics_2007, be_nace_2008, dk_db_2007, nz_bic_2006, no_sic_2007, anz_sic_2006, nz_bic_2006, in_nic_2004_mca, ca_qc_cae, lu_nace_2. For other code schemes, or details of these, contact info@opencorporates.com"
        },
        "start_date": {
          "type": "string",
          "format": "date"
        },
        "end_date": {
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "code",
        "code_scheme_id"
      ]
    },
    "previous-name.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "name": "PreviousName",
      "description": "A previous name of a company",
      "type": "object",
      "properties": {
        "company_name": {
          "type": "string",
          "minLength": 1
        },
        "con_date": {
          "type": "string",
          "format": "date",
          "description": "The end (conversion) date of the name"
        },
        "start_date": {
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "company_name"
      ]
    },
    "alternative-name.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "An alternative name of a company, e.g. abbreviation, trading (including dba or doing business as), legal. As well as trading names etc, it can be used for storing alternative language representations of the legal name, in which case the language should be represented as two-letter ISO-639 code",
      "type": "object",
      "properties": {
        "company_name": {
          "type": "string",
          "minLength": 1
        },
        "start_date": {
          "type": "string",
          "format": "date"
        },
        "end_date": {
          "type": "string",
          "format": "date"
        },
        "language": {
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        },
        "type": {
          "type": "string",
          "enum": [
            "trading",
            "abbreviation",
            "legal",
            "unknown",
            "alias"
          ]
        }
      },
      "required": [
        "company_name",
        "type"
      ]
    }
  }
}