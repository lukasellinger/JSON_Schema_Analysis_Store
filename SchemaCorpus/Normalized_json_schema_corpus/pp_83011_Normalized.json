{
  "id": "http://schemas.triniti.io/json-schema/triniti/ovp/mixin/search-videos-response/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "response_id": {
      "type": "string",
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "pbj": {
        "type": "uuid",
        "rule": "single"
      }
    },
    "created_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single"
      }
    },
    "ctx_request_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_request": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/request"
        }
      ],
      "description": "The \"ctx_request\" is the actual request object that \"ctx_request_ref\" refers to. In some cases it\u0027s useful for request handlers to copy the request into the response so the requestor has everything in one message. This will NOT always be populated. A common use case is search request/response cycles where you want to know what the search criteria was so you can render that along with the results.",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_correlator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "derefs": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "object"
        }
      },
      "additionalProperties": false,
      "description": "Responses can include \"dereferenced\" messages to prevent the consumer from needing to make multiple HTTP requests. It is up to the consumer to make use of the dereferenced messages if/when they are provided.",
      "pbj": {
        "type": "message",
        "rule": "map"
      }
    },
    "links": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535
        }
      },
      "additionalProperties": false,
      "description": "@link https://en.wikipedia.org/wiki/HATEOAS",
      "pbj": {
        "type": "text",
        "rule": "map"
      }
    },
    "metas": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535
        }
      },
      "additionalProperties": false,
      "pbj": {
        "type": "text",
        "rule": "map"
      }
    },
    "total": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 4294967295,
      "description": "The total number of nodes matching the search.",
      "pbj": {
        "type": "int",
        "rule": "single"
      }
    },
    "has_more": {
      "type": "boolean",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "time_taken": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 16777215,
      "description": "How long in milliseconds it took to run the query.",
      "pbj": {
        "type": "medium-int",
        "rule": "single"
      }
    },
    "max_score": {
      "type": "number",
      "default": 0,
      "description": "The maximum score of a matching node from the entire search.",
      "pbj": {
        "type": "float",
        "rule": "single"
      }
    },
    "cursors": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "additionalProperties": false,
      "description": "Cursors are optionally provided by the underlying search system to allow for efficient pagination. In the absense of cursors, paging is done using count and page number.",
      "pbj": {
        "type": "string",
        "rule": "map"
      }
    },
    "nodes": {
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/video"
        }
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message",
        "rule": "list"
      }
    }
  },
  "required": [
    "response_id"
  ],
  "definitions": {
    "request": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-0.json"
        },
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-1.json"
        },
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-2.json"
        }
      ]
    },
    "video": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\video\\1-0-0.json"
        },
        {
          "$ref": "#/definitions/..\\video\\1-0-1.json"
        },
        {
          "$ref": "#/definitions/..\\video\\1-0-2.json"
        },
        {
          "$ref": "#/definitions/..\\video\\1-0-3.json"
        },
        {
          "$ref": "#/definitions/..\\video\\1-0-4.json"
        }
      ]
    },
    "..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "request_id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "occurred_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "ctx_retries": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 255,
          "description": "The \"ctx_retries\" field is used to keep track of how many attempts were made to handle this request. In some cases, the service or transport that handles the request may be down or over capacity and is being retried."
        },
        "ctx_causator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false
        },
        "ctx_correlator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false
        },
        "ctx_user_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false
        },
        "ctx_app": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-0.json_definitions_app"
            }
          ],
          "description": "The \"ctx_app\" refers to the application used to make the request. This is different from ctx_ua (user_agent) because the agent used (Safari, Firefox) is not necessarily the app used (cms, iOS app, website)"
        },
        "ctx_cloud": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-0.json_definitions_cloud"
            }
          ],
          "description": "The \"ctx_cloud\" is set by the server making the request and is generally only used internally for tracking and performance monitoring."
        },
        "ctx_ip": {
          "type": "string",
          "format": "ipv4"
        },
        "ctx_ua": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535
        }
      },
      "required": [
        "request_id"
      ],
      "definitions": {
        "app": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json"
            }
          ]
        },
        "cloud": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json"
            }
          ]
        }
      },
      "additionalProperties": true
    },
    "..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-0.json_definitions_app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json"
        }
      ]
    },
    "..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::app:1-0-0"
        },
        "_id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "vendor": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "name": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "version": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "build": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "variant": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-0.json_definitions_cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json"
        }
      ]
    },
    "..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::cloud:1-0-0"
        },
        "provider": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "region": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "zone": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "instance_id": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "instance_type": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-1.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "request_id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "occurred_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "ctx_retries": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 255,
          "description": "The \"ctx_retries\" field is used to keep track of how many attempts were made to handle this request. In some cases, the service or transport that handles the request may be down or over capacity and is being retried."
        },
        "ctx_causator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false
        },
        "ctx_correlator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false
        },
        "ctx_user_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false
        },
        "ctx_app": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-1.json_definitions_app"
            }
          ],
          "description": "The \"ctx_app\" refers to the application used to make the request. This is different from ctx_ua (user_agent) because the agent used (Safari, Firefox) is not necessarily the app used (cms, iOS app, website)"
        },
        "ctx_cloud": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-1.json_definitions_cloud"
            }
          ],
          "description": "The \"ctx_cloud\" is set by the server making the request and is generally only used internally for tracking and performance monitoring."
        },
        "ctx_ip": {
          "type": "string",
          "format": "ipv4"
        },
        "ctx_ipv6": {
          "type": "string",
          "format": "ipv6"
        },
        "ctx_ua": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535
        }
      },
      "required": [
        "request_id"
      ],
      "definitions": {
        "app": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json"
            }
          ]
        },
        "cloud": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json"
            }
          ]
        }
      },
      "additionalProperties": true
    },
    "..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-1.json_definitions_app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json"
        }
      ]
    },
    "..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-1.json_definitions_cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json"
        }
      ]
    },
    "..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-2.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "request_id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "occurred_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "ctx_retries": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 255,
          "description": "The \"ctx_retries\" field is used to keep track of how many attempts were made to handle this request. In some cases, the service or transport that handles the request may be down or over capacity and is being retried."
        },
        "ctx_causator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false
        },
        "ctx_correlator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false
        },
        "ctx_user_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false
        },
        "ctx_app": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-2.json_definitions_app"
            }
          ],
          "description": "The \"ctx_app\" refers to the application used to make the request. This is different from ctx_ua (user_agent) because the agent used (Safari, Firefox) is not necessarily the app used (cms, iOS app, website)"
        },
        "ctx_cloud": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-2.json_definitions_cloud"
            }
          ],
          "description": "The \"ctx_cloud\" is set by the server making the request and is generally only used internally for tracking and performance monitoring."
        },
        "ctx_ip": {
          "type": "string",
          "format": "ipv4"
        },
        "ctx_ipv6": {
          "type": "string",
          "format": "ipv6"
        },
        "ctx_ua": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535
        },
        "derefs": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "pattern": "^[\\w\\.-]+$"
            }
          ],
          "uniqueItems": true,
          "additionalProperties": false,
          "description": "Field names to dereference, this serves as a hint to the server and is not necessarily gauranteed since authorization, availability, etc. are determined by the server not the client."
        }
      },
      "required": [
        "request_id"
      ],
      "definitions": {
        "app": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json"
            }
          ]
        },
        "cloud": {
          "type": "object",
          "anyOf": [
            {
              "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json"
            }
          ]
        }
      },
      "additionalProperties": true
    },
    "..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-2.json_definitions_app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\app\\1-0-0.json"
        }
      ]
    },
    "..\\..\\..\\..\\gdbots\\pbjx\\mixin\\request\\1-0-2.json_definitions_cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\..\\gdbots\\contexts\\cloud\\1-0-0.json"
        }
      ]
    },
    "..\\video\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "The \"_id\" value: - MUST NOT change for the life of the node. - SHOULD be globally unique - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())"
        },
        "status": {
          "type": "string",
          "default": "draft",
          "enum": [
            "unknown",
            "published",
            "scheduled",
            "pending",
            "draft",
            "expired",
            "archived",
            "deleted"
          ]
        },
        "etag": {
          "type": "string",
          "pattern": "^[\\w\\.:-]+$"
        },
        "created_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "creator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user."
        },
        "updated_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "updater_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "last_event_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use for widgets, sharing, seo."
        },
        "poster_image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use as the poster."
        },
        "is_live": {
          "type": "boolean"
        },
        "is_full_episode": {
          "type": "boolean"
        },
        "is_promo": {
          "type": "boolean"
        },
        "launch_text": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "duration": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535,
          "description": "Duration of the video in seconds."
        },
        "has_music": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 2
        },
        "allow_comments": {
          "type": "boolean",
          "default": true
        },
        "sharing_enabled": {
          "type": "boolean",
          "default": true
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 5000,
          "description": "A description of the video (usually a few sentences). It should typically not have HTML as it is used in metadata, feeds, SERP and social."
        },
        "credit": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "description": "A credit is a short string used to publicly acknowledge the source/creator of the video. e.g. \"Fox News\", \"CNN\"."
        },
        "show_related_videos": {
          "type": "boolean",
          "description": "Determines if the related videos should render. This is intended as a flag on blogroll/lists, not the permalink of a video where you\u0027d always expect to see the related videos."
        },
        "related_videos_heading": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "related_video_refs": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "pattern": "^[\\w\\/\\.:-]+$"
            }
          ],
          "additionalProperties": false
        },
        "caption_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the caption asset in DAM for this video."
        },
        "caption_urls": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
              "type": "string",
              "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
            }
          },
          "additionalProperties": false,
          "description": "URL to the caption file keyed by the language code, e.g. \"en\", \"fr\"."
        },
        "tvpg_rating": {
          "type": "string",
          "enum": [
            "unknown",
            "TV-G",
            "TV-MA",
            "TV-PG",
            "TV-Y",
            "TV-Y7",
            "TV-Y7-FV",
            "TV-14"
          ]
        },
        "mezzanine_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
          "description": "URL to the mezzanine video asset."
        },
        "mezzanine_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the mezzanine asset in DAM for this video."
        },
        "mpm": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "description": "A tracking code for video clips that is used to correlate various metrics with payouts to talent in the clip."
        },
        "original_air_date": {
          "type": "string",
          "format": "date-time"
        },
        "show": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "_id"
      ],
      "additionalProperties": true
    },
    "..\\video\\1-0-1.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "The \"_id\" value: - MUST NOT change for the life of the node. - SHOULD be globally unique - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())"
        },
        "status": {
          "type": "string",
          "default": "draft",
          "enum": [
            "unknown",
            "published",
            "scheduled",
            "pending",
            "draft",
            "expired",
            "archived",
            "deleted"
          ]
        },
        "etag": {
          "type": "string",
          "pattern": "^[\\w\\.:-]+$"
        },
        "created_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "creator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user."
        },
        "updated_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "updater_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "last_event_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use for widgets, sharing, seo."
        },
        "poster_image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use as the poster."
        },
        "is_live": {
          "type": "boolean"
        },
        "is_full_episode": {
          "type": "boolean"
        },
        "is_promo": {
          "type": "boolean"
        },
        "launch_text": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "duration": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535,
          "description": "Duration of the video in seconds."
        },
        "has_music": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 2
        },
        "allow_comments": {
          "type": "boolean",
          "default": true
        },
        "sharing_enabled": {
          "type": "boolean",
          "default": true
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 5000,
          "description": "A description of the video (usually a few sentences). It should typically not have HTML as it is used in metadata, feeds, SERP and social."
        },
        "credit": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "description": "A credit is a short string used to publicly acknowledge the source/creator of the video. e.g. \"Fox News\", \"CNN\"."
        },
        "show_related_videos": {
          "type": "boolean",
          "description": "Determines if the related videos should render. This is intended as a flag on blogroll/lists, not the permalink of a video where you\u0027d always expect to see the related videos."
        },
        "related_videos_heading": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "related_video_refs": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "pattern": "^[\\w\\/\\.:-]+$"
            }
          ],
          "additionalProperties": false
        },
        "caption_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the caption asset in DAM for this video."
        },
        "caption_urls": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
              "type": "string",
              "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
            }
          },
          "additionalProperties": false,
          "description": "URL to the caption file keyed by the language code, e.g. \"en\", \"fr\"."
        },
        "tvpg_rating": {
          "type": "string",
          "enum": [
            "unknown",
            "TV-G",
            "TV-MA",
            "TV-PG",
            "TV-Y",
            "TV-Y7",
            "TV-Y7-FV",
            "TV-14"
          ]
        },
        "mezzanine_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
          "description": "URL to the mezzanine video asset."
        },
        "mezzanine_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the mezzanine asset in DAM for this video."
        },
        "mpm": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "description": "A tracking code for video clips that is used to correlate various metrics with payouts to talent in the clip."
        },
        "original_air_date": {
          "type": "string",
          "format": "date-time"
        },
        "show": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        },
        "audio_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the audio asset for this video."
        }
      },
      "required": [
        "_id"
      ],
      "additionalProperties": true
    },
    "..\\video\\1-0-2.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "The \"_id\" value: - MUST NOT change for the life of the node. - SHOULD be globally unique - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())"
        },
        "status": {
          "type": "string",
          "default": "draft",
          "enum": [
            "unknown",
            "published",
            "scheduled",
            "pending",
            "draft",
            "expired",
            "archived",
            "deleted"
          ]
        },
        "etag": {
          "type": "string",
          "pattern": "^[\\w\\.:-]+$"
        },
        "created_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "creator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user."
        },
        "updated_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "updater_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "last_event_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use for widgets, sharing, seo."
        },
        "poster_image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use as the poster."
        },
        "is_live": {
          "type": "boolean"
        },
        "live_m3u8_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
          "description": "URL to the m3u8 for the live stream."
        },
        "is_full_episode": {
          "type": "boolean"
        },
        "is_promo": {
          "type": "boolean"
        },
        "launch_text": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "duration": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535,
          "description": "Duration of the video in seconds."
        },
        "has_music": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 2
        },
        "allow_comments": {
          "type": "boolean",
          "default": true
        },
        "sharing_enabled": {
          "type": "boolean",
          "default": true
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 5000,
          "description": "A description of the video (usually a few sentences). It should typically not have HTML as it is used in metadata, feeds, SERP and social."
        },
        "credit": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "description": "A credit is a short string used to publicly acknowledge the source/creator of the video. e.g. \"Fox News\", \"CNN\"."
        },
        "show_related_videos": {
          "type": "boolean",
          "description": "Determines if the related videos should render. This is intended as a flag on blogroll/lists, not the permalink of a video where you\u0027d always expect to see the related videos."
        },
        "related_videos_heading": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "related_video_refs": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "pattern": "^[\\w\\/\\.:-]+$"
            }
          ],
          "additionalProperties": false
        },
        "caption_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the caption asset in DAM for this video."
        },
        "caption_urls": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
              "type": "string",
              "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
            }
          },
          "additionalProperties": false,
          "description": "URL to the caption file keyed by the language code, e.g. \"en\", \"fr\"."
        },
        "tvpg_rating": {
          "type": "string",
          "enum": [
            "unknown",
            "TV-G",
            "TV-MA",
            "TV-PG",
            "TV-Y",
            "TV-Y7",
            "TV-Y7-FV",
            "TV-14"
          ]
        },
        "mezzanine_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
          "description": "URL to the mezzanine video asset."
        },
        "mezzanine_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the mezzanine asset in DAM for this video."
        },
        "mpm": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "description": "A tracking code for video clips that is used to correlate various metrics with payouts to talent in the clip."
        },
        "original_air_date": {
          "type": "string",
          "format": "date-time"
        },
        "show": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        },
        "audio_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the audio asset for this video."
        }
      },
      "required": [
        "_id"
      ],
      "additionalProperties": true
    },
    "..\\video\\1-0-3.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "The \"_id\" value: - MUST NOT change for the life of the node. - SHOULD be globally unique - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())"
        },
        "status": {
          "type": "string",
          "default": "draft",
          "enum": [
            "unknown",
            "published",
            "scheduled",
            "pending",
            "draft",
            "expired",
            "archived",
            "deleted"
          ]
        },
        "etag": {
          "type": "string",
          "pattern": "^[\\w\\.:-]+$"
        },
        "created_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "creator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user."
        },
        "updated_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "updater_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "last_event_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use for widgets, sharing, seo."
        },
        "poster_image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use as the poster."
        },
        "is_live": {
          "type": "boolean"
        },
        "live_m3u8_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
          "description": "URL to the m3u8 for the live stream."
        },
        "is_full_episode": {
          "type": "boolean"
        },
        "is_promo": {
          "type": "boolean"
        },
        "launch_text": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "duration": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535,
          "description": "Duration of the video in seconds."
        },
        "has_music": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 2
        },
        "allow_comments": {
          "type": "boolean",
          "default": true
        },
        "sharing_enabled": {
          "type": "boolean",
          "default": true
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 5000,
          "description": "A description of the video (usually a few sentences). It should typically not have HTML as it is used in metadata, feeds, SERP and social."
        },
        "credit": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "description": "A credit is a short string used to publicly acknowledge the source/creator of the video. e.g. \"Fox News\", \"CNN\"."
        },
        "show_related_videos": {
          "type": "boolean",
          "description": "Determines if the related videos should render. This is intended as a flag on blogroll/lists, not the permalink of a video where you\u0027d always expect to see the related videos."
        },
        "related_videos_heading": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "related_video_refs": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "pattern": "^[\\w\\/\\.:-]+$"
            }
          ],
          "additionalProperties": false
        },
        "caption_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the caption asset in DAM for this video."
        },
        "caption_urls": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
              "type": "string",
              "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
            }
          },
          "additionalProperties": false,
          "description": "URL to the caption file keyed by the language code, e.g. \"en\", \"fr\"."
        },
        "tvpg_rating": {
          "type": "string",
          "enum": [
            "unknown",
            "TV-G",
            "TV-MA",
            "TV-PG",
            "TV-Y",
            "TV-Y7",
            "TV-Y7-FV",
            "TV-14"
          ]
        },
        "mezzanine_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
          "description": "URL to the mezzanine video asset."
        },
        "mezzanine_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the mezzanine asset in DAM for this video."
        },
        "mpm": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "description": "A tracking code for video clips that is used to correlate various metrics with payouts to talent in the clip."
        },
        "original_air_date": {
          "type": "string",
          "format": "date-time"
        },
        "show": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        },
        "audio_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the audio asset for this video."
        },
        "youtube_video_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "youtube_custom_id": {
          "type": "string",
          "pattern": "^[\\w@#-]+$"
        }
      },
      "required": [
        "_id"
      ],
      "additionalProperties": true
    },
    "..\\video\\1-0-4.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "The \"_id\" value: - MUST NOT change for the life of the node. - SHOULD be globally unique - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())"
        },
        "status": {
          "type": "string",
          "default": "draft",
          "enum": [
            "unknown",
            "published",
            "scheduled",
            "pending",
            "draft",
            "expired",
            "archived",
            "deleted"
          ]
        },
        "etag": {
          "type": "string",
          "pattern": "^[\\w\\.:-]+$"
        },
        "created_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "creator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user."
        },
        "updated_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "updater_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "last_event_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use for widgets, sharing, seo."
        },
        "poster_image_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the image asset to use as the poster."
        },
        "is_live": {
          "type": "boolean"
        },
        "live_m3u8_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
          "description": "URL to the m3u8 for the live stream."
        },
        "is_full_episode": {
          "type": "boolean"
        },
        "is_promo": {
          "type": "boolean"
        },
        "launch_text": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "duration": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535,
          "description": "Duration of the video in seconds."
        },
        "has_music": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 2
        },
        "allow_comments": {
          "type": "boolean",
          "default": true
        },
        "sharing_enabled": {
          "type": "boolean",
          "default": true
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 5000,
          "description": "A description of the video (usually a few sentences). It should typically not have HTML as it is used in metadata, feeds, SERP and social."
        },
        "credit": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "description": "A credit is a short string used to publicly acknowledge the source/creator of the video. e.g. \"Fox News\", \"CNN\"."
        },
        "show_related_videos": {
          "type": "boolean",
          "description": "Determines if the related videos should render. This is intended as a flag on blogroll/lists, not the permalink of a video where you\u0027d always expect to see the related videos."
        },
        "related_videos_heading": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "related_video_refs": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "pattern": "^[\\w\\/\\.:-]+$"
            }
          ],
          "additionalProperties": false
        },
        "caption_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the caption asset in DAM for this video."
        },
        "caption_urls": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
              "type": "string",
              "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
            }
          },
          "additionalProperties": false,
          "description": "URL to the caption file keyed by the language code, e.g. \"en\", \"fr\"."
        },
        "tvpg_rating": {
          "type": "string",
          "enum": [
            "unknown",
            "TV-G",
            "TV-MA",
            "TV-PG",
            "TV-Y",
            "TV-Y7",
            "TV-Y7-FV",
            "TV-14"
          ]
        },
        "mezzanine_url": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
          "description": "URL to the mezzanine video asset."
        },
        "mezzanine_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the mezzanine asset in DAM for this video."
        },
        "source_urls": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
              "type": "string",
              "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
            }
          },
          "additionalProperties": false,
          "description": "URL to the playable sources keyed by the type, e.g. \"hls\", \"mp4\"."
        },
        "mpm": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$",
          "description": "A tracking code for video clips that is used to correlate various metrics with payouts to talent in the clip."
        },
        "original_air_date": {
          "type": "string",
          "format": "date-time"
        },
        "show": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        },
        "audio_ref": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "A reference to the audio asset for this video."
        },
        "youtube_video_id": {
          "type": "string",
          "pattern": "^[\\w-]+$"
        },
        "youtube_custom_id": {
          "type": "string",
          "pattern": "^[\\w@#-]+$"
        }
      },
      "required": [
        "_id"
      ],
      "additionalProperties": true
    }
  },
  "additionalProperties": true
}