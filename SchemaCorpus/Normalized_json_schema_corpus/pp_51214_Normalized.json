{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "relationship",
  "description": "The Relationship object is used to link together two SDOs in order to describe how they are related to each other.",
  "type": "object",
  "allOf": [
    {
      "$ref": "#/definitions/..\\common\\core.json"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of this object, which MUST be the literal `relationship`.",
          "enum": [
            "relationship"
          ]
        },
        "id": {
          "title": "id",
          "pattern": "^relationship--"
        },
        "relationship_type": {
          "type": "string",
          "description": "The name used to identify the type of relationship.",
          "pattern": "^[a-z0-9\\-]+$"
        },
        "description": {
          "type": "string",
          "description": "A description that helps provide context about the relationship."
        },
        "source_ref": {
          "description": "The ID of the source (from) object.",
          "allOf": [
            {
              "$ref": "#/definitions/..\\common\\identifier.json"
            },
            {
              "not": {
                "pattern": "^(relationship|sighting|bundle|marking-definition)--.+$"
              }
            }
          ]
        },
        "target_ref": {
          "description": "The ID of the target (to) object.",
          "allOf": [
            {
              "$ref": "#/definitions/..\\common\\identifier.json"
            },
            {
              "not": {
                "pattern": "^(relationship|sighting|bundle|marking-definition)--.+$"
              }
            }
          ]
        }
      }
    }
  ],
  "required": [
    "relationship_type",
    "source_ref",
    "target_ref"
  ],
  "definitions": {
    "..\\common\\core.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "core",
      "description": "Common properties and behavior across all STIX Domain Objects and STIX Relationship Objects.",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "type": "string",
          "pattern": "^\\-?[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\-?$",
          "minLength": 3,
          "maxLength": 250,
          "description": "The type property identifies the type of STIX Object (SDO, Relationship Object, etc). The value of the type field MUST be one of the types defined by a STIX Object (e.g., indicator).",
          "not": {
            "enum": [
              "incident",
              "infrastructure"
            ]
          }
        },
        "id": {
          "$ref": "#/definitions/..\\common\\identifier.json",
          "description": "The id property universally and uniquely identifies this object."
        },
        "created_by_ref": {
          "$ref": "#/definitions/..\\common\\identifier.json",
          "description": "The ID of the Source object that describes who created this object."
        },
        "labels": {
          "type": "array",
          "description": "The labels property specifies a set of classifications.",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "created": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "The created property represents the time at which the first version of this object was created."
        },
        "modified": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "The modified property represents the time that this particular version of the object was created."
        },
        "revoked": {
          "type": "boolean",
          "description": "The revoked property indicates whether the object has been revoked."
        },
        "external_references": {
          "type": "array",
          "description": "A list of external references which refers to non-STIX information.",
          "items": {
            "$ref": "#/definitions/..\\common\\external-reference.json"
          },
          "minItems": 1
        },
        "object_marking_refs": {
          "type": "array",
          "description": "The list of marking-definition objects to be applied to this object.",
          "items": {
            "$ref": "#/definitions/..\\common\\identifier.json"
          },
          "minItems": 1
        },
        "granular_markings": {
          "type": "array",
          "description": "The set of granular markings that apply to this object.",
          "items": {
            "$ref": "#/definitions/..\\common\\granular-marking.json"
          },
          "minItems": 1
        }
      },
      "patternProperties": {
        "^[a-z0-9_]{3,250}$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": true,
      "not": {
        "anyOf": [
          {
            "required": [
              "confidence"
            ]
          },
          {
            "required": [
              "severity"
            ]
          },
          {
            "required": [
              "action"
            ]
          },
          {
            "required": [
              "usernames"
            ]
          },
          {
            "required": [
              "phone_numbers"
            ]
          },
          {
            "required": [
              "addresses"
            ]
          },
          {
            "required": [
              "first_seen_precision"
            ]
          },
          {
            "required": [
              "last_seen_precision"
            ]
          },
          {
            "required": [
              "valid_from_precision"
            ]
          },
          {
            "required": [
              "valid_until_precision"
            ]
          }
        ]
      },
      "required": [
        "type",
        "id",
        "created",
        "modified"
      ]
    },
    "..\\common\\identifier.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "identifier",
      "description": "Represents identifiers across the CTI specifications. The format consists of the name of the top-level object being identified, followed by two dashes (--), followed by a UUIDv4.",
      "type": "string",
      "pattern": "^[a-z][a-z-]+[a-z]--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
    },
    "..\\common\\timestamp.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "timestamp",
      "description": "Represents timestamps across the CTI specifications. The format is an RFC3339 timestamp, with a required timezone specification of \u0027Z\u0027.",
      "type": "string",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?Z$"
    },
    "..\\common\\external-reference.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "external-reference",
      "description": "External references are used to describe pointers to information represented outside of STIX.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A human readable description"
        },
        "url": {
          "$ref": "#/definitions/..\\common\\url-regex.json",
          "description": "A URL reference to an external resource."
        }
      },
      "oneOf": [
        {
          "properties": {
            "source_name": {
              "type": "string",
              "description": "The source within which the external-reference is defined (system, registry, organization, etc.)",
              "pattern": "^cve$"
            },
            "external_id": {
              "type": "string",
              "description": "An identifier for the external reference content.",
              "pattern": "^CVE-\\d{4}-(0\\d{3}|[1-9]\\d{3,})$"
            }
          },
          "required": [
            "source_name",
            "external_id"
          ]
        },
        {
          "properties": {
            "source_name": {
              "type": "string",
              "description": "The source within which the external-reference is defined (system, registry, organization, etc.)",
              "pattern": "^capec$"
            },
            "external_id": {
              "type": "string",
              "description": "An identifier for the external reference content.",
              "pattern": "^CAPEC-\\d+$"
            }
          },
          "required": [
            "source_name",
            "external_id"
          ]
        },
        {
          "properties": {
            "source_name": {
              "type": "string",
              "description": "The source within which the external-reference is defined (system, registry, organization, etc.)",
              "not": {
                "pattern": "^(cve)|(capec)$"
              }
            },
            "external_id": {
              "type": "string",
              "description": "An identifier for the external reference content.",
              "not": {
                "pattern": "^(CVE-\\d{4}-(0\\d{3}|[1-9]\\d{3,}))|(CAPEC-\\d+)$"
              }
            }
          },
          "required": [
            "source_name"
          ],
          "anyOf": [
            {
              "required": [
                "external_id"
              ]
            },
            {
              "required": [
                "description"
              ]
            },
            {
              "required": [
                "url"
              ]
            }
          ]
        }
      ]
    },
    "..\\common\\url-regex.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "url",
      "description": "Matches the elements of a URL using a regular expression. Uses Diego Perini\u0027s regex from https://gist.github.com/dperini/729294.",
      "type": "string",
      "pattern": "^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z¡-￿0-9]-*)*[a-z¡-￿0-9]+)(?:\\.(?:[a-z¡-￿0-9]-*)*[a-z¡-￿0-9]+)*(?:\\.(?:[a-z¡-￿]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$"
    },
    "..\\common\\granular-marking.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "granular-marking",
      "description": "The granular-marking type defines how the list of marking-definition objects referenced by the marking_refs property to apply to a set of content identified by the list of selectors in the selectors property.",
      "type": "object",
      "properties": {
        "selectors": {
          "type": "array",
          "description": "A list of selectors for content contained within the STIX object in which this property appears.",
          "items": {
            "type": "string",
            "pattern": "^[a-z0-9_-]{3,250}(\\.(\\[\\d+\\]|[a-z0-9_-]{1,250}))*$"
          },
          "minItems": 1
        },
        "marking_ref": {
          "$ref": "#/definitions/..\\common\\identifier.json",
          "pattern": "^marking-definition--",
          "description": "The marking_ref property specifies the ID of the marking-definition object that describes the marking."
        }
      },
      "required": [
        "selectors",
        "marking_ref"
      ]
    }
  }
}