{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "allOf": [
    {
      "$ref": "#/definitions/dataTypeBase.json"
    },
    {
      "required": [
        "method",
        "nickname",
        "parameters"
      ],
      "properties": {
        "method": {
          "enum": [
            "GET",
            "POST",
            "PUT",
            "PATCH",
            "DELETE",
            "OPTIONS",
            "HEAD"
          ]
        },
        "summary": {
          "type": "string",
          "maxLength": 120
        },
        "notes": {
          "type": "string"
        },
        "nickname": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_]+$"
        },
        "authorizations": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/authorizationObject.json_definitions_oauth2Scope"
            }
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parameterObject.json"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/responseMessageObject"
          }
        },
        "produces": {
          "$ref": "#/definitions/mimeTypeArray"
        },
        "consumes": {
          "$ref": "#/definitions/mimeTypeArray"
        },
        "deprecated": {
          "enum": [
            "true",
            "false"
          ]
        }
      }
    }
  ],
  "definitions": {
    "responseMessageObject": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "$ref": "#/definitions/rfc2616section10"
        },
        "message": {
          "type": "string"
        },
        "responseModel": {
          "type": "string"
        }
      }
    },
    "rfc2616section10": {
      "type": "integer",
      "minimum": 100,
      "maximum": 600,
      "exclusiveMaximum": true
    },
    "mimeTypeArray": {
      "type": "array",
      "items": {
        "type": "string",
        "format": "mime-type"
      }
    },
    "dataTypeBase.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "Data type fields (section 4.3.3)",
      "type": "object",
      "oneOf": [
        {
          "required": [
            "type"
          ]
        },
        {
          "required": [
            "$ref"
          ]
        }
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "$ref": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "defaultValue": {
          "not": {
            "type": [
              "array",
              "object",
              "null"
            ]
          }
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "minItems": 1
        },
        "minimum": {
          "type": "string"
        },
        "maximum": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/dataTypeBase.json_definitions_itemsObject"
        },
        "uniqueItems": {
          "type": "boolean"
        }
      },
      "dependencies": {
        "format": {
          "oneOf": [
            {
              "properties": {
                "type": {
                  "enum": [
                    "integer"
                  ]
                },
                "format": {
                  "enum": [
                    "int32",
                    "int64"
                  ]
                }
              }
            },
            {
              "properties": {
                "type": {
                  "enum": [
                    "number"
                  ]
                },
                "format": {
                  "enum": [
                    "float",
                    "double"
                  ]
                }
              }
            },
            {
              "properties": {
                "type": {
                  "enum": [
                    "string"
                  ]
                },
                "format": {
                  "enum": [
                    "byte",
                    "date",
                    "date-time"
                  ]
                }
              }
            }
          ]
        }
      },
      "definitions": {
        "itemsObject": {
          "oneOf": [
            {
              "type": "object",
              "required": [
                "$ref"
              ],
              "properties": {
                "$ref": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "allOf": [
                {
                  "$ref": "#/definitions/dataTypeBase.json"
                },
                {
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {},
                    "format": {}
                  },
                  "additionalProperties": false
                }
              ]
            }
          ]
        }
      }
    },
    "dataTypeBase.json_definitions_itemsObject": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "$ref"
          ],
          "properties": {
            "$ref": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/dataTypeBase.json"
            },
            {
              "required": [
                "type"
              ],
              "properties": {
                "type": {},
                "format": {}
              },
              "additionalProperties": false
            }
          ]
        }
      ]
    },
    "authorizationObject.json_definitions_oauth2Scope": {
      "type": "object",
      "required": [
        "scope"
      ],
      "properties": {
        "scope": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "parameterObject.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/dataTypeBase.json"
        },
        {
          "required": [
            "paramType",
            "name"
          ],
          "properties": {
            "paramType": {
              "enum": [
                "path",
                "query",
                "body",
                "header",
                "form"
              ]
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "required": {
              "type": "boolean"
            },
            "allowMultiple": {
              "type": "boolean"
            }
          }
        },
        {
          "description": "type File requires special paramType and consumes",
          "oneOf": [
            {
              "properties": {
                "type": {
                  "not": {
                    "enum": [
                      "File"
                    ]
                  }
                }
              }
            },
            {
              "properties": {
                "type": {
                  "enum": [
                    "File"
                  ]
                },
                "paramType": {
                  "enum": [
                    "form"
                  ]
                },
                "consumes": {
                  "enum": [
                    "multipart/form-data"
                  ]
                }
              }
            }
          ]
        }
      ]
    }
  }
}