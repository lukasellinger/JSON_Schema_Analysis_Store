{
  "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/observables/x509-certificate.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "x509-certificate",
  "description": "The X509 Certificate Object represents the properties of an X.509 certificate.",
  "type": "object",
  "allOf": [
    {
      "$ref": "#/definitions/..\\common\\cyber-observable-core.json"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "The value of this property MUST be `x509-certificate`.",
          "enum": [
            "x509-certificate"
          ]
        },
        "id": {
          "title": "id",
          "pattern": "^x509-certificate--"
        },
        "is_self_signed": {
          "type": "boolean",
          "description": "Specifies whether the certificate is self-signed, i.e., whether it is signed by the same entity whose identity it certifies."
        },
        "hashes": {
          "$ref": "#/definitions/..\\common\\hashes-type.json",
          "description": "Specifies any hashes that were calculated for the entire contents of the certificate."
        },
        "version": {
          "type": "string",
          "description": "Specifies the version of the encoded certificate."
        },
        "serial_number": {
          "type": "string",
          "description": "Specifies the unique identifier for the certificate, as issued by a specific Certificate Authority."
        },
        "signature_algorithm": {
          "type": "string",
          "description": "Specifies the name of the algorithm used to sign the certificate."
        },
        "issuer": {
          "type": "string",
          "description": "Specifies the name of the Certificate Authority that issued the certificate."
        },
        "validity_not_before": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies the date on which the certificate validity period begins."
        },
        "validity_not_after": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies the date on which the certificate validity period ends."
        },
        "subject": {
          "type": "string",
          "description": "Specifies the name of the entity associated with the public key stored in the subject public key field of the certificate."
        },
        "subject_public_key_algorithm": {
          "type": "string",
          "description": "Specifies the name of the algorithm with which to encrypt data being sent to the subject."
        },
        "subject_public_key_modulus": {
          "type": "string",
          "description": "Specifies the modulus portion of the subject’s public RSA key."
        },
        "subject_public_key_exponent": {
          "type": "integer",
          "description": "Specifies the exponent portion of the subject’s public RSA key, as an integer."
        },
        "x509_v3_extensions": {
          "$ref": "#/definitions/x509-v3-extensions-type",
          "description": "Specifies any standard X.509 v3 extensions that may be used in the certificate."
        }
      }
    },
    {
      "anyOf": [
        {
          "required": [
            "is_self_signed"
          ]
        },
        {
          "required": [
            "hashes"
          ]
        },
        {
          "required": [
            "version"
          ]
        },
        {
          "required": [
            "serial_number"
          ]
        },
        {
          "required": [
            "signature_algorithm"
          ]
        },
        {
          "required": [
            "issuer"
          ]
        },
        {
          "required": [
            "validity_not_before"
          ]
        },
        {
          "required": [
            "validity_not_after"
          ]
        },
        {
          "required": [
            "subject"
          ]
        },
        {
          "required": [
            "subject_public_key_algorithm"
          ]
        },
        {
          "required": [
            "subject_public_key_modulus"
          ]
        },
        {
          "required": [
            "subject_public_key_exponent"
          ]
        },
        {
          "required": [
            "x509_v3_extensions"
          ]
        }
      ]
    }
  ],
  "definitions": {
    "x509-v3-extensions-type": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "basic_constraints": {
              "type": "string",
              "description": "Specifies a multi-valued extension which indicates whether a certificate is a CA certificate."
            },
            "name_constraints": {
              "type": "string",
              "description": "Specifies a namespace within which all subject names in subsequent certificates in a certification path MUST be located."
            },
            "policy_constraints": {
              "type": "string",
              "description": "Specifies any constraints on path validation for certificates issued to CAs."
            },
            "key_usage": {
              "type": "string",
              "description": "Specifies a multi-valued extension consisting of a list of names of the permitted key usages."
            },
            "extended_key_usage": {
              "type": "string",
              "description": "Specifies a list of usages indicating purposes for which the certificate public key can be used for."
            },
            "subject_key_identifier": {
              "type": "string",
              "description": "Specifies the identifier that provides a means of identifying certificates that contain a particular public key."
            },
            "authority_key_identifier": {
              "type": "string",
              "description": "Specifies the identifier that provides a means of identifying the public key corresponding to the private key used to sign a certificate."
            },
            "subject_alternative_name": {
              "type": "string",
              "description": "Specifies the additional identities to be bound to the subject of the certificate."
            },
            "issuer_alternative_name": {
              "type": "string",
              "description": "Specifies the additional identities to be bound to the issuer of the certificate."
            },
            "subject_directory_attributes": {
              "type": "string",
              "description": "Specifies the identification attributes (e.g., nationality) of the subject."
            },
            "crl_distribution_points": {
              "type": "string",
              "description": "Specifies how CRL information is obtained."
            },
            "inhibit_any_policy": {
              "type": "string",
              "description": "Specifies the number of additional certificates that may appear in the path before anyPolicy is no longer permitted."
            },
            "private_key_usage_period_not_before": {
              "$ref": "#/definitions/..\\common\\timestamp.json",
              "description": "Specifies the date on which the validity period begins for the private key, if it is different from the validity period of the certificate."
            },
            "private_key_usage_period_not_after": {
              "$ref": "#/definitions/..\\common\\timestamp.json",
              "description": "Specifies the date on which the validity period ends for the private key, if it is different from the validity period of the certificate."
            },
            "certificate_policies": {
              "type": "string",
              "description": "Specifies a sequence of one or more policy information terms, each of which consists of an object identifier (OID) and optional qualifiers."
            },
            "policy_mappings": {
              "type": "string",
              "description": "Specifies one or more pairs of OIDs; each pair includes an issuerDomainPolicy and a subjectDomainPolicy"
            }
          }
        },
        {
          "anyOf": [
            {
              "required": [
                "basic_constraints"
              ]
            },
            {
              "required": [
                "name_constraints"
              ]
            },
            {
              "required": [
                "policy_constraints"
              ]
            },
            {
              "required": [
                "key_usage"
              ]
            },
            {
              "required": [
                "extended_key_usage"
              ]
            },
            {
              "required": [
                "subject_key_identifier"
              ]
            },
            {
              "required": [
                "authority_key_identifier"
              ]
            },
            {
              "required": [
                "subject_alternative_name"
              ]
            },
            {
              "required": [
                "issuer_alternative_name"
              ]
            },
            {
              "required": [
                "subject_directory_attributes"
              ]
            },
            {
              "required": [
                "crl_distribution_points"
              ]
            },
            {
              "required": [
                "inhibit_any_policy"
              ]
            },
            {
              "required": [
                "private_key_usage_period_not_before"
              ]
            },
            {
              "required": [
                "private_key_usage_period_not_after"
              ]
            },
            {
              "required": [
                "certificate_policies"
              ]
            },
            {
              "required": [
                "policy_mappings"
              ]
            }
          ]
        }
      ]
    },
    "..\\common\\cyber-observable-core.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "cyber-observable-core",
      "description": "Common properties and behavior across all Cyber Observable Objects.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-?$",
          "minLength": 3,
          "maxLength": 250,
          "description": "Indicates that this object is an Observable Object. The value of this property MUST be a valid Observable Object type name, but to allow for custom objects this has been removed from the schema.",
          "not": {
            "enum": [
              "action"
            ]
          }
        },
        "spec_version": {
          "type": "string",
          "enum": [
            "2.0",
            "2.1"
          ],
          "description": "The version of the STIX specification used to represent the content in this cyber-observable."
        },
        "object_marking_refs": {
          "type": "array",
          "description": "The list of marking-definition objects to be applied to this object.",
          "items": {
            "$ref": "#/definitions/..\\common\\identifier.json"
          },
          "minItems": 1
        },
        "granular_markings": {
          "type": "array",
          "description": "The set of granular markings that apply to this object.",
          "items": {
            "$ref": "#/definitions/..\\common\\granular-marking.json"
          },
          "minItems": 1
        },
        "defanged": {
          "type": "boolean",
          "description": "Defines whether or not the data contained within the object has been defanged."
        },
        "id": {
          "$ref": "#/definitions/..\\common\\identifier.json",
          "description": "Specifies the identifier of the observable object, as a string."
        },
        "extensions": {
          "description": "Specifies any extensions of the object, as a dictionary.",
          "type": "object",
          "minProperties": 1,
          "patternProperties": {
            "^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-ext$": {
              "type": "object",
              "minProperties": 1,
              "allOf": [
                {
                  "$ref": "#/definitions/..\\common\\properties.json"
                }
              ]
            },
            "^extension-definition--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
              "allOf": [
                {
                  "$ref": "#/definitions/..\\common\\extension.json"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\properties.json"
        }
      ],
      "not": {
        "anyOf": [
          {
            "required": [
              "severity"
            ]
          },
          {
            "required": [
              "action"
            ]
          },
          {
            "required": [
              "username"
            ]
          },
          {
            "required": [
              "phone_numbers"
            ]
          }
        ]
      },
      "required": [
        "type",
        "id"
      ]
    },
    "..\\common\\identifier.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "identifier",
      "description": "Represents identifiers across the CTI specifications. The format consists of the name of the top-level object being identified, followed by two dashes (--), followed by a UUIDv4.",
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]+[a-z0-9]--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    },
    "..\\common\\granular-marking.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "granular-marking",
      "description": "The granular-marking type defines how the list of marking-definition objects referenced by the marking_refs property to apply to a set of content identified by the list of selectors in the selectors property.",
      "type": "object",
      "properties": {
        "selectors": {
          "type": "array",
          "description": "A list of selectors for content contained within the STIX object in which this property appears.",
          "items": {
            "type": "string",
            "pattern": "^([a-z0-9_-]{3,249}(\\.(\\[\\d+\\]|[a-z0-9_-]{1,250}))*|id)$"
          },
          "minItems": 1
        },
        "lang": {
          "type": "string",
          "description": "Identifies the language of the text identified by this marking."
        },
        "marking_ref": {
          "allOf": [
            {
              "$ref": "#/definitions/..\\common\\identifier.json"
            },
            {
              "pattern": "^marking-definition--",
              "description": "The marking_ref property specifies the ID of the marking-definition object that describes the marking."
            }
          ]
        }
      },
      "required": [
        "selectors",
        "marking_ref"
      ]
    },
    "..\\common\\properties.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "properties",
      "description": "Rules for custom properties",
      "patternProperties": {
        "^[a-z][a-z0-9_]{0,245}_bin$": {
          "$ref": "#/definitions/..\\common\\binary.json"
        },
        "^[a-z][a-z0-9_]{0,245}_hex$": {
          "$ref": "#/definitions/..\\common\\hex.json"
        },
        "^([a-z][a-z0-9_]{2,249})|id$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "..\\common\\binary.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "binary",
      "description": "The ​binary data type represents a sequence of bytes. In order to allow pattern matching on custom objects, for all properties that use the binary type, the property name MUST end with \u0027_bin\u0027. The JSON MTI serialization represents this as a base64-­encoded string as specified in RFC4648​. Other serializations SHOULD use a native binary type, if available.",
      "type": "string",
      "pattern": "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}\u003d|[A-Za-z0-9+/]{2}\u003d\u003d)$"
    },
    "..\\common\\hex.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "hex",
      "description": "The hex data type encodes an array of octets (8-bit bytes) as hexadecimal. The string MUST consist of an even number of hexadecimal characters, which are the digits \u00270\u0027 through \u00279\u0027 and the letters \u0027a\u0027 through \u0027f\u0027.  In order to allow pattern matching on custom objects, all properties that use the hex type, the property name MUST end with \u0027_hex\u0027.",
      "type": "string",
      "pattern": "^([a-fA-F0-9]{2})+$"
    },
    "..\\common\\extension.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "extension_type": {
          "description": "The type of extension.",
          "$ref": "#/definitions/..\\common\\extension.json_definitions_extension-type-enum"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\properties.json"
        }
      ],
      "required": [
        "extension_type"
      ],
      "definitions": {
        "extension-type-enum": {
          "type": "string",
          "enum": [
            "new-sdo",
            "new-sco",
            "new-sro",
            "property-extension",
            "toplevel-property-extension"
          ]
        }
      }
    },
    "..\\common\\extension.json_definitions_extension-type-enum": {
      "type": "string",
      "enum": [
        "new-sdo",
        "new-sco",
        "new-sro",
        "property-extension",
        "toplevel-property-extension"
      ]
    },
    "..\\common\\hashes-type.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "hashes",
      "description": "The Hashes type represents one or more cryptographic hashes, as a special set of key/value pairs",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\dictionary.json"
        }
      ],
      "patternProperties": {
        "^[a-zA-Z0-9_-]{3,250}$": {
          "type": "string",
          "description": "Custom hash key"
        },
        "^MD5$": {
          "type": "string",
          "description": "Specifies the MD5 message digest algorithm.",
          "pattern": "^[a-fA-F0-9]{32}$"
        },
        "^SHA-1$": {
          "type": "string",
          "description": "Specifies the SHA-1 (secure-hash algorithm 1) cryptographic hash function.",
          "pattern": "^[a-fA-F0-9]{40}$"
        },
        "^SHA-256$": {
          "type": "string",
          "description": "Specifies the SHA-256 cryptographic hash function (part of the SHA2 family).",
          "pattern": "^[a-fA-F0-9]{64}$"
        },
        "^SHA-512$": {
          "type": "string",
          "description": "Specifies the SHA-512 cryptographic hash function (part of the SHA2 family).",
          "pattern": "^[a-fA-F0-9]{128}$"
        },
        "^SHA3-256$": {
          "type": "string",
          "description": "Specifies the SHA3-256 cryptographic hash function.",
          "pattern": "^[a-fA-F0-9]{64}$"
        },
        "^SHA3-512$": {
          "type": "string",
          "description": "Specifies the SHA3-512 cryptographic hash function.",
          "pattern": "^[a-fA-F0-9]{128}$"
        },
        "^SSDEEP$": {
          "type": "string",
          "description": "Specifies the ssdeep fuzzy hashing algorithm.",
          "pattern": "^[a-zA-Z0-9/+:.]{1,128}$"
        },
        "^TLSH$": {
          "type": "string",
          "description": "Specifies the TLSH locality-sensitive hashing algorithm.",
          "pattern": "^[a-zA-Z0-9]{70}$"
        }
      },
      "additionalProperties": false
    },
    "..\\common\\dictionary.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "dictionary",
      "description": "A dictionary captures a set of key/value pairs",
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        "^[a-zA-Z0-9_-]{0,250}$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "..\\common\\timestamp.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "timestamp",
      "description": "Represents timestamps across the CTI specifications. The format is an RFC3339 timestamp, with a required timezone specification of \u0027Z\u0027.",
      "type": "string",
      "pattern": "^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?Z$"
    }
  }
}