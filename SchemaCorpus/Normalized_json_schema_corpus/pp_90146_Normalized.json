{
  "title": "visualVariable",
  "type": "object",
  "$schema": "http://json-schema.org/draft-04/schema",
  "description": "An object used to set rendering options. Please see the individual visual variable for specific information on how it is used.",
  "oneOf": [
    {
      "$ref": "#/definitions/colorInfo_visualVariable_schema.json"
    },
    {
      "$ref": "#/definitions/rotationInfo_visualVariable_schema.json"
    },
    {
      "$ref": "#/definitions/sizeInfo_visualVariable_schema.json"
    },
    {
      "$ref": "#/definitions/transparencyInfo_visualVariable_schema.json"
    }
  ],
  "definitions": {
    "colorInfo_visualVariable_schema.json": {
      "title": "ColorInfo Visual Variable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The colorInfo visual variable defines how a continuous color ramp is applied to features based on the values of a numeric field attribute.",
      "properties": {
        "field": {
          "type": "string",
          "description": "Attribute field used for color rendering if no valueExpression is provided."
        },
        "legendOptions": {
          "type": "object",
          "$ref": "#/definitions/visualVariableLegendOptions_schema.json"
        },
        "normalizationField": {
          "type": "string",
          "description": "Attribute field used to normalize the data."
        },
        "stops": {
          "type": "array",
          "description": "An array of stop objects.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/colorStop_schema.json"
          }
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of visual variable.",
          "enum": [
            "colorInfo"
          ]
        },
        "valueExpression": {
          "type": "string",
          "description": "An [Arcade expression](https://developers.arcgis.com/arcade/) that computes a value in lieu of a value provided by an attribute `field`."
        },
        "valueExpressionTitle": {
          "type": "string",
          "description": "The title identifying and describing the associated [Arcade](https://developers.arcgis.com/arcade/) expression as defined in the `valueExpression` property."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "colorInfo",
            "description": "Live sample web scene showing [use of the colorInfo visual variable](https://www.arcgis.com/home/webscene/viewer.html?webscene\u003ded2892fef34b43b8a5cc61c8ff890c6f).",
            "code": {
              "visualVariables": [
                {
                  "type": "colorInfo",
                  "field": "M086_07",
                  "stops": [
                    {
                      "value": -99,
                      "color": [
                        255,
                        252,
                        212,
                        255
                      ],
                      "label": "\u003c -99"
                    },
                    {
                      "value": 705950,
                      "color": [
                        177,
                        205,
                        194,
                        255
                      ]
                    },
                    {
                      "value": 1411999,
                      "color": [
                        98,
                        158,
                        176,
                        255
                      ],
                      "label": "1,411,999"
                    },
                    {
                      "value": 2578189,
                      "color": [
                        56,
                        98,
                        122,
                        255
                      ]
                    },
                    {
                      "value": 3744380,
                      "color": [
                        13,
                        38,
                        68,
                        255
                      ],
                      "label": "\u003e 3,744,380"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "visualVariableLegendOptions_schema.json": {
      "title": "Visual Variable Legend Options",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Options available for the legend for visual variables.",
      "properties": {
        "showLegend": {
          "type": "boolean",
          "description": "Indicates whether to show the color/size/opacity ramp in the legend."
        },
        "title": {
          "type": "string",
          "description": "The title of the legend."
        }
      }
    },
    "colorStop_schema.json": {
      "title": "colorStop",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "A colorStop object describes the renderer\u0027s color ramp with more specificity than just colors.",
      "properties": {
        "color": {
          "description": "A CSS color string or an array of rbga values. The color to place at the stop indicated by either a ratio or value.",
          "$ref": "#/definitions/color_schema.json"
        },
        "label": {
          "type": "string",
          "description": "Value if a label is needed on the legend for a stop."
        },
        "value": {
          "type": "number",
          "description": "The pixel intensity value. Describes the pixel intensity value that the color should be associated with. Just like in colorInfo, using value will ignore `maxPixelIntensity` and `minPixelIntensity` properties. It will actually set those properties to maximum and minimum values you set in the colorStops array. The hard values are converted to ratios to create the color gradient that is used in the heatmap calculations. Setting `minPixelIntensity` or `maxPixelIntensity`, after setting colorStops with values, removes the hard link between the color ramp and the pixel intensity values that were used to create it."
        }
      },
      "required": [
        "color",
        "value"
      ],
      "esriDocumentation": {
        "examples": [
          {
            "title": "colorStops",
            "code": {
              "stop": {
                "value": 8035,
                "color": [
                  255,
                  252,
                  212,
                  255
                ],
                "label": "\u003c 8,035"
              }
            }
          }
        ]
      }
    },
    "color_schema.json": {
      "title": "color",
      "type": "array",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Color is represented as a three or four-element array. The four elements represent values for red, green, blue, and alpha in that order. Values range from 0 through 255. If color is undefined for a symbol, the color value is null.",
      "items": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "minItems": 3,
      "maxItems": 4,
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "color",
            "code": {
              "color": [
                13,
                38,
                68,
                255
              ]
            }
          }
        ]
      }
    },
    "rotationInfo_visualVariable_schema.json": {
      "title": "RotationInfo Visual Variable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The rotation visual variable defines how features rendered with marker symbols are rotated. The rotation value is determined by a value in a field or an Arcade expression calculating a value. Use either the `field` property or `valueExpression` when specifying rotation values.",
      "properties": {
        "axis": {
          "type": "string",
          "description": "Defines the rotation axis the visual variable should be applied to when rendering features with an ObjectSymbol3DLayer. [Detailed description](static/objectSymbolLayerOrientation.md).",
          "enum": [
            "heading",
            "tilt",
            "roll"
          ],
          "default": "heading"
        },
        "field": {
          "type": "string",
          "description": "Attribute field used for setting the rotation of a symbol if no `valueExpression` is provided."
        },
        "legendOptions": {
          "type": "object",
          "$ref": "#/definitions/visualVariableLegendOptions_schema.json"
        },
        "rotationType": {
          "type": "string",
          "description": "Defines the origin and direction of rotation depending on how the angle of rotation was measured. Possible values are `geographic` which rotates the symbol from the north in a clockwise direction and `arithmetic` which rotates the symbol from the east in a counter-clockwise direction.",
          "enum": [
            "geographic",
            "arithmetic"
          ],
          "default": "geographic"
        },
        "type": {
          "type": "string",
          "description": "A string value indicating the type of visual variable used for the renderer.",
          "enum": [
            "rotationInfo"
          ]
        },
        "valueExpression": {
          "type": "string",
          "description": "An [Arcade expression](https://developers.arcgis.com/arcade/) evaluating to a number."
        },
        "valueExpressionTitle": {
          "type": "string",
          "description": "The title identifying and describing the associated [Arcade expression] (https://developers.arcgis.com/arcade/) as defined in the `valueExpression` property."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "RotationInfo Visual Variable",
            "description": "Live sample web scene showing [use of the rotationInfo visual variable](https://www.arcgis.com/home/webscene/viewer.html?webscene\u003d30973f38dc5f4e019bf7f4926abd1571).",
            "code": {
              "visualVariables": [
                {
                  "type": "rotationInfo",
                  "rotationType": "geographic",
                  "field": "WIND_DIRECT"
                }
              ]
            }
          }
        ]
      }
    },
    "sizeInfo_visualVariable_schema.json": {
      "title": "SizeInfo Visual Variable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The sizeInfo visual variable defines how size is applied to features based on the values of a numeric field attribute. The minimum and maximum values of the data should be indicated along with their respective size values. You must specify either `minSize` and `maxSize`, or `stops`, or `valueUnit` to construct the size ramp. All features with values falling in between the specified min and max data values (or stops) will be scaled proportionally between the provided min and max sizes.",
      "properties": {
        "axis": {
          "type": "string",
          "description": "Defines the axis the size visual variable should be applied to when rendering features with an ObjectSymbol3DLayer.",
          "enum": [
            "width",
            "height",
            "depth",
            "widthAndDepth",
            "all"
          ]
        },
        "field": {
          "type": "string",
          "description": "Attribute field used for size rendering if no valueExpression is provided."
        },
        "legendOptions": {
          "type": "object",
          "$ref": "#/definitions/visualVariableLegendOptions_schema.json"
        },
        "maxDataValue": {
          "type": "number",
          "description": "The maximum data value."
        },
        "maxSize": {
          "type": "number",
          "description": "Specifies the maximum size to be applied to the symbol. This is required if valueUnit is set to `unknown`."
        },
        "minDataValue": {
          "type": "number",
          "description": "The minimum data value."
        },
        "minSize": {
          "type": "number",
          "description": "Specifies the minimum size to be applied to the symbol. This is required if valueUnit is set to `unknown`."
        },
        "normalizationField": {
          "type": "string",
          "description": "Attribute field used to normalize the data."
        },
        "stops": {
          "type": "array",
          "description": "An array of objects that defines the thematic size ramp in a sequence of data or expression stops. At least two stops are required. The stops must be listed in ascending order based on the value of the `value` property in each stop. This property is required if `minDataValue`, `maxDataValue`, `minSize`, and `maxSize` are not defined.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/sizeStop_schema.json"
          }
        },
        "target": {
          "type": "string",
          "description": "Only used when sizeInfo is used for polygon outlines.",
          "enum": [
            "outline"
          ]
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of visual variable.",
          "enum": [
            "sizeInfo"
          ]
        },
        "useSymbolValue": {
          "type": "boolean",
          "description": "When setting a size visual variable on a renderer using an ObjectSymbol3DLayer, this property indicates whether to apply the value defined by the height, width, or depth properties to the corresponding axis of this visual variable instead of proportionally scaling this axis\u0027 value after other axes."
        },
        "valueExpression": {
          "type": "string",
          "description": "An [Arcade expression](https://developers.arcgis.com/arcade/) evaluating to a number."
        },
        "valueExpressionTitle": {
          "type": "string",
          "description": "The title identifying and describing the associated [Arcade](https://developers.arcgis.com/arcade/) expression as defined in the `valueExpression` property."
        },
        "valueRepresentation": {
          "type": "string",
          "description": "Specifies how to apply the data value when mapping real-world sizes. See table below for supported values.",
          "enum": [
            "radius",
            "diameter",
            "area",
            "width",
            "distance"
          ]
        },
        "valueUnit": {
          "type": "string",
          "description": "A string value indicating the unit of measurement. Defaults to `meters` if not set.",
          "enum": [
            "unknown",
            "inches",
            "feet",
            "yards",
            "miles",
            "nautical-miles",
            "millimeters",
            "centimeters",
            "decimeters",
            "meters",
            "kilometers",
            "decimal-degrees"
          ]
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "sizeInfo",
            "description": "Live sample web scene showing [use of the sizeInfo visual variable](https://www.arcgis.com/home/webscene/viewer.html?webscene\u003ded2892fef34b43b8a5cc61c8ff890c6f).",
            "code": {
              "visualVariables": [
                {
                  "type": "sizeInfo",
                  "field": "Deaths",
                  "axis": "all",
                  "minSize": 6,
                  "maxSize": 37,
                  "minDataValue": 2814,
                  "maxDataValue": 121179
                }
              ]
            }
          },
          {
            "title": "sizeInfo with stops",
            "code": {
              "visualVariables": [
                {
                  "type": "sizeInfo",
                  "field": "Deaths",
                  "stops": [
                    {
                      "value": 2814,
                      "size": 6
                    },
                    {
                      "value": 121179,
                      "size": 37
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "sizeStop_schema.json": {
      "title": "sizeStop",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "A `sizeStop` object describes the size of the symbol at various values of the expression.",
      "properties": {
        "size": {
          "type": "number",
          "description": "Specifies the marker size to use for the specified value."
        },
        "value": {
          "type": "number",
          "description": "The value to be mapped to a size."
        }
      },
      "required": [
        "size",
        "value"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "code": {
              "stop": {
                "value": 0,
                "size": 255
              }
            }
          }
        ]
      }
    },
    "transparencyInfo_visualVariable_schema.json": {
      "title": "TransparencyInfo Visual Variable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The transparencyInfo visual variable defines the transparency, or opacity, of each feature\u0027s symbol based on a numeric attribute field value.",
      "properties": {
        "field": {
          "type": "string",
          "description": "Attribute field used for setting the transparency of a feature if no `valueExpression` is provided."
        },
        "legendOptions": {
          "type": "object",
          "$ref": "#/definitions/visualVariableLegendOptions_schema.json"
        },
        "normalizationField": {
          "type": "string",
          "description": "Attribute field used to normalize the data."
        },
        "stops": {
          "type": "array",
          "description": "An array of transparencyStop objects.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/transparencyStop_schema.json"
          }
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of visual variable.",
          "enum": [
            "transparencyInfo"
          ]
        },
        "valueExpression": {
          "type": "string",
          "description": "An [Arcade expression](https://developers.arcgis.com/arcade/) evaluating to a number."
        },
        "valueExpressionTitle": {
          "type": "string",
          "description": "The title identifying and describing the associated [Arcade](https://developers.arcgis.com/arcade/) expression as defined in the `valueExpression` property."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "transparencyInfo",
            "description": "Live sample web scene showing [use of the transparencyInfo visual variable](https://www.arcgis.com/home/webscene/viewer.html?webscene\u003d593dc1e98a1d447fb09b09d486355ef0).",
            "code": {
              "visualVariables": [
                {
                  "type": "transparencyInfo",
                  "field": "strength",
                  "stops": [
                    {
                      "value": 21,
                      "transparency": 60
                    },
                    {
                      "value": 39,
                      "transparency": 10
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "transparencyStop_schema.json": {
      "title": "transparencyStop",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The transparencyStop object defines the thematic opacity ramp in a sequence of stops. At least two stops are required. The stops must be listed in ascending order based on the value of the `value` property in each stop.",
      "properties": {
        "label": {
          "type": "string",
          "description": "A string value used to label the stop in the legend."
        },
        "transparency": {
          "type": "integer",
          "description": "A numeric transparancy value for a stop ranging from 0-100, where 0 is opaque and 100 is 100% transparent.",
          "minimum": 0,
          "maximum": 100
        },
        "value": {
          "type": "number",
          "description": "The pixel intensity value. Describes the pixel intensity value that the color should be associated with."
        }
      },
      "required": [
        "transparency",
        "value"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "code": {
              "stop": {
                "value": 0,
                "transparency": 50
              }
            }
          }
        ]
      }
    }
  }
}