{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://schemas.digitallinguistics.io/Utterance-5.0.0.json",
  "title": "Utterance",
  "type": "object",
  "description": "The term *utterance* is intentionally ambiguous, and refers to any unit of a text above the word level. The DLx framework imposes no requirements regarding this size of this unit or how segmentation of the text into units should be accomplished. The user may choose to segment a text based on prosodic units, turns, sentences, or any other appropriate subdivision.",
  "required": [
    "transcription",
    "translation"
  ],
  "dependencies": {
    "startTime": [
      "endTime"
    ],
    "endTime": [
      "startTime"
    ]
  },
  "additionalProperties": true,
  "properties": {
    "type": {
      "title": "Type",
      "type": "string",
      "const": "Utterance",
      "readOnly": true,
      "description": "The type of object. Must be set to `Utterance`."
    },
    "key": {
      "title": "Key",
      "type": "string",
      "pattern": "^[(a-z)|(A-Z)|(0-9)]+[-_\\.][0-9]{1,3}$",
      "description": "A key which uniquely identifies this Utterance within the Text. The key for an Utterance consists of the abbreviation of the Text, a period, dash, or underscore, and then the number of this Utterance within the Text (index starts at 1). For example, the third Utterance of a Text with the abbreviation `A` would be `A.3`. Keys should be unique within a corpus."
    },
    "endTime": {
      "title": "End Time",
      "type": "number",
      "minimum": 0.001,
      "description": "The time that the speaker finishes producing this Utterance within the media file(s) associated with this Text. The timestamp should be formatted in SS.MMM (seconds and milliseconds)."
    },
    "judgments": {
      "title": "Grammaticality \u0026 Acceptability judgments",
      "type": "array",
      "uniqueItems": true,
      "description": "An array of grammaticality judgments or acceptability judgments for this utterance.",
      "items": {
        "title": "Grammaticality / Acceptability judgment",
        "type": "object",
        "description": "A judgment of the grammaticality or acceptability of the utterance. Some linguists distinguish between grammaticality and acceptability, such that some utterances may be considered grammatical but not acceptable. Unacceptable utterances are typically those which are semantically or pragmatically odd in context. It is strongly recommended that a note be included with each judgment, and the source of the judgment indicated in the note.",
        "required": [
          "judgment",
          "judgmentType"
        ],
        "additionalProperties": false,
        "properties": {
          "judgment": {
            "title": "Grammaticality / Acceptability judgment",
            "type": "number",
            "description": "The grammaticality / acceptability judgment for this utterance, represented as a value between 0 (completely ungrammatical / unacceptable) and 1 (completely grammatical / acceptable). Simple binary judgments (\"good\" vs. \"bad\", \"grammatical\" vs. \"ungrammatical\") can simply use the values `0` and `1`. Scalar judgments should be normalized to a value between `0` and `1`. For example, a scale of 1-3 asterisks for grammaticality could be represented as follows: `0.00` \u003d `***`, `0.33` \u003d `**`, `0.66` \u003d `*`, `1.00` \u003d completely grammatical."
          },
          "judgmentType": {
            "title": "judgment Type",
            "type": "string",
            "description": "Indicates whether the judgment is an `acceptability` judgment or a `grammaticality` judgment.",
            "enum": [
              "acceptability",
              "grammaticality"
            ]
          },
          "note": {
            "title": "judgment Note",
            "type": "object",
            "$ref": "#/definitions/Note-5.0.0.json",
            "description": "A note about this judgment. It is strongly recommended that every judgment be accompanied by a note, indicating the speaker / source of the judgment, and if possible an explanation for unacceptable or ungrammatical judgments."
          }
        }
      }
    },
    "language": {
      "title": "Language",
      "type": "string",
      "$ref": "#/definitions/Abbreviation-2.1.0.json",
      "description": "The key for the Language used in this Utterance, e.g. `spa` or `eng`. If the text is labeled with a Language, all its Utterance are assumed to be the same Language unless labeled otherwise. Likewise, if a Utterance is given a Language, all its words are assumed to be the same Language unless the word is labeled otherwise."
    },
    "link": {
      "title": "Link",
      "type": "string",
      "format": "uri",
      "description": "A URL where a presentational format for this resource may be viewed"
    },
    "literal": {
      "title": "Literal Translation",
      "type": "object",
      "$ref": "#/definitions/Translation-3.0.0.json",
      "description": "The literal translations for this Utterance, optionally in multiple languages."
    },
    "phonetic": {
      "title": "Phonetic",
      "type": "string",
      "description": "The phonetic transcription for this Utterance in IPA. Only valid IPA characters are allowed. The transcription should not include phonetic brackets."
    },
    "notes": {
      "title": "Notes",
      "type": "array",
      "uniqueItems": true,
      "description": "A collection of notes about this Utterance",
      "items": {
        "title": "Note",
        "type": "object",
        "$ref": "#/definitions/Note-5.0.0.json",
        "description": "A note about this Utterance"
      }
    },
    "speaker": {
      "title": "Speaker",
      "type": "object",
      "$ref": "#/definitions/Person-4.3.0.json",
      "description": "The Person who produced (uttered, signed, spoke, sung) this Utterance. The value of this field must match one of the people listed in the `contributors` array of the Text. If the text has a single contributor with the role of `speaker`, that speaker is assumed to be the speaker for all Utterances in the Text. If multiple contributors with a `speaker` role are included in a text, each Utterance must have its `speaker` attribute specified."
    },
    "source": {
      "title": "Source",
      "type": "object",
      "$ref": "#/definitions/Citation-1.0.0.json",
      "description": "A citation to the publication where this utterance was taken from. When the utterance is not part of a text, or when the text consists of random utterances taken from different places, this field is strongly recommended."
    },
    "startTime": {
      "title": "Start Time",
      "type": "number",
      "minimum": 0,
      "description": "The time that the speaker begins producing this Utterance within the media file(s) associated with this Text. The timestamp should be formatted in SS.MMM (seconds and milliseconds)."
    },
    "tags": {
      "title": "Tags",
      "type": "object",
      "$ref": "#/definitions/Tags-2.1.0.json",
      "description": "A set of tags for this Utterance"
    },
    "transcript": {
      "title": "Transcript",
      "type": "object",
      "minProperties": 1,
      "$ref": "#/definitions/Transcription-2.1.0.json",
      "description": "A transcript of this Utterance, including things like prosodic markup, overlap, pauses, and various other discourse features. This field is intended for use by those doing discourse or conversation analysis, who need to mark up their text without affecting the phonemic transcription (in the `transcription` property). The transcript may be in multiple orthographies, or representational systems (e.g. you might have a `CA` transcript and a `DT` transcript, for discourse transcripts using Conversation Analysis and Discourse Transcription conventions respectively)."
    },
    "transcription": {
      "title": "Transcription",
      "type": "object",
      "minProperties": 1,
      "$ref": "#/definitions/Transcription-2.1.0.json",
      "description": "The transcriptions for this Utterance, optionally in multiple orthographies. This field is intended for use with purely phonemic / morphophonemic transcriptions. Punctuation should generally be avoided. To add punctuation and other discourse-level transcriptional features, use the `transcript` property. The transcription must be provided in at least one orthography."
    },
    "translation": {
      "title": "Translation",
      "type": "object",
      "$ref": "#/definitions/Translation-3.0.0.json",
      "description": "The free translations for this Utterance, optionally in multiple languages. The translation must be provided in at least one language."
    },
    "url": {
      "title": "URL",
      "type": "string",
      "format": "uri",
      "description": "The URL where this Utterance can be retrieved in JSON format"
    },
    "words": {
      "title": "Words",
      "type": "array",
      "uniqueItems": false,
      "description": "A collection of the word tokens contained in this Utterance. Tokens do not need to be unique.",
      "items": {
        "title": "Word",
        "type": "object",
        "$ref": "#/definitions/Word-4.3.0.json",
        "description": "A Word object"
      }
    }
  },
  "examples": [
    {
      "judgments": [
        {
          "judgment": 0.66,
          "judgmentType": "acceptability",
          "note": {
            "source": {
              "abbreviation": "BP"
            },
            "text": "Speaker B found this utterance odd because the first two words were contracted."
          }
        }
      ],
      "literal": {
        "eng": "one day a man"
      },
      "phonetic": "waʃtˀunkˀu ʔasi",
      "speaker": {
        "familyName": "Paul",
        "givenName": "Benjamin"
      },
      "source": {
        "citationKey": "Swadesh1946"
      },
      "transcript": {
        "Mod": "Waxdungu qasi,"
      },
      "transcription": {
        "Mod": "waxdungu qasi"
      },
      "translation": {
        "eng": "One day a man,"
      },
      "words": []
    }
  ],
  "definitions": {
    "Note-5.0.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Note",
      "type": "object",
      "description": "A note about this resource. Notes may also include `type` and `language` attributes.",
      "required": [
        "text"
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "const": "Note",
          "readOnly": true,
          "description": "The type of object. Must be set to `Note`."
        },
        "dateCreated": {
          "title": "Date Created",
          "type": "string",
          "description": "The date and optionally time that this note was created",
          "oneOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "dateModified": {
          "title": "Date Modified",
          "type": "string",
          "description": "The date and optionally time that this note was last modified",
          "oneOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "language": {
          "title": "Note Language",
          "type": "string",
          "description": "A language code or language name of the language that this note is written in. Assumed to be English if not otherwise specified."
        },
        "noteType": {
          "title": "Note Type",
          "type": "string",
          "description": "The type of Note. Required for notes on Lexemes."
        },
        "source": {
          "title": "Source (Person - Database Reference)",
          "type": "object",
          "$ref": "#/definitions/DatabaseReference-4.3.0.json",
          "referenceType": "Person",
          "description": "A database reference to a Person object describing the person who is the source of the information in this Note. This is not necessarily the person who wrote it. For example, a linguist could make a note based on something that a speaker reports, in which case the speaker should be listed as the source."
        },
        "tags": {
          "title": "Tags",
          "type": "object",
          "$ref": "#/definitions/Tags-2.1.0.json",
          "description": "A set of tags that apply to this Note. Useful for tagging notes that need review or responses, or marking a note as resolved."
        },
        "text": {
          "title": "Note Text",
          "type": "string",
          "minLength": 1,
          "description": "The text of the note itself"
        }
      },
      "examples": [
        {
          "dateCreated": "2018-10-31T18:00:09.433Z",
          "dateModified": "2018-10-31T18:00:23.691Z",
          "language": "swa",
          "source": {
            "abbreviation": "DWH"
          },
          "text": "Msemaji huyu ni Janet Kerubo Momanyi.",
          "type": "Note"
        },
        {
          "dateCreated": "2018-10-31T18:00:09.433Z",
          "dateModified": "2018-10-31T18:00:23.691Z",
          "language": "eng",
          "noteType": "encyclopedic",
          "source": {
            "name": "Morris Swadesh"
          },
          "text": "Box turtles are known for eating strawberries.",
          "type": "Note"
        }
      ]
    },
    "DatabaseReference-4.3.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Database Reference",
      "type": "object",
      "description": "A reference to an item in a database, used when you wish to store an item separately in the database (following a relational database model), rather than inline. A disadvantage of this approach is that it often requires making multiple database calls. To avoid this, in most cases the actual object can be used instead of a database reference. For example, instead of making a reference to a separate Person file, you can simply include the Person object directly in place of the database reference. This is useful when you don\u0027t want to deal with cross references and multiple database calls. In this case, it is often a good idea to include just a minimal set of data. For a person, for example, you might include just the ID, abbreviation, family name, and given name. This prevents you from having to replicate all of the data about that Person each time it is used.",
      "additionalProperties": true,
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "const": "DatabaseReference",
          "readOnly": true,
          "description": "The type of object. Must be set to `DatabaseReference`."
        },
        "abbreviation": {
          "title": "Referenced Abbreviation",
          "type": "string",
          "$ref": "#/definitions/Abbreviation-2.1.0.json",
          "description": "The abbreviation of the referenced database item."
        },
        "id": {
          "title": "Referenced ID",
          "description": "The ID of the referenced database item"
        },
        "filename": {
          "title": "Filename",
          "type": "string",
          "description": "If the reference database item is a media item, use this field for the name of the referenced file."
        },
        "index": {
          "title": "Referenced Index",
          "type": "integer",
          "minimum": 1,
          "description": "The index of the referenced database item. Indexes should start at 1 rather than 0 to increase human readability."
        },
        "key": {
          "title": "Referenced Key",
          "type": "string",
          "pattern": "^[^\\s]+$",
          "description": "The key of the referenced database item"
        },
        "name": {
          "title": "Name",
          "$ref": "#/definitions/MultiLangString-5.0.0.json",
          "description": "The name of the referenced database item, optionally in multiple languages."
        },
        "referenceType": {
          "title": "Referenced Item Type",
          "type": "string",
          "description": "The type of database item being referenced",
          "enum": [
            "BibliographicReference",
            "Bundle",
            "Language",
            "Lexeme",
            "Location",
            "Media",
            "Morpheme",
            "Orthography",
            "Person",
            "Sense",
            "Text",
            "Utterance",
            "Word"
          ]
        },
        "url": {
          "title": "Referenced URL",
          "type": "string",
          "format": "uri",
          "description": "The URL of the referenced database item"
        }
      },
      "examples": [
        {
          "index": 2,
          "referenceType": "Utterance",
          "type": "DatabaseReference",
          "url": "https://api.digitallinguistics.io/languages/Chitimacha/texts/A1/utterances/2"
        },
        {
          "key": "Omoiseke",
          "name": "Ómoíséké ósokérété chíséese",
          "referenceType": "Text",
          "type": "DatabaseReference",
          "url": "https://api.digitallinguistics.io/languages/Gusii/texts/Omoiseke"
        }
      ]
    },
    "Abbreviation-2.1.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Abbreviation",
      "type": "string",
      "pattern": "^[(a-z)|(A-Z)|(0-9)]+$",
      "description": "A human-readable abbreviation, containing on letters `a-z`, `A-Z`, and numbers `0-9` (no spaces allowed).",
      "examples": [
        "chiti",
        "ctm"
      ]
    },
    "MultiLangString-5.0.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Multi-Language Text / String",
      "description": "A piece of text in multiple languages. This is typically used for analyses, database properties, and information in metalanguages rather than transcriptions or translations of data (for those, see the [Transcription](https://spec.digitallinguistics.github.io/schemas/Transcription.html) and [Translation](https://spec.digitallinguistics.github.io/schemas/Translation.html) schemas). For example, the part of speech for a lexeme might be given as both English *noun* and Spanish *nombre*. Each key must be a valid IETF language tag for a language (see the [IETF](https://www.w3.org/International/articles/language-tags/) reference page), and the value for that key must be the string of text in that language. **Note:** MultiLangStrings do not have a `type` property.\n\nIf the text is in only one language and that language is English, it may be represented as a simple string instead of an object. Thus instead of `gloss: { en: \"M.SG\" }` you can simply write `gloss: \"M.SG\"`.",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^(((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+))$": {
              "title": "Text",
              "type": "string",
              "description": "The string of text in the specified language"
            }
          }
        },
        {
          "type": "string"
        }
      ],
      "examples": [
        "man",
        {
          "en": "man",
          "fr": "homme"
        }
      ]
    },
    "Tags-2.1.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Tags",
      "type": "object",
      "description": "A tag is a piece of metadata that can be applied to almost any DLx object. The tags object contains a set of tags for this resource as pairs of attributes and values. For example, a researcher might tag a suffix with the attribute `person`, and a value of `3`, to indicate that the particular suffix is 3rd Person. If no value is needed, the value may also be set to `true` or `false` (but not `null`), however users are encouraged to use both attribute and value for every tag, since this helps identify the larger category that the tag value belongs to. Note: The Tags object does not have a `type` property.",
      "additionalProperties": {
        "title": "Tag",
        "description": "A single tag, as an attribute-value pair.",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "boolean"
          },
          {
            "type": "number"
          }
        ]
      },
      "examples": [
        {
          "role": "subject",
          "activated": true
        },
        {
          "VOT": 0.012
        }
      ]
    },
    "Translation-3.0.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Translation",
      "description": "A translation of a piece of data in a language, optionally in multiple languages. For example, a translation might be written in both Spanish and English. Each key must be a valid IETF language tag for a language (see the [IETF](https://www.w3.org/International/articles/language-tags/) reference page), and the value for that key must be the translation of the data in that particular language. **Note:** The Translation does not have a `type` property.\n\nIf the translation is in only one language and that language is English, it may be represented as a simple string instead of an object. Thus instead of `gloss: { en \"M.SG\" }` you can simply write `gloss: \"M.SG\"`.",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^(((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+))$": {
              "title": "Text",
              "type": "string",
              "description": "The translation in the specified language"
            }
          }
        },
        {
          "type": "string"
        }
      ],
      "examples": [
        "man",
        {
          "en": "man",
          "fr": "homme"
        }
      ]
    },
    "Person-4.3.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Person",
      "type": "object",
      "description": "An object providing information about a Person",
      "$comment": "This is a top-level database object",
      "required": [
        "familyName",
        "givenName"
      ],
      "additionalProperties": true,
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "const": "Person",
          "readOnly": true,
          "description": "The type of object. Must be set to `Person`."
        },
        "id": {
          "title": "ID",
          "description": "A unique database identifier for this Person"
        },
        "abbreviation": {
          "title": "Abbreviation",
          "type": "string",
          "$ref": "#/definitions/Abbreviation-2.1.0.json",
          "description": "An abbreviation for this person (typically their initials). If a pseudonym is used for this person, use the initials of the pseudonym rather than their actual initials."
        },
        "access": {
          "title": "Access Rights",
          "type": "object",
          "$ref": "#/definitions/Access-3.2.0.json",
          "description": "The access rights for information about this person"
        },
        "address": {
          "title": "Address",
          "type": "object",
          "$ref": "#/definitions/Address-2.2.0.json",
          "description": "The address for this person"
        },
        "birthDate": {
          "title": "Birth Date",
          "type": "string",
          "format": "date",
          "description": "This person’s birth date, in [internet date time format](https://www.w3.org/TR/NOTE-datetime)"
        },
        "birthPlace": {
          "title": "Birth Place (Database Reference)",
          "type": "object",
          "$ref": "#/definitions/DatabaseReference-4.3.0.json",
          "description": "A database reference to this person’s place of birth, as a Location object"
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "description": "This person’s email"
        },
        "familyName": {
          "title": "Family Name(s) / Last Name(s)",
          "type": "string",
          "description": "This person’s family name(s) (last name(s))"
        },
        "gender": {
          "title": "Gender",
          "type": "string",
          "description": "This person’s self-reported gender identity"
        },
        "givenName": {
          "title": "Given Name(s) / First Name(s)",
          "type": "string",
          "description": "This person’s given name(s) (first name(s)), including middle name(s), if any"
        },
        "languages": {
          "title": "Languages Spoken",
          "type": "array",
          "uniqueItems": true,
          "description": "A list of the languages that this person speaks. Each item should be a DLx Language object, optionally with a few additional properties such as `ageLearned`, etc., Because the DLx Language object consist minimally of just the language name, not all details about the language need to be provided here.",
          "items": {
            "title": "Language Spoken",
            "allOf": [
              {
                "title": "Language",
                "type": "object",
                "$ref": "#/definitions/Language-9.0.0.json",
                "description": "Each item in the `languages` Array must be a valid Language object"
              },
              {
                "additionalProperties": true,
                "properties": {
                  "ageLearned": {
                    "title": "Age Learned",
                    "type": "integer",
                    "minimum": 0,
                    "description": "The age at which this person learned this language"
                  },
                  "notes": {
                    "title": "Notes",
                    "type": "array",
                    "uniqueItems": true,
                    "description": "Notes about this person’s use of this language",
                    "items": {
                      "title": "Note",
                      "type": "object",
                      "$ref": "#/definitions/Note-5.0.0.json",
                      "description": "A note about this person’s use of this language"
                    }
                  },
                  "proficiency": {
                    "title": "Proficiency",
                    "type": "string",
                    "description": "The proficiency level of this person in this Language"
                  },
                  "yearsKnown": {
                    "title": "Years Known",
                    "type": "integer",
                    "description": "The number of years this person has known this Language"
                  }
                }
              }
            ]
          }
        },
        "link": {
          "title": "Link",
          "type": "string",
          "format": "uri",
          "description": "A URL where a presentational format for this resource may be viewed"
        },
        "notes": {
          "title": "Notes",
          "type": "array",
          "uniqueItems": true,
          "description": "An array of notes about this person",
          "items": {
            "title": "Note",
            "type": "object",
            "$ref": "#/definitions/Note-5.0.0.json",
            "description": "A note about this person"
          }
        },
        "phone": {
          "title": "Phone Number",
          "type": "string",
          "description": "A phone number for this Person"
        },
        "pseudonym": {
          "title": "Pseudonym",
          "type": "string",
          "description": "A pseudonym for this Person"
        },
        "roles": {
          "title": "Roles",
          "type": "array",
          "uniqueItems": true,
          "description": "An array of the roles that this person has in the context of the associated data, e.g. `speaker` or `transcriber`",
          "items": {
            "title": "Role",
            "type": "string",
            "minLength": 1,
            "description": "The role that this person has in the context of the associated data, e.g. `speaker` or `transcriber`"
          }
        },
        "startDate": {
          "title": "Start Date",
          "type": "string",
          "description": "The date a person began work on a project, a language documentation, the transcription of a text, or another form of data collection or research. This field is most useful when the Person object is being used as part of the Language.contributor and Text.contributor fields.",
          "oneOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "endDate": {
          "title": "End Date",
          "type": "string",
          "description": "The date a person finished work on a project, a language documentation, the transcription of a text, or another form of data collection or research. This field is most useful when the Person object is being used as part of the Language.contributor and Text.contributor fields.",
          "oneOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "tags": {
          "title": "Tags",
          "type": "object",
          "$ref": "#/definitions/Tags-2.1.0.json",
          "description": "A set of tags for this Person"
        },
        "url": {
          "title": "URL",
          "type": "string",
          "format": "uri",
          "description": "The URL where the JSON data for this Person may be accessed"
        }
      },
      "examples": [
        {
          "abbreviation": "BP",
          "access": {
            "notes": "No access restrictions on this person\u0027s data."
          },
          "birthDate": "1867-01-01",
          "dateCreated": "2018-10-05T15:26:23.070Z",
          "dateModified": "2018-10-05T15:26:23.070Z",
          "familyName": "Paul",
          "gender": "male",
          "givenName": "Benjamin",
          "languages": [
            {
              "name": "Chitimacha",
              "proficiency": "fluent"
            },
            {
              "name": "English",
              "proficiency": "fluent"
            }
          ],
          "link": "https://data.digitallinguistics.io/languages/Chitimacha/people/BP",
          "roles": [
            "speaker"
          ],
          "startDate": "2018-10-05T15:26:23.070Z",
          "endDate": "2018-10-05T15:26:23.070Z",
          "type": "Person",
          "url": "https://data.digitallinguistics.io/languages/Chitimacha/people/BP.json"
        }
      ]
    },
    "Access-3.2.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Access Rights",
      "type": "object",
      "description": "The Access Rights object provides information for archives on who should be allowed to access the current resource. Some access protocols used by language archives are already supported, and custom protocols may be used as, e.g. `online: false` or `permission: researcher only`, etc. **Note:** The Access object does not have a `type` property.",
      "additionalProperties": {
        "type": "string"
      },
      "properties": {
        "note": {
          "title": "Access Note",
          "$ref": "#/definitions/MultiLangString-5.0.0.json",
          "description": "A note about access rights for this resource, or any other special considerations regarding who should have Access. This attribute should be a MultiLangString rather than an Array of Note objects."
        },
        "AILLA": {
          "title": "AILLA Access Level",
          "type": "string",
          "description": "For users who are depositing their materials at The Archive of the Indigenous Languages of Latin America (AAILA) in Texas, an `AILLA` attribute may be added, and its value set to one of the access levels set forth by the archive.",
          "enum": [
            "public access",
            "password",
            "time limit",
            "depositor control"
          ],
          "default": "depository control"
        },
        "ELAR": {
          "title": "ELAR Access Level",
          "type": "string",
          "description": "For users who are depositing their materials at the Endangered Language Archive (ELAR) in London, an `ELAR` attribute may be added, and its value set to one of the access levels set forth by the archive. See [ELAR\u0027s protocols for access management](https://www.soas.ac.uk/elar/using-elar/access-protocol/) for more information.",
          "enum": [
            "User",
            "Researcher",
            "Community Member",
            "Subscriber"
          ],
          "default": "Researcher"
        },
        "license": {
          "title": "License",
          "type": "string",
          "description": "The license under which you want to release this resource, most likely a [SPDX abbreviation](https://spdx.org/licenses/). If you do not want to release this data to others, set this to `UNLICENSED.` Otherwise, use [choosealicense.com](https://choosealicense.com/) to decide which license is right for your usage.",
          "default": "UNLICENSED"
        }
      },
      "examples": [
        {
          "AILLA": "password",
          "ELAR": "Community Member",
          "license": "UNLICENSED",
          "note": {
            "eng": "Speaker also requested that this text only be shared with family members."
          },
          "speaker": "family"
        },
        {
          "note": {
            "eng": "The tribe has requested that language materials only be made available to academic researchers who have been given permission, and enrolled tribal members."
          }
        }
      ]
    },
    "Address-2.2.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Address",
      "type": "object",
      "description": "A postal Address",
      "additionalProperties": true,
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "const": "Address",
          "readOnly": true,
          "description": "The type of object. Must be set to `Address`."
        },
        "streetAddress": {
          "title": "Street Address",
          "type": "string",
          "description": "The street address, not including apartment or unit number"
        },
        "apartmentNumber": {
          "title": "Apartment / Unit Number",
          "type": "string",
          "description": "The apartment or unit number, along with any abbreviations, e.g. `Apt 20`"
        },
        "postalBoxNumber": {
          "title": "Postal Box Number",
          "type": "string",
          "description": "The postal box number"
        },
        "locality": {
          "title": "Locality / City",
          "type": "string",
          "description": "The locality or city for this Address"
        },
        "region": {
          "title": "Region / State",
          "type": "string",
          "description": "The region or state for this Address"
        },
        "country": {
          "title": "Country",
          "type": "string",
          "description": "The country this address is located in"
        },
        "postalCode": {
          "title": "Postal Code",
          "type": "string",
          "description": "The postal code for this address (as a string rather than a number)"
        }
      },
      "examples": [
        {
          "locality": "Kisii Town",
          "country": "Kenya"
        },
        {
          "locality": "Charenton",
          "region": "Louisiana",
          "country": "United States"
        },
        {
          "apartmentNumber": "B",
          "country": "United States",
          "locality": "New York",
          "postalBoxNumber": "1234",
          "postalCode": "12345-1234",
          "region": "New York",
          "streetAddress": "555 Market St.",
          "type": "Address"
        }
      ]
    },
    "Language-9.0.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Language",
      "type": "object",
      "description": "DLx uses the term *language* broadly to refer to any speech variety - whether a language, dialect, idiolect, or even a historical variety. The DLx `Language` object groups together all the information about the language, including writing systems, its phonological inventory, and metadata (e.g. names and language codes).",
      "$comment": "This is a top-level database object",
      "required": [
        "name"
      ],
      "additionalProperties": true,
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "const": "Language",
          "readOnly": true,
          "description": "The type of object. Must be set to `Language`."
        },
        "id": {
          "title": "ID",
          "description": "A unique database identifier for this Language"
        },
        "abbreviation": {
          "title": "Abbreviation",
          "type": "string",
          "$ref": "#/definitions/Abbreviation-2.1.0.json",
          "description": "A short, human-readable abbreviation for this Language"
        },
        "access": {
          "title": "Access Rights",
          "type": "object",
          "$ref": "#/definitions/Access-3.2.0.json",
          "description": "An object describing who may have access to materials on this language."
        },
        "autonyms": {
          "title": "Autonyms",
          "type": "array",
          "description": "A list of objects describing autonyms for this language (names for this language _in_ the language itself). For the canonical scientific name, use the `name` field instead. For other ways of referring to this language by outsiders, use the `exonyms` field.",
          "items": {
            "title": "Autonym",
            "type": "object",
            "required": [
              "transcription"
            ],
            "properties": {
              "transcription": {
                "title": "Autonym Transcription",
                "$ref": "#/definitions/Transcription-2.1.0.json",
                "description": "A transcription of this autonym, optionally in multiple orthographies."
              },
              "note": {
                "title": "Note",
                "$ref": "#/definitions/Note-5.0.0.json",
                "description": "A note about this autonym, such as who uses this name and where, or perhaps its etymology."
              }
            }
          }
        },
        "bibliography": {
          "title": "Bibliography",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of citations to bibliographic references about this language.",
          "items": {
            "title": "Citation",
            "$ref": "#/definitions/Citation-1.0.0.json",
            "description": "A citation to a bibliographic source about this language"
          }
        },
        "classification": {
          "title": "Genetic Classification",
          "type": "array",
          "description": "The genetic classification of this language. This property must be an array of language families (in English), with larger family groupings listed before smaller ones. For example, Spanish might have an array of the following strings: `Indo-European`, `Romance`, `Ibero-Romance`. For language isolates, this property should be an array containing the single string, `isolate`.",
          "items": {
            "title": "Language Family",
            "type": "string",
            "description": "The name of a language family, as a string, in English."
          }
        },
        "contributors": {
          "title": "Contributors",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of people who contributed to the documentation, analysis, or curation of this language data in some way. It is strongly recommended that each Person object in this collection have its `roles` property specified, so that the contribution of each person is known.",
          "items": {
            "title": "Contributor (Person - Database Reference)",
            "type": "object",
            "$ref": "#/definitions/DatabaseReference-4.3.0.json",
            "description": "A database reference to a Person object describing a contributor"
          }
        },
        "dateCreated": {
          "title": "Date Created",
          "type": "string",
          "description": "The date and optionally time that this Language object was created",
          "oneOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "dateModified": {
          "title": "Date Modified",
          "type": "string",
          "description": "The date and optionally time that this Language object was last modified",
          "oneOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "demographics": {
          "title": "Demographics",
          "type": "array",
          "uniqueItems": true,
          "description": "An array of Demographic objects, each of which contain demographic information about the Language at a specific point in time, and/or at a specific location",
          "items": {
            "title": "Demographic Data",
            "type": "object",
            "description": "The demographic data of this Language, at a specific point in time, and/or at a specific location",
            "properties": {
              "date": {
                "title": "Date",
                "type": "string",
                "description": "The date and optionally time that this Demographic data was created",
                "oneOf": [
                  {
                    "format": "date"
                  },
                  {
                    "format": "date-time"
                  }
                ]
              },
              "location": {
                "title": "Location",
                "type": "object",
                "$ref": "#/definitions/Location-3.0.0.json",
                "description": "The geographic Location of this Demographic data"
              },
              "notes": {
                "title": "Notes",
                "type": "array",
                "uniqueItems": true,
                "description": "A collection of notes about this Demographic data",
                "items": {
                  "title": "Note",
                  "type": "object",
                  "$ref": "#/definitions/Note-5.0.0.json",
                  "description": "A Note about this Demographic data"
                }
              },
              "population": {
                "title": "Population",
                "type": "integer",
                "minimum": 0,
                "description": "The Population of speakers included in this Demographic data"
              },
              "status": {
                "title": "Status",
                "type": "object",
                "description": "The Status of this Demographic data on one or more of the following scales: EGIDS, ELCat (using the LEI), GIDS, and/or UNESCO. The official status scales can be found [here](http://langlxmelanesia.com/Paris%20-%20EGIDS%20The%20Expanded%20Graded%20Intergenerational%20Disrupt.pdf).",
                "minimumProperties": 1,
                "properties": {
                  "EGIDS": {
                    "title": "EGIDS",
                    "type": "string",
                    "description": "The Expanded Graded Intergenerational Disruption Scale, or EGIDS, status of this Demographic data. Either the official level or the official label representing the EGIDS status of the data, as a string.",
                    "oneOf": [
                      {
                        "pattern": "^[0-9|10|6a|6b|8a|8b]$"
                      },
                      {
                        "enum": [
                          "International",
                          "National",
                          "Regional",
                          "Trade",
                          "Educational",
                          "Written",
                          "Vigorous",
                          "Threatened",
                          "Shifting",
                          "Moribund",
                          "Nearly Extinct",
                          "Dormant",
                          "Extinct"
                        ]
                      }
                    ]
                  },
                  "ELCat": {
                    "title": "ELCat Level of Endangerment",
                    "type": "string",
                    "enum": [
                      "Safe",
                      "Vulnerable",
                      "Threatened",
                      "Endangered",
                      "Severely Endangered",
                      "Critically Endangered"
                    ],
                    "description": "The ELCat status of this Demographic data. ELCat uses the Language Endangerment Index, or LEI, scale. This status should be the LEI level of endangerment of this Demographic data, as a string."
                  },
                  "GIDS": {
                    "title": "GIDS",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 8,
                    "description": "The Graded Intergenerational Disruption Scale, or GIDS, status of this Demographic data. This is the scale created by Thomas Fishman in his 1991 work *Reversing Language Shift*. The GIDS status should be represented by the integer, 1-8, that corresponds with the GIDS Stage of the data."
                  },
                  "UNESCO": {
                    "title": "UNESCO",
                    "type": "string",
                    "enum": [
                      "Safe",
                      "Vulnerable",
                      "Definitely Endangered",
                      "Severely Endangered",
                      "Critically Endangered",
                      "Extinct"
                    ],
                    "description": "The UNESCO Language Degree of Endangerment for this Demographic data. This status should be the string representation of the Degree of endangerment level."
                  }
                }
              }
            }
          }
        },
        "description": {
          "title": "Description",
          "$ref": "#/definitions/MultiLangString-5.0.0.json",
          "description": "A high-level overview of the Language and the sociohistorical and documentary context for the accompanying data"
        },
        "exonyms": {
          "title": "Exonyms",
          "type": "array",
          "description": "A list of exonyms for this language (names of the language in _other_ languages). For the canonical scientific name of the language (usually in English), use the `name` field. This field is for any additional exonyms beyond the canonical scientific name. For autonyms (names of the language _in_ the language), use the `autonyms` field.",
          "items": {
            "title": "Exonym",
            "type": "object",
            "required": [
              "transcription"
            ],
            "properties": {
              "transcription": {
                "title": "Exonym Transcription",
                "$ref": "#/definitions/MultiLangString-5.0.0.json",
                "description": "A transcription of this exonym, optionally in multiple languages."
              },
              "note": {
                "title": "Note",
                "$ref": "#/definitions/Note-5.0.0.json",
                "description": "A note about this exonym, such as who uses this name and where, or perhaps its etymology."
              }
            }
          }
        },
        "glottolog": {
          "title": "Glottolog Code",
          "type": "string",
          "pattern": "^[a-z]{4}[0-9]{4}$",
          "description": "The Glottolog code for this language variety, as a String in the format abcd1234"
        },
        "iso": {
          "title": "ISO 639-3 Code",
          "type": "string",
          "pattern": "^[a-z]{3}$",
          "description": "The ISO 639-3 code for this language variety, as a 3-letter String"
        },
        "link": {
          "title": "Link",
          "type": "string",
          "format": "uri",
          "description": "A URL where a presentational format for this resource may be viewed"
        },
        "locations": {
          "title": "Locations",
          "type": "array",
          "uniqueItems": true,
          "description": "Geographic locations where this language variety is spoken, optionally with geographic coordinate data",
          "items": {
            "title": "Location (Database Reference)",
            "type": "object",
            "$ref": "#/definitions/DatabaseReference-4.3.0.json",
            "description": "A database reference to a Location object describing a location where this language variety is spoken"
          }
        },
        "name": {
          "title": "Language Name",
          "$ref": "#/definitions/MultiLangString-5.0.0.json",
          "minProperties": 1,
          "description": "The canonical scientific name of this language, usually in English, and also optionally in multiple languages. There must be a name provided in at least one language. Use the `exonyms` field to list other ways this language is referred to, and the `autonyms` field to list names for the language _in_ the language itself (a.k.a. endonyms)."
        },
        "notes": {
          "title": "Notes",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of notes about this language",
          "items": {
            "title": "Note",
            "type": "object",
            "$ref": "#/definitions/Note-5.0.0.json",
            "description": "A Note about this Language"
          }
        },
        "orthographies": {
          "title": "Orthographies",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of orthographies used to represent this Language",
          "items": {
            "title": "Orthography",
            "type": "object",
            "$ref": "#/definitions/Orthography-3.3.0.json",
            "description": "An orthography used to represent this language"
          }
        },
        "phonemes": {
          "title": "Phonemes",
          "type": "array",
          "description": "The phonological inventory for this language, i.e. a collection of phonemes",
          "items": {
            "title": "Phoneme",
            "type": "object",
            "$ref": "#/definitions/Phoneme-5.0.0.json",
            "description": "A Phoneme object"
          }
        },
        "tags": {
          "title": "Tags",
          "type": "object",
          "$ref": "#/definitions/Tags-2.1.0.json",
          "description": "A set of tags for this Language"
        },
        "url": {
          "title": "URL",
          "type": "string",
          "format": "uri",
          "description": "A URL where the JSON data for this language can be found"
        }
      },
      "examples": [
        {
          "abbreviation": "chiti",
          "access": {
            "AILLA": "password",
            "note": {
              "eng": "Materials on this language should not be made available to non-tribal members without permission."
            }
          },
          "autonyms": [
            {
              "transcription": {
                "APA": "sitimaša",
                "IPA": "sitimaʃa",
                "Mod": "sitimaxa",
                "Swad": "sitimaša"
              },
              "note": {
                "text": "This is the traditional name used for the Chitimacha language by the Chitimacha people themselves. It most likely derives from _siit‑_ \u0027body of water\u0027 + _‑ma_ pluractional + _‑x_ topic marker, meaning \u0027people of the waters\u0027. This is most likely a reference to the fact that the Chitimacha people live deep in the bayou waterways of Louisiana."
              }
            }
          ],
          "bibliography": [
            {
              "citationKey": "Swadesh1946"
            }
          ],
          "contributors": [
            {
              "abbreviation": "DWH",
              "roles": [
                "researcher"
              ]
            },
            {
              "abbreviation": "BP",
              "roles": [
                "speaker"
              ]
            },
            {
              "abbreviation": "Swad",
              "roles": [
                "researcher"
              ]
            }
          ],
          "dateCreated": "2018-10-13T18:16:57.497Z",
          "dateModified": "2018-10-13T18:17:06.515Z",
          "defaultOrthography": "modern",
          "exonyms": [
            {
              "transcription": "Shetimashas",
              "note": {
                "text": "This is the name commonly used for the language by French colonials, borrowed from the Chitimacha name for the language, _Sitimaxa_."
              }
            },
            {
              "transcription": "Chetimachas"
            }
          ],
          "glottolog": "chit1248",
          "iso": "ctm",
          "link": "https://data.digitallinguistics.io/languages/Chitimacha",
          "locations": [
            {
              "name": "Charenton"
            }
          ],
          "name": {
            "eng": "Chitimacha",
            "fra": "Chitimachas",
            "spa": "chitimacha"
          },
          "notes": [
            {
              "text": "The best documentary materials on this language are those compiled by Morris Swadesh in 1930–1934."
            },
            {
              "text": "Chitimacha is a language isolate."
            }
          ],
          "orthographies": [
            {
              "abbreviation": "Mod",
              "graphemes": [
                {
                  "form": "a",
                  "pronunciation": [
                    "a"
                  ]
                },
                {
                  "form": "aa",
                  "pronunciation": [
                    "aː"
                  ]
                },
                {
                  "form": "b",
                  "pronunciation": [
                    "pˀ"
                  ]
                },
                {
                  "form": "c",
                  "pronunciation": [
                    "t͡ʃ"
                  ]
                },
                {
                  "form": "d",
                  "pronunciation": [
                    "tˀ"
                  ]
                },
                {
                  "form": "dz",
                  "pronunciation": [
                    "t͡sˀ"
                  ]
                },
                {
                  "form": "e",
                  "pronunciation": [
                    "e"
                  ]
                },
                {
                  "form": "ee",
                  "pronunciation": [
                    "eː"
                  ]
                },
                {
                  "form": "g",
                  "pronunciation": [
                    "kˀ"
                  ]
                },
                {
                  "form": "h",
                  "pronunciation": [
                    "h"
                  ]
                },
                {
                  "form": "j",
                  "pronunciation": [
                    "t͡ʃˀ"
                  ]
                },
                {
                  "form": "k",
                  "pronunciation": [
                    "k"
                  ]
                },
                {
                  "form": "m",
                  "pronunciation": [
                    "m"
                  ]
                },
                {
                  "form": "mq",
                  "pronunciation": [
                    "ˀm"
                  ]
                },
                {
                  "form": "n",
                  "pronunciation": [
                    "n"
                  ]
                },
                {
                  "form": "nq",
                  "pronunciation": [
                    "ˀn"
                  ]
                },
                {
                  "form": "o",
                  "pronunciation": [
                    "o"
                  ]
                },
                {
                  "form": "oo",
                  "pronunciation": [
                    "oː"
                  ]
                },
                {
                  "form": "p",
                  "pronunciation": [
                    "p"
                  ]
                },
                {
                  "form": "q",
                  "pronunciation": [
                    "ʔ"
                  ]
                },
                {
                  "form": "s",
                  "pronunciation": [
                    "s"
                  ]
                },
                {
                  "form": "t",
                  "pronunciation": [
                    "t"
                  ]
                },
                {
                  "form": "ts",
                  "pronunciation": [
                    "t͡s"
                  ]
                },
                {
                  "form": "u",
                  "pronunciation": [
                    "u"
                  ]
                },
                {
                  "form": "uu",
                  "pronunciation": [
                    "uː"
                  ]
                },
                {
                  "form": "w",
                  "pronunciation": [
                    "w"
                  ]
                },
                {
                  "form": "x",
                  "pronunciation": [
                    "ʃ"
                  ]
                },
                {
                  "form": "y",
                  "pronunciation": [
                    "j"
                  ]
                }
              ],
              "link": "https://data.digitallinguistics.io/languages/Chitimacha/orthographies/Modern",
              "name": "Modern",
              "notes": [
                {
                  "text": "This is the official orthography used by the Chitimacha Tribe."
                }
              ],
              "punctuation": [
                ".",
                "?",
                "!"
              ]
            },
            {
              "abbreviation": "APA",
              "graphemes": [],
              "link": "https://data.digitallinguistics.io/languages/Chitimacha/orthographies/APA",
              "name": "Americanist"
            }
          ],
          "phonemes": [
            {
              "airstream": "pulmonic",
              "ipa": "t",
              "manner": "plosive",
              "place": "alveolar",
              "voicing": "voiceless"
            },
            {
              "airstream": "pulmonic",
              "ipa": "t͡ʃ",
              "manner": "affricate",
              "place": "post-alveolar",
              "voicing": "voiceless"
            },
            {
              "airstream": "ejective",
              "ipa": "t͡ʃˀ",
              "manner": "affricate",
              "place": "post-alveolar",
              "voicing": "voiceless"
            }
          ],
          "tags": {
            "morphologicalType": "synthetic"
          },
          "type": "Language",
          "url": "https://data.digitallinguistics.io/languages/Chitimacha"
        },
        {
          "name": "Shangaji",
          "description": "Shangaji is spoken in three small villages in the Nampula province of Mozambique. The deposit focuses on the variant spoken in Naatthembo village, just west of the Sangage peninsula which begins north of Angoche town. Naatthembo has more or less 4000 inhabitants and represents the major Shangaji speaking centre with the two other locations; Nakonya village and the Likookha area in Mogincual adding more or less 500 and 700 speakers to this number of speakers which is in decline due to a lack of intergenerational language transfer. Nthamala village, some 10 km away from Naatthembo, no longer has Shangaji speakers because of a complete shift to the regional lingua franca Makhuwa (Enlai). The Shangaji deposit thus responds to an urgent documentation need, also because the language is one of four coastal languages that are believed to bear traces of the Swahili world which once stretched from Somalia to the south of Mozambique."
        },
        {
          "name": "Muskogee",
          "demographics": [
            {
              "date": "2015-01-01",
              "location": {
                "name": "Oklahoma"
              },
              "notes": [
                {
                  "text": "Muskogee is also spoken in Florida"
                },
                {
                  "text": "This population data is based on a 2015 census"
                }
              ],
              "population": 4470,
              "status": {
                "EGIDS": "Shifting",
                "ELCat": "Severely Endangered",
                "GIDS": 7,
                "UNESCO": "Definitely Endangered"
              }
            }
          ]
        },
        {
          "abbreviation": "gusii",
          "access": {
            "note": {
              "eng": "Unless otherwise noted, materials for this language may be made publicly accessible, and the speakers in the content identified."
            }
          },
          "autonyms": [
            {
              "transcription": {
                "IPA": "ékeɣusií",
                "Gus": "ékegusií",
                "Swa": "ekegusii"
              }
            }
          ],
          "classification": [
            "Niger-Congo",
            "Atlantic-Congo",
            "Benue-Congo",
            "Bantoid",
            "Bantu",
            "Northeast Bantu",
            "Great Lakes Bantu",
            "Logooli-Kuria (E40)"
          ],
          "contributors": [
            {
              "abbreviation": "KB",
              "roles": [
                "lexicographer",
                "speaker"
              ]
            },
            {
              "abbreviation": "GM",
              "roles": [
                "lexicographer",
                "reviewer",
                "speaker"
              ]
            },
            {
              "abbreviation": "DWH",
              "roles": [
                "researcher"
              ]
            }
          ],
          "dateCreated": "2018-10-13T18:17:24.477Z",
          "dateModified": "2018-10-13T18:17:34.512Z",
          "exonyms": [
            {
              "transcription": {
                "swa": "Kisii"
              },
              "note": {
                "text": "This is the most typical way that Swahili speakers refer to the language."
              }
            },
            {
              "transcription": {
                "swa": "Kikisii"
              },
              "note": {
                "text": "This is a Swahili version of the name of this language. It is an alternate for simply `Kisii`."
              }
            }
          ],
          "glottolog": "gusi1247",
          "iso": "guz",
          "link": "https://data.digitallinguistics.io/languages/Gusii",
          "locations": [
            {
              "key": "Kisii"
            }
          ],
          "name": {
            "eng": "Gusii",
            "spa": "gusii",
            "swa": "Kisii"
          },
          "notes": [
            {
              "text": "In older versions of your notes, you referred to this language as Kisii rather than Gusii."
            }
          ],
          "orthographies": [
            {
              "abbreviation": "Practical",
              "direction": "ltr-ttb",
              "graphemes": [],
              "link": "https://data.digitallinguistics.io/languages/Gusii/orthographies/Practical",
              "name": "Practical",
              "punctuation": [
                ".",
                "?",
                "!"
              ]
            },
            {
              "abbreviation": "Swahili",
              "direction": "ltr-ttb",
              "graphemes": [],
              "link": "https://data.digitallinguistics.io/languages/Gusii/orthographies/Swahili",
              "name": "Swahili",
              "notes": [
                {
                  "text": "This orthography represents the way that the language is written when using the Swahili orthography. Tone is omitted from this orthography."
                }
              ],
              "punctuation": [
                ".",
                "?",
                "!"
              ]
            }
          ],
          "phonemes": [],
          "type": "Language"
        }
      ]
    },
    "Transcription-2.1.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transcription",
      "type": "object",
      "description": "A transcription of a piece of data in a language, optionally in multiple orthographies. For example, a transcription might be written in both a practical orthography and IPA. Each key must be the abbreviation for an orthography (see the [Abbreviation](https://spec.digitallinguistics.github.io/schemas/Abbreviation.html) schema), and the value for that key is the transcription of the data in that particular orthography. **Note:** The Transcription does not have a `type` property.",
      "additionalProperties": false,
      "patternProperties": {
        "^[(a-z)|(A-Z)|(0-9)]+$": {
          "title": "Text",
          "type": "string",
          "description": "The transcription for the specified orthography"
        }
      },
      "examples": [
        {
          "APA": "wetkš",
          "IPA": "wetkʃ",
          "Mod": "wetkx",
          "Swad": "wetkš"
        }
      ]
    },
    "Citation-1.0.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Citation",
      "type": "object",
      "description": "A citation to a bibliographic source. Citation objects consist of an optional `pages` property which indicates the relevant page numbers within the cited publication, and either a `citationKey` field or a `bibliographicSource` field. If the `citationKey` field is used, it contains a reference to the citation key of a bibliographic source stored elsewhere. If the `bibliographicSource` field is used, it contains an entire bibliographicSource. This allows developers to dereference their bibliographies, if they choose to.",
      "allOf": [
        {
          "properties": {
            "pages": {
              "title": "Pages",
              "type": "string",
              "description": "The relevant page numbers within the cited publication"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "citationKey"
              ],
              "properties": {
                "citationKey": {
                  "title": "Citation Key",
                  "$ref": "#/definitions/Abbreviation-2.1.0.json",
                  "description": "The citation key for the bibliographic source being reference. Must be a valid Abbreviation."
                }
              }
            },
            {
              "required": [
                "bibliographicSource"
              ],
              "properties": {
                "bibliographicSource": {
                  "title": "Bibliographic Source",
                  "$ref": "#/definitions/BibliographicSource-1.0.0.json",
                  "description": "The bibliographic source being referenced."
                }
              }
            }
          ]
        }
      ],
      "examples": [
        {
          "citationKey": "Hieber2018",
          "pages": "1-15"
        }
      ]
    },
    "BibliographicSource-1.0.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Bibliographic Source",
      "type": "object",
      "description": "A bibliographic source, such as a book or journal article",
      "$comment": "This is a top-level database object",
      "required": [
        "title"
      ],
      "additionalProperties": true,
      "definitions": {
        "person": {
          "title": "Person",
          "type": "object",
          "description": "An object representing a Person",
          "additionalProperties": false,
          "properties": {
            "firstName": {
              "title": "First Name",
              "type": "string",
              "description": "The first name(s) of this author"
            },
            "lastName": {
              "title": "Last Name",
              "type": "string",
              "description": "The last name(s) of this author"
            }
          }
        }
      },
      "properties": {
        "id": {
          "title": "ID",
          "description": "A unique database identifier for this bibliographic source"
        },
        "type": {
          "title": "Type",
          "type": "string",
          "const": "BibliographicSource",
          "readOnly": true,
          "description": "The type of object. Must be set to `BibliographicSource`."
        },
        "authors": {
          "title": "Authors",
          "type": "array",
          "uniqueItems": true,
          "description": "An array of authors for this bibliographic source",
          "items": {
            "title": "Author",
            "type": "object",
            "$ref": "#/definitions/BibliographicSource-1.0.0.json_definitions_person",
            "description": "A Person object representing an author"
          }
        },
        "citationKey": {
          "title": "Citation Key",
          "$ref": "#/definitions/Abbreviation-2.1.0.json",
          "description": "A citation key which must be a valid Abbreviation. This field can be used by bibliographic reference management software like Mendeley or Zotero to store the citation key for a source."
        },
        "city": {
          "title": "City",
          "type": "string",
          "description": "The city in which this bibliographic source was published"
        },
        "doi": {
          "title": "Digital Object Identifier (DOI)",
          "type": "string",
          "pattern": "^10.\\d{4,9}/[-._;()/:A-Za-z0-9]+$",
          "description": "The Digtial Object Identifier (DOI) for this publication. This should be just the DOI itself, not a URL, and should not include the `doi:` prefix (e.g. `10.1075/cal.20.02hie` not `https://doi.org/10.1075/cal.20.02hie` or `doi:10.1075/cal.20.02hie`)."
        },
        "edition": {
          "title": "Edition",
          "type": "integer",
          "minimum": 1,
          "description": "The edition of this publication, formatted as an integer"
        },
        "editors": {
          "title": "Editors",
          "type": "array",
          "uniqueItems": true,
          "description": "An array of editors for this bibliographic source",
          "items": {
            "title": "Editor",
            "type": "object",
            "$ref": "#/definitions/BibliographicSource-1.0.0.json_definitions_person",
            "description": "A Person object representing an editor"
          }
        },
        "issue": {
          "title": "Issue",
          "type": "string",
          "description": "The publication issue"
        },
        "link": {
          "title": "Link",
          "type": "string",
          "format": "uri",
          "description": "A link to a web page where this publication may be viewed or downloaded"
        },
        "pages": {
          "title": "Pages",
          "type": "string",
          "description": "The page numbers of this publication"
        },
        "publication": {
          "title": "Publication",
          "type": "string",
          "description": "The publication that this bibliographic source is published in"
        },
        "publicationType": {
          "title": "Publication Type",
          "type": "string",
          "description": "The type of publication",
          "enum": [
            "journal article",
            "book",
            "generic",
            "book section",
            "conference proceedings",
            "working paper",
            "report",
            "web page",
            "thesis",
            "magazine article",
            "newspaper article",
            "television broadcast",
            "encyclopedia article",
            "film"
          ]
        },
        "publisher": {
          "title": "Publisher (or Institution)",
          "type": "string",
          "description": "The name of the publisher of this soruce, or the institution where it was published"
        },
        "series": {
          "title": "Series",
          "type": "string",
          "description": "The series in which this publication was published"
        },
        "title": {
          "title": "Title",
          "type": "string",
          "minLength": 1,
          "description": "The title of this publication"
        },
        "translators": {
          "title": "Translators",
          "type": "array",
          "uniqueItems": true,
          "description": "An array of translators for this bibliographic source",
          "items": {
            "title": "Translator (Person)",
            "type": "object",
            "$ref": "#/definitions/BibliographicSource-1.0.0.json_definitions_person",
            "description": "A Person object representing a translator"
          }
        },
        "url": {
          "title": "JSON URL",
          "type": "string",
          "format": "uri",
          "description": "A URL for the JSON data for this bibliographic source"
        },
        "volume": {
          "title": "Volume",
          "type": "integer",
          "minimum": 1,
          "description": "The volume number for this publication"
        },
        "year": {
          "title": "Year",
          "type": "integer",
          "description": "The year this item was published. Use a positive integer for AD / ACE, and a negative integer for BC / BCE."
        }
      },
      "examples": [
        {
          "authors": [
            {
              "firstName": "Daniel W.",
              "lastName": "Hieber"
            }
          ],
          "citationKey": "Hieber2018",
          "city": "Amsterdam",
          "doi": "10.1075/cal.20.02hie",
          "editors": [
            {
              "firstName": "Kristel",
              "lastName": "Van Goethem"
            },
            {
              "firstName": "Muriel",
              "lastName": "Norde"
            },
            {
              "firstName": "Evie",
              "lastName": "Coussé"
            },
            {
              "firstName": "Gudrun",
              "lastName": "Vanderbauwhede"
            }
          ],
          "publication": "Category change from a constructional perspective",
          "publicationType": "book section",
          "publisher": "John Benjamins",
          "series": "Constructional approaches to language",
          "title": "Category genesis in Chitimacha",
          "type": "BibliographicSource",
          "url": "https://api.digitallinguistics.io/references/Hieber2018.json",
          "volume": 20,
          "year": 2018
        },
        {
          "authors": [
            {
              "firstName": "Daniel W.",
              "lastName": "Hieber"
            }
          ],
          "doi": "10.1515/lingty-2013-0013",
          "issue": "2",
          "link": "https://benjamins.com/catalog/cal.20.02hie",
          "pages": "15–46",
          "publication": "Linguistic Typology",
          "publicationType": "journal article",
          "title": "On linguistics, linguists, and our times: A linguist’s personal narrative reviewed",
          "type": "BibliographicSource",
          "url": "https://api.digitallinguistics.io/references/Hieber2013.json",
          "year": 2013
        }
      ]
    },
    "BibliographicSource-1.0.0.json_definitions_person": {
      "title": "Person",
      "type": "object",
      "description": "An object representing a Person",
      "additionalProperties": false,
      "properties": {
        "firstName": {
          "title": "First Name",
          "type": "string",
          "description": "The first name(s) of this author"
        },
        "lastName": {
          "title": "Last Name",
          "type": "string",
          "description": "The last name(s) of this author"
        }
      }
    },
    "Location-3.0.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Location",
      "type": "object",
      "description": "A location, optionally with accompanying geographic coordinate data",
      "$comment": "This is a top-level database object",
      "required": [
        "name"
      ],
      "additionalProperties": true,
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "const": "Location",
          "readOnly": true,
          "description": "The type of object. Must be set to `Location`."
        },
        "id": {
          "title": "ID",
          "description": "A unique database identifier for this Location"
        },
        "abbreviation": {
          "title": "Abbreviation",
          "type": "string",
          "$ref": "#/definitions/Abbreviation-2.1.0.json",
          "description": "An abbreviation for this Location"
        },
        "access": {
          "title": "Access Rights",
          "type": "object",
          "$ref": "#/definitions/Access-3.2.0.json",
          "description": "Since locations sometimes contain personal information like addresses, it is important to consider the proper access management policy for them."
        },
        "address": {
          "title": "Address",
          "type": "object",
          "$ref": "#/definitions/Address-2.2.0.json",
          "description": "An address associated with this location"
        },
        "bibliography": {
          "title": "Bibliography",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of citations to bibliographic sources about this location",
          "items": {
            "title": "Citation",
            "type": "object",
            "$ref": "#/definitions/Citation-1.0.0.json",
            "description": "A citation to a bibliographic source about this location"
          }
        },
        "date": {
          "title": "Date",
          "type": "string",
          "description": "The date and optionally time that a language was spoken in this location",
          "oneOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "dateCreated": {
          "title": "Date Created",
          "type": "string",
          "description": "The date and optionally time that this Location object was created",
          "oneOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "dateModified": {
          "title": "Date Modified",
          "type": "string",
          "description": "The date and optionally time that this Location was last modified",
          "oneOf": [
            {
              "format": "date"
            },
            {
              "format": "date-time"
            }
          ]
        },
        "geoJSON": {
          "title": "GeoJSON Geometry Object",
          "type": "object",
          "$ref": "#/definitions/https:__geojson.org_schema_GeoJSON.json",
          "description": "A GeoJSON object describing this Location. Must adhere to the GeoJSON format: https://geojson.org/."
        },
        "link": {
          "title": "Link",
          "type": "string",
          "format": "uri",
          "description": "A URL where a presentational format for this resource may be viewed"
        },
        "name": {
          "title": "Name",
          "$ref": "#/definitions/MultiLangString-5.0.0.json",
          "description": "A name for this location, e.g. `Susan’s House` or `Valley High School`, or `Shenandoah River`, optionally in multiple languages. The name must be provided in at least one language."
        },
        "notes": {
          "title": "Notes",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of notes about this Location",
          "items": {
            "title": "Note",
            "type": "object",
            "$ref": "#/definitions/Note-5.0.0.json",
            "description": "A note about this location"
          }
        },
        "tags": {
          "title": "Tags",
          "type": "object",
          "$ref": "#/definitions/Tags-2.1.0.json",
          "description": "A set of tags for this Location"
        },
        "url": {
          "title": "URL",
          "type": "string",
          "format": "uri",
          "description": "The URL where information about this location can be retrieved"
        }
      },
      "examples": [
        {
          "abbreviation": "Charenton",
          "access": {
            "note": {
              "eng": "There are no restrictions on access to this location."
            }
          },
          "date": "2018-10-30",
          "dateCreated": "2018-10-30T01:54:19.901Z",
          "dateModified": "2018-10-30T01:54:39.394Z",
          "geoJSON": {
            "type": "Point",
            "coordinates": [
              29.874408,
              -91.547868
            ]
          },
          "name": "Charenton",
          "notes": [
            {
              "text": "Built on the site of the Chitimacha village Kas Kec Namu.",
              "language": "eng"
            }
          ],
          "type": "Location",
          "url": "https://api.digitallinguistics.io/locations/Charenton"
        },
        {
          "abbreviation": "Kisii",
          "date": "2018-10-19",
          "dateCreated": "2018-10-30T01:54:19.901Z",
          "dateModified": "2018-10-30T01:54:39.394Z",
          "geoJSON": {
            "type": "Point",
            "coordinates": [
              -0.67677,
              34.77905
            ]
          },
          "name": "Kisii",
          "type": "Location",
          "url": "https://api.digitallinguistics.io/locations/Kisii"
        }
      ]
    },
    "https:__geojson.org_schema_GeoJSON.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GeoJSON",
      "oneOf": [
        {
          "title": "GeoJSON Point",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Point"
              ]
            },
            "coordinates": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "number"
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON LineString",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LineString"
              ]
            },
            "coordinates": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "number"
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON Polygon",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Polygon"
              ]
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "array",
                "minItems": 4,
                "items": {
                  "type": "array",
                  "minItems": 2,
                  "items": {
                    "type": "number"
                  }
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON MultiPoint",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MultiPoint"
              ]
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "number"
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON MultiLineString",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MultiLineString"
              ]
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "array",
                  "minItems": 2,
                  "items": {
                    "type": "number"
                  }
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON MultiPolygon",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MultiPolygon"
              ]
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "array",
                  "minItems": 4,
                  "items": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON GeometryCollection",
          "type": "object",
          "required": [
            "type",
            "geometries"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "GeometryCollection"
              ]
            },
            "geometries": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "title": "GeoJSON Point",
                    "type": "object",
                    "required": [
                      "type",
                      "coordinates"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point"
                        ]
                      },
                      "coordinates": {
                        "type": "array",
                        "minItems": 2,
                        "items": {
                          "type": "number"
                        }
                      },
                      "bbox": {
                        "type": "array",
                        "minItems": 4,
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  {
                    "title": "GeoJSON LineString",
                    "type": "object",
                    "required": [
                      "type",
                      "coordinates"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "LineString"
                        ]
                      },
                      "coordinates": {
                        "type": "array",
                        "minItems": 2,
                        "items": {
                          "type": "array",
                          "minItems": 2,
                          "items": {
                            "type": "number"
                          }
                        }
                      },
                      "bbox": {
                        "type": "array",
                        "minItems": 4,
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  {
                    "title": "GeoJSON Polygon",
                    "type": "object",
                    "required": [
                      "type",
                      "coordinates"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Polygon"
                        ]
                      },
                      "coordinates": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "minItems": 4,
                          "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      "bbox": {
                        "type": "array",
                        "minItems": 4,
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  {
                    "title": "GeoJSON MultiPoint",
                    "type": "object",
                    "required": [
                      "type",
                      "coordinates"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "MultiPoint"
                        ]
                      },
                      "coordinates": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "minItems": 2,
                          "items": {
                            "type": "number"
                          }
                        }
                      },
                      "bbox": {
                        "type": "array",
                        "minItems": 4,
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  {
                    "title": "GeoJSON MultiLineString",
                    "type": "object",
                    "required": [
                      "type",
                      "coordinates"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "MultiLineString"
                        ]
                      },
                      "coordinates": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "minItems": 2,
                          "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      "bbox": {
                        "type": "array",
                        "minItems": 4,
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  {
                    "title": "GeoJSON MultiPolygon",
                    "type": "object",
                    "required": [
                      "type",
                      "coordinates"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "MultiPolygon"
                        ]
                      },
                      "coordinates": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "minItems": 4,
                            "items": {
                              "type": "array",
                              "minItems": 2,
                              "items": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "bbox": {
                        "type": "array",
                        "minItems": 4,
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON Feature",
          "type": "object",
          "required": [
            "type",
            "properties",
            "geometry"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Feature"
              ]
            },
            "properties": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object"
                }
              ]
            },
            "geometry": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "title": "GeoJSON Point",
                  "type": "object",
                  "required": [
                    "type",
                    "coordinates"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "Point"
                      ]
                    },
                    "coordinates": {
                      "type": "array",
                      "minItems": 2,
                      "items": {
                        "type": "number"
                      }
                    },
                    "bbox": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                },
                {
                  "title": "GeoJSON LineString",
                  "type": "object",
                  "required": [
                    "type",
                    "coordinates"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "LineString"
                      ]
                    },
                    "coordinates": {
                      "type": "array",
                      "minItems": 2,
                      "items": {
                        "type": "array",
                        "minItems": 2,
                        "items": {
                          "type": "number"
                        }
                      }
                    },
                    "bbox": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                },
                {
                  "title": "GeoJSON Polygon",
                  "type": "object",
                  "required": [
                    "type",
                    "coordinates"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "Polygon"
                      ]
                    },
                    "coordinates": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "minItems": 4,
                        "items": {
                          "type": "array",
                          "minItems": 2,
                          "items": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "bbox": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                },
                {
                  "title": "GeoJSON MultiPoint",
                  "type": "object",
                  "required": [
                    "type",
                    "coordinates"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "MultiPoint"
                      ]
                    },
                    "coordinates": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "minItems": 2,
                        "items": {
                          "type": "number"
                        }
                      }
                    },
                    "bbox": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                },
                {
                  "title": "GeoJSON MultiLineString",
                  "type": "object",
                  "required": [
                    "type",
                    "coordinates"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "MultiLineString"
                      ]
                    },
                    "coordinates": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "minItems": 2,
                        "items": {
                          "type": "array",
                          "minItems": 2,
                          "items": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "bbox": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                },
                {
                  "title": "GeoJSON MultiPolygon",
                  "type": "object",
                  "required": [
                    "type",
                    "coordinates"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "MultiPolygon"
                      ]
                    },
                    "coordinates": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "minItems": 4,
                          "items": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "bbox": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                },
                {
                  "title": "GeoJSON GeometryCollection",
                  "type": "object",
                  "required": [
                    "type",
                    "geometries"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "GeometryCollection"
                      ]
                    },
                    "geometries": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "title": "GeoJSON Point",
                            "type": "object",
                            "required": [
                              "type",
                              "coordinates"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Point"
                                ]
                              },
                              "coordinates": {
                                "type": "array",
                                "minItems": 2,
                                "items": {
                                  "type": "number"
                                }
                              },
                              "bbox": {
                                "type": "array",
                                "minItems": 4,
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          },
                          {
                            "title": "GeoJSON LineString",
                            "type": "object",
                            "required": [
                              "type",
                              "coordinates"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "LineString"
                                ]
                              },
                              "coordinates": {
                                "type": "array",
                                "minItems": 2,
                                "items": {
                                  "type": "array",
                                  "minItems": 2,
                                  "items": {
                                    "type": "number"
                                  }
                                }
                              },
                              "bbox": {
                                "type": "array",
                                "minItems": 4,
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          },
                          {
                            "title": "GeoJSON Polygon",
                            "type": "object",
                            "required": [
                              "type",
                              "coordinates"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Polygon"
                                ]
                              },
                              "coordinates": {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "minItems": 4,
                                  "items": {
                                    "type": "array",
                                    "minItems": 2,
                                    "items": {
                                      "type": "number"
                                    }
                                  }
                                }
                              },
                              "bbox": {
                                "type": "array",
                                "minItems": 4,
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          },
                          {
                            "title": "GeoJSON MultiPoint",
                            "type": "object",
                            "required": [
                              "type",
                              "coordinates"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MultiPoint"
                                ]
                              },
                              "coordinates": {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "minItems": 2,
                                  "items": {
                                    "type": "number"
                                  }
                                }
                              },
                              "bbox": {
                                "type": "array",
                                "minItems": 4,
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          },
                          {
                            "title": "GeoJSON MultiLineString",
                            "type": "object",
                            "required": [
                              "type",
                              "coordinates"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MultiLineString"
                                ]
                              },
                              "coordinates": {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "minItems": 2,
                                  "items": {
                                    "type": "array",
                                    "minItems": 2,
                                    "items": {
                                      "type": "number"
                                    }
                                  }
                                }
                              },
                              "bbox": {
                                "type": "array",
                                "minItems": 4,
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          },
                          {
                            "title": "GeoJSON MultiPolygon",
                            "type": "object",
                            "required": [
                              "type",
                              "coordinates"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MultiPolygon"
                                ]
                              },
                              "coordinates": {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "minItems": 4,
                                    "items": {
                                      "type": "array",
                                      "minItems": 2,
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              },
                              "bbox": {
                                "type": "array",
                                "minItems": 4,
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "bbox": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                }
              ]
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON FeatureCollection",
          "type": "object",
          "required": [
            "type",
            "features"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "FeatureCollection"
              ]
            },
            "features": {
              "type": "array",
              "items": {
                "title": "GeoJSON Feature",
                "type": "object",
                "required": [
                  "type",
                  "properties",
                  "geometry"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Feature"
                    ]
                  },
                  "properties": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object"
                      }
                    ]
                  },
                  "geometry": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "title": "GeoJSON Point",
                        "type": "object",
                        "required": [
                          "type",
                          "coordinates"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Point"
                            ]
                          },
                          "coordinates": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                              "type": "number"
                            }
                          },
                          "bbox": {
                            "type": "array",
                            "minItems": 4,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      {
                        "title": "GeoJSON LineString",
                        "type": "object",
                        "required": [
                          "type",
                          "coordinates"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "LineString"
                            ]
                          },
                          "coordinates": {
                            "type": "array",
                            "minItems": 2,
                            "items": {
                              "type": "array",
                              "minItems": 2,
                              "items": {
                                "type": "number"
                              }
                            }
                          },
                          "bbox": {
                            "type": "array",
                            "minItems": 4,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      {
                        "title": "GeoJSON Polygon",
                        "type": "object",
                        "required": [
                          "type",
                          "coordinates"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Polygon"
                            ]
                          },
                          "coordinates": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "minItems": 4,
                              "items": {
                                "type": "array",
                                "minItems": 2,
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          },
                          "bbox": {
                            "type": "array",
                            "minItems": 4,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      {
                        "title": "GeoJSON MultiPoint",
                        "type": "object",
                        "required": [
                          "type",
                          "coordinates"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "MultiPoint"
                            ]
                          },
                          "coordinates": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "minItems": 2,
                              "items": {
                                "type": "number"
                              }
                            }
                          },
                          "bbox": {
                            "type": "array",
                            "minItems": 4,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      {
                        "title": "GeoJSON MultiLineString",
                        "type": "object",
                        "required": [
                          "type",
                          "coordinates"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "MultiLineString"
                            ]
                          },
                          "coordinates": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "minItems": 2,
                              "items": {
                                "type": "array",
                                "minItems": 2,
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          },
                          "bbox": {
                            "type": "array",
                            "minItems": 4,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      {
                        "title": "GeoJSON MultiPolygon",
                        "type": "object",
                        "required": [
                          "type",
                          "coordinates"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "MultiPolygon"
                            ]
                          },
                          "coordinates": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "minItems": 4,
                                "items": {
                                  "type": "array",
                                  "minItems": 2,
                                  "items": {
                                    "type": "number"
                                  }
                                }
                              }
                            }
                          },
                          "bbox": {
                            "type": "array",
                            "minItems": 4,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      {
                        "title": "GeoJSON GeometryCollection",
                        "type": "object",
                        "required": [
                          "type",
                          "geometries"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "GeometryCollection"
                            ]
                          },
                          "geometries": {
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "title": "GeoJSON Point",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "coordinates"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Point"
                                      ]
                                    },
                                    "coordinates": {
                                      "type": "array",
                                      "minItems": 2,
                                      "items": {
                                        "type": "number"
                                      }
                                    },
                                    "bbox": {
                                      "type": "array",
                                      "minItems": 4,
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                },
                                {
                                  "title": "GeoJSON LineString",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "coordinates"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "LineString"
                                      ]
                                    },
                                    "coordinates": {
                                      "type": "array",
                                      "minItems": 2,
                                      "items": {
                                        "type": "array",
                                        "minItems": 2,
                                        "items": {
                                          "type": "number"
                                        }
                                      }
                                    },
                                    "bbox": {
                                      "type": "array",
                                      "minItems": 4,
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                },
                                {
                                  "title": "GeoJSON Polygon",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "coordinates"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Polygon"
                                      ]
                                    },
                                    "coordinates": {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "minItems": 4,
                                        "items": {
                                          "type": "array",
                                          "minItems": 2,
                                          "items": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    },
                                    "bbox": {
                                      "type": "array",
                                      "minItems": 4,
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                },
                                {
                                  "title": "GeoJSON MultiPoint",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "coordinates"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "MultiPoint"
                                      ]
                                    },
                                    "coordinates": {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "minItems": 2,
                                        "items": {
                                          "type": "number"
                                        }
                                      }
                                    },
                                    "bbox": {
                                      "type": "array",
                                      "minItems": 4,
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                },
                                {
                                  "title": "GeoJSON MultiLineString",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "coordinates"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "MultiLineString"
                                      ]
                                    },
                                    "coordinates": {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "minItems": 2,
                                        "items": {
                                          "type": "array",
                                          "minItems": 2,
                                          "items": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    },
                                    "bbox": {
                                      "type": "array",
                                      "minItems": 4,
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                },
                                {
                                  "title": "GeoJSON MultiPolygon",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "coordinates"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "MultiPolygon"
                                      ]
                                    },
                                    "coordinates": {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "minItems": 4,
                                          "items": {
                                            "type": "array",
                                            "minItems": 2,
                                            "items": {
                                              "type": "number"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "bbox": {
                                      "type": "array",
                                      "minItems": 4,
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "bbox": {
                            "type": "array",
                            "minItems": 4,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "bbox": {
                    "type": "array",
                    "minItems": 4,
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        }
      ]
    },
    "Orthography-3.3.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Orthography",
      "type": "object",
      "description": "An orthography is a way of representing a particular language variety in writing. An orthography can include a set of acceptable graphemes (characters), punctuation, and word separators.",
      "required": [
        "graphemes",
        "name"
      ],
      "additionalProperties": true,
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "const": "Orthography",
          "readOnly": true,
          "description": "The type of object. Must be set to `Orthography`."
        },
        "id": {
          "title": "ID",
          "description": "A unique database identifier for this Orthography"
        },
        "abbreviation": {
          "title": "Abbreviation",
          "type": "string",
          "$ref": "#/definitions/Abbreviation-2.1.0.json",
          "description": "An abbreviation for this Orthography"
        },
        "direction": {
          "title": "Text Direction",
          "type": "string",
          "description": "The direction that this orthography is typically written in. If an orthography can be written in more than one direction, you should create a second Orthography for each direction it can be written in. The value of the `direction` field consists of two parts: the horizontal direction and the vertical direction, separated by a hyphen. Horizontal direction may be `ltr` (left-to-right), `rtl` (right-to-left), or `boustrophedon` (alternately left-to-right and right-to-left). Vertical direction may be either `ttb` (top-to-bottom) or `btt` (bottom-to-top).",
          "enum": [
            "ltr-ttb",
            "rtl-ttb",
            "ltr-btt",
            "rtl-btt",
            "boustrophedon-ttb",
            "boustrophedon-btt"
          ],
          "default": "ltr-ttb"
        },
        "graphemes": {
          "title": "Graphemes",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of graphemes, i.e. units of writing within a writing system, for this Orthography. Each grapheme is an attribute, and the value of that attribute is an object containing information about it. Punctuation characters should not be included in this collection (see the `punctuation` attribute instead).",
          "items": {
            "title": "Grapheme",
            "type": "object",
            "description": "An object representing a grapheme",
            "required": [
              "form"
            ],
            "additionalProperties": false,
            "properties": {
              "allographs": {
                "title": "Allographs",
                "type": "array",
                "uniqueItems": true,
                "description": "A list of all the allographs (graphical / writing variants) of the current grapheme. For example, `t` in an English orthography would have the allograph `T`. Generally the lowercase form of a letter should be used as the default.",
                "items": {
                  "title": "Allograph",
                  "type": "string"
                }
              },
              "description": {
                "title": "Description",
                "$ref": "#/definitions/MultiLangString-5.0.0.json",
                "description": "A learner-friendly description of the pronunciation of this grapheme"
              },
              "form": {
                "title": "Grapheme Form",
                "type": "string",
                "minLength": 1,
                "description": "The written form of this grapheme. Graphemes should include their diacritics. For example, `c` and `č` should be considered separate graphemes, unless they are allographs. Do not include graphemes for characters that only occur as part of a digraph (or trigraph, etc.). For example, standard Swahili orthography has a grapheme `ch`, but no grapheme `c` by itself, so `c` would not be listed as a grapheme, only `ch`."
              },
              "name": {
                "title": "Grapheme Name",
                "type": "string",
                "description": "The name of this grapheme, if any"
              },
              "pronunciation": {
                "title": "Pronunciation",
                "description": "The pronunciation, or, if there is more than one, a list of the possible pronunciations of this grapheme, in IPA. It may be difficult or impossible to fill in this field for all orthographies (like English).",
                "oneOf": [
                  {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "title": "Pronunciation",
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        },
        "link": {
          "title": "Link",
          "type": "string",
          "format": "uri",
          "description": "A URL where a presentational format for this resource may be viewed"
        },
        "name": {
          "title": "Orthography Name",
          "$ref": "#/definitions/MultiLangString-5.0.0.json",
          "description": "The name of this orthography (e.g. `Practical`, `Phonemic`), optionally in multiple languages (e.g. both `Phonemic` and `Fonémica`). The name of the orthography must be provided in at least one language."
        },
        "notes": {
          "title": "Notes",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of notes about this Orthography",
          "items": {
            "title": "Note",
            "type": "object",
            "$ref": "#/definitions/Note-5.0.0.json",
            "description": "A note about this orthography"
          }
        },
        "punctuation": {
          "title": "Punctuation",
          "type": "array",
          "uniqueItems": true,
          "description": "A list of all the punctuation characters in this orthography, including white space and non-breaking characters.",
          "items": {
            "title": "Punctuation Character",
            "type": "string",
            "minLength": 1
          }
        },
        "tags": {
          "title": "Tags",
          "type": "object",
          "$ref": "#/definitions/Tags-2.1.0.json",
          "description": "A set of tags for this orthography"
        },
        "url": {
          "title": "URL",
          "type": "string",
          "format": "uri",
          "description": "A URL where this Orthography may be accessed in JSON format"
        }
      },
      "examples": [
        {
          "abbreviation": "Mod",
          "direction": "ltr-ttb",
          "graphemes": [
            {
              "allographs": [
                "A"
              ],
              "description": "Pronounced like the a in \u0027hat\u0027",
              "form": "a",
              "pronunciation": [
                "a"
              ]
            },
            {
              "form": "aa",
              "pronunciation": [
                "aː"
              ]
            },
            {
              "allographs": [
                "B"
              ],
              "form": "b",
              "pronunciation": [
                "pˀ"
              ]
            },
            {
              "allographs": [
                "C"
              ],
              "form": "c",
              "pronunciation": [
                "t͡ʃ"
              ]
            },
            {
              "allographs": [
                "D"
              ],
              "form": "d",
              "pronunciation": [
                "tˀ"
              ]
            }
          ],
          "name": "Modern",
          "notes": [
            {
              "text": "This orthography was originally developed by Julien Granberry, and later modified in line with suggestions from Daniel W. Hieber."
            }
          ],
          "punctuation": [
            " ",
            ".",
            "?",
            "!",
            "\u0027",
            "\""
          ],
          "type": "Orthography",
          "url": "https://data.digitallinguistics.io/languages/Chitimacha/orthographies/Modern"
        }
      ]
    },
    "Phoneme-5.0.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Phoneme",
      "type": "object",
      "description": "An object representing a single phoneme in a language, and its allophones.",
      "required": [
        "ipa"
      ],
      "additionalProperties": true,
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "const": "Phoneme",
          "readOnly": true,
          "description": "The type of object. Must be set to `Phoneme`."
        },
        "airstream": {
          "title": "Airstream Mechanism",
          "type": "string",
          "description": "The airstream mechanism used to pronounce this Phoneme. `Pulmonic` (egressive) sounds are created by pushing air out of the lungs. `Ejective` sounds are glottalic egressive sounds where the air column is compressed by upward movement of the glottis. `Implosive` sounds are glottalic ingressives where air is pulled in by a downward movement of the glottis. `Click` sounds, i.e. lingual / velaric ingressive sounds, pull air in with a downward movement of the tongue.",
          "enum": [
            "click",
            "ejective",
            "implosive",
            "ingressive",
            "pulmonic"
          ],
          "default": "pulmonic"
        },
        "allophones": {
          "title": "Allophones",
          "type": "array",
          "uniqueItems": true,
          "description": "A list of allophones of this phoneme, following the same format as for Phoneme objects.",
          "items": {
            "title": "Allophone",
            "type": "object",
            "$ref": "#/definitions/Phoneme-5.0.0.json",
            "description": "An allophone of this phoneme. Allophones are formatted exactly the same way as Phoneme objects."
          }
        },
        "backness": {
          "title": "Backness",
          "type": "string",
          "description": "Describes the backness of a vowel.",
          "enum": [
            "front",
            "near-front",
            "central",
            "near-back",
            "back"
          ]
        },
        "bibliography": {
          "title": "Bibliography",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of citations to bibliographic sources about this phoneme",
          "items": {
            "title": "Citation",
            "type": "object",
            "$ref": "#/definitions/Citation-1.0.0.json",
            "description": "A citation to a bibliographic source about this phoneme"
          }
        },
        "features": {
          "title": "Features",
          "type": "array",
          "uniqueItems": true,
          "description": "A list of the phonemically distinctive features of this Phoneme. These are what are listed under `diacritics` in the IPA chart. For example, if a language distinguishes between a palatalized `/t/` and a plain `/t/`, the first should include the feature `palatalized` and the second `plain` (or no features). Note that most features are also a manner of articulation as well, so it up to the linguist to decide when a given phonetic detail is a manner, or when it is a feature (i.e. a diacritic). For example, a language might distinguish phonemically between a palatal plosive `/c/` and a palatalized plosive `/tʲ/`. The first would list `palatal` as its place of articulation, while the second would list `palatalized` as a distinctive feature. Do not include features here if they are already used for manner, unless your analysis is that this feature is *both* a manner and a feature of this phoneme, e.g. a palatalized palatal stop. This field is used primarily for consonants, but may also apply to vowels as well (e.g. the `close` and `open` features).",
          "items": {
            "title": "Feature",
            "type": "string",
            "description": "A phonemically distinctive feature, taken from the set of features (diacritics) in the IPA chart.",
            "enum": [
              "advanced",
              "advanced tongue root",
              "affricativized",
              "alveolar",
              "apical",
              "aspirated",
              "breathy",
              "centralized",
              "close",
              "creaky",
              "dental",
              "fortis",
              "fricativized",
              "labialized",
              "laminal",
              "lateral release",
              "lax",
              "lenis",
              "lightly aspirated",
              "linguolabial",
              "lowered",
              "mid-centralized",
              "nasal release",
              "nasalized",
              "no release",
              "non-syllabic",
              "open",
              "palatalized",
              "pharyngealized",
              "plain",
              "raised",
              "retracted",
              "retracted tongue root",
              "retroflexed",
              "rhotic",
              "rounded",
              "sibilant",
              "syllabic",
              "tense",
              "unrounded",
              "velarized",
              "voiced",
              "voiceless",
              "weakly aspirated"
            ]
          }
        },
        "height": {
          "title": "Height",
          "type": "string",
          "description": "The height of a vowel",
          "enum": [
            "close",
            "near-close",
            "close-mid",
            "mid",
            "open-mid",
            "near-open",
            "open"
          ]
        },
        "ipa": {
          "title": "IPA Transcription",
          "type": "string",
          "minLength": 1,
          "description": "The IPA representation of this phoneme / allophone. Transcriptions of phonemes should contain only the phonemically contrastive sounds. Transcriptions of allophones should contain only the regularly-conditioned alternations."
        },
        "length": {
          "title": "Length",
          "type": "string",
          "description": "The length of this phoneme, whether for consonants (e.g. `short` vs. `geminate`) or vowels",
          "enum": [
            "extra short",
            "short",
            "half long",
            "long",
            "extra long",
            "geminate"
          ]
        },
        "manner": {
          "title": "Manner of Articulation",
          "type": "string",
          "description": "The manner of articulation, for consonants. Only one manner of articulation may be listed. Additional manners must be listed under the `features` attribute. For example, the lateral fricative `ɬ` might have a `manner` set to `fricative` and a feature `lateral`, or vice versa, depending on the linguist’s analysis.",
          "enum": [
            "affricate",
            "approximate",
            "flap",
            "fricative",
            "lateral",
            "nasal",
            "plosive",
            "tap",
            "trill"
          ]
        },
        "notes": {
          "title": "Notes",
          "type": "array",
          "uniqueItems": true,
          "description": "Notes about this Phoneme",
          "items": {
            "title": "Note",
            "type": "object",
            "$ref": "#/definitions/Note-5.0.0.json",
            "description": "A Note about this Phoneme"
          }
        },
        "place": {
          "title": "Place of Articulation",
          "type": "string",
          "description": "The place of articulation for consonants. Only one place of articulation may be listed. Additional places must be listed as features under the `features` attribute. For example, a palatalized alveolar `/tʲ/` would list `alveolar` under `manner`, and `palatalized` under `features`.",
          "enum": [
            "bilabial",
            "labiodental",
            "labiovelar",
            "dental",
            "alveolar",
            "lateral",
            "post-alveolar",
            "alveo-palatal",
            "palato-alveolar",
            "retroflex",
            "palatal",
            "velar",
            "uvular",
            "pharyngeal",
            "glottal",
            "epiglottal"
          ]
        },
        "rounding": {
          "title": "Rounding",
          "type": "string",
          "description": "A description of the roundedness of a vowel. Only one type of roundedness may be listed. Rounded vowels may be listed as simply `rounded`, or more specifically as `protruded` or `compressed`.",
          "enum": [
            "compressed",
            "protruded",
            "rounded",
            "unrounded"
          ]
        },
        "tags": {
          "title": "Tags",
          "type": "object",
          "$ref": "#/definitions/Tags-2.1.0.json",
          "description": "A set of tags for this phoneme"
        },
        "target1": {
          "title": "Dipthong / Triphthong Target 1",
          "type": "object",
          "$ref": "#/definitions/Phoneme-5.0.0.json",
          "description": "For diphthongs or triphthongs, this should be a Phoneme object representing the features of the first target in the pronunciation of the diphthong/triphthong."
        },
        "target2": {
          "title": "Dipthong / Triphthong Target 2",
          "type": "object",
          "$ref": "#/definitions/Phoneme-5.0.0.json",
          "description": "For diphthongs or thriphthongs, this should be a Phoneme object representing the features of the second target in the pronunciation of the diphthong/triphthong."
        },
        "target3": {
          "title": "Triphthong Target 3",
          "type": "object",
          "$ref": "#/definitions/Phoneme-5.0.0.json",
          "description": "For triphthongs, this should be a Phoneme object representing the features of the third target in the pronunciation of the triphthong."
        },
        "tone": {
          "title": "Tone",
          "type": "string",
          "description": "An abstract representation of the tone of this phoneme, e.g. `H`, `13`, `falling`, etc."
        },
        "voicing": {
          "title": "Voicing",
          "type": "string",
          "description": "Whether the phoneme is voiced, voiceless, or partially voiced",
          "enum": [
            "semivoiced",
            "voiced",
            "voiceless"
          ]
        }
      },
      "examples": [
        {
          "airstream": "pulmonic",
          "ipa": "t",
          "manner": "plosive",
          "place": "alveolar",
          "voicing": "voiceless"
        },
        {
          "airstream": "pulmonic",
          "ipa": "t͡ʃ",
          "manner": "affricate",
          "place": "post-alveolar",
          "voicing": "voiceless"
        },
        {
          "airstream": "ejective",
          "ipa": "t͡ʃˀ",
          "manner": "affricate",
          "place": "post-alveolar",
          "voicing": "voiceless"
        }
      ]
    },
    "Word-4.3.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Word",
      "type": "object",
      "description": "A Word object represents a specific token in a text, rather than an abstract lexeme (see the Lexeme object for that).",
      "additionalProperties": true,
      "required": [
        "transcription"
      ],
      "properties": {
        "analysis": {
          "title": "Analysis",
          "$ref": "#/definitions/Transcription-2.1.0.json",
          "description": "The morpheme breakdown for the word"
        },
        "type": {
          "title": "Type",
          "type": "string",
          "const": "Word",
          "readOnly": true,
          "description": "The type of object. Must be set to `Word`."
        },
        "endTime": {
          "title": "End Time",
          "type": "number",
          "minimum": 0.001,
          "description": "The point in time in the text at which the word token stop being spoken, formatted as seconds and milliseconds (SS.MMM). This property is useful for phonetic data analysis."
        },
        "gloss": {
          "title": "Gloss",
          "$ref": "#/definitions/MultiLangString-5.0.0.json",
          "description": "A Leipzig-style gloss for this Word. This does not need to be supplied if it can be generated automatically from the glosses at the morpheme level. May be in multiple languages."
        },
        "key": {
          "title": "Key",
          "type": "string",
          "pattern": "^[(a-z)|(A-Z)|(0-9)]+[-_\\.][0-9]{1,3}[-_\\.][0-9]{1,2}$",
          "description": "A key that uniquely identifies this word token within the Text. The key for a Word consists of the abbreviation of the text, a period, dash, or underscore, the number of Utterance within the text, another period, dash, or underscore, and then the number of this word within the Utterance (indexing starts at 1). For example, for the fourth word of the third Utterance of a text with the abbreviation `A`, the key would be `A.3.4`. Keys should be unique within a corpus."
        },
        "literal": {
          "title": "Literal Translation",
          "$ref": "#/definitions/Translation-3.0.0.json",
          "description": "A literal translation of the word at the level of the morpheme token"
        },
        "morphemes": {
          "title": "Morphemes / Components",
          "type": "array",
          "uniqueItems": false,
          "description": "A collection of the components (morphemes, lexemes) in this Word. Components may be repeated if the same morpheme appears twice in the Word.",
          "items": {
            "title": "Morpheme",
            "type": "object",
            "$ref": "#/definitions/Morpheme-4.0.0.json",
            "description": "An object representing this morpheme. This is *not* an object representing a lexeme (the abstract type). It represents the specific morpheme token (the particular instance in speech) instead."
          }
        },
        "notes": {
          "title": "Notes",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of notes about this token",
          "items": {
            "title": "Note",
            "type": "object",
            "$ref": "#/definitions/Note-5.0.0.json",
            "description": "A Note about this token"
          }
        },
        "phonemes": {
          "title": "Phonemes",
          "type": "array",
          "uniqueItems": false,
          "description": "An array of the phones (phoneme tokens) in this word, in IPA. Each phone should appear in order, and does not have to be unique.",
          "items": {
            "title": "Phone (Phoneme Token)",
            "type": "object",
            "description": "An IPA representation of this phoneme. The `phoneme` field is required, but the `allophone` field is optional, for use only when you need to specify that this phoneme is being realized as a particular phoneme. Both `phoneme` and `allophone` must be in IPA rather than a practical orthography.",
            "required": [
              "phoneme"
            ],
            "additionalProperties": true,
            "properties": {
              "allophone": {
                "title": "Allophone",
                "type": "string",
                "description": "This property may be used to specify which allophone this particular phoneme token is. Must be written in IPA."
              },
              "endTime": {
                "title": "End Time",
                "type": "number",
                "minimum": 0.001,
                "description": "The point in time in the text at which this phone stops being pronounced. This property is primarily useful for phonetic data analysis."
              },
              "notes": {
                "title": "Notes",
                "type": "array",
                "uniqueItems": true,
                "description": "A collection of notes about this phone",
                "items": {
                  "title": "Note",
                  "type": "object",
                  "$ref": "#/definitions/Note-5.0.0.json",
                  "description": "A note about this phone. Useful for one-time observations of interesting allophonic variation in the data."
                }
              },
              "phoneme": {
                "title": "Phoneme",
                "type": "string",
                "description": "An IPA representation of this phoneme token. Must be a representation of the abstract phoneme rather than the particular allophone (use the `allophone` property for that insetad)."
              },
              "startTime": {
                "title": "Start Time",
                "type": "number",
                "minimum": 0,
                "description": "The point in time in the text at which this phone starts being pronounced. This property is primarily useful for phonetic data analysis. The `endTime` property is not necessarily required if the `startTime` property is present (this is useful when the endTime of one phone is the same as the startTime of the next)."
              },
              "tags": {
                "title": "Tags",
                "type": "object",
                "$ref": "#/definitions/Tags-2.1.0.json",
                "description": "A set of tags for this phone"
              }
            }
          }
        },
        "startTime": {
          "title": "Start Time",
          "type": "number",
          "minimum": 0,
          "description": "The point in time in the text at which this word token starts being uttered, formatted as seconds and milliseconds (SS.MMM). This property is primarily useful for phonetic data analysis. The `endTime` property is not necessarily required if the `startTime` property is present (this is useful when the endTime of one word token is the same as the startTime of the next)."
        },
        "tags": {
          "title": "Tags",
          "type": "object",
          "$ref": "#/definitions/Tags-2.1.0.json",
          "description": "A set of tags for this word token"
        },
        "transcription": {
          "title": "Transcription",
          "type": "object",
          "minProperties": 1,
          "$ref": "#/definitions/Transcription-2.1.0.json",
          "description": "A transcription of this word token, optionally in multiple orthographies. A transcription must be provided in at least one orthography."
        },
        "translation": {
          "title": "Translation",
          "type": "object",
          "$ref": "#/definitions/Translation-3.0.0.json",
          "description": "A translation of this word, optionally in multiple languages. Note that the translation is not the same as a gloss. Use the translation field for free, natural language translations of a word. There is a separate field for literal translations.; use the gloss field for Leipzig-style glosses only."
        }
      },
      "examples": [
        {
          "type": "Word",
          "endtime": 1.01,
          "gloss": "man",
          "key": "A1_1_2",
          "analysis": {
            "transcription": "man"
          },
          "literal": {
            "eng": "man"
          },
          "morphemes": [
            {
              "gloss": "man",
              "lexeme": {
                "key": "qasi"
              },
              "transcription": {
                "APA": "ʔasi",
                "IPA": "ʔasi",
                "Mod": "qasi"
              }
            }
          ],
          "phonemes": [
            {
              "phoneme": "ʔ"
            },
            {
              "phoneme": "a"
            },
            {
              "phoneme": "s"
            },
            {
              "phoneme": "i"
            }
          ],
          "startTime": 1,
          "tags": {
            "role": "subject"
          },
          "transcription": {
            "APA": "ʔasi",
            "IPA": "ʔasi",
            "Mod": "qasi"
          },
          "translation": {
            "eng": "a man"
          }
        }
      ]
    },
    "Morpheme-4.0.0.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Morpheme Token",
      "type": "object",
      "description": "A *morpheme token* is a particular instance of a morpheme in a text. In DLx, the primary function of the Morpheme object is to provide a concise, short description of each token of a morpheme in a corpus - its form, its gloss, and a reference to a lexeme where more information can be found.",
      "required": [
        "transcription",
        "gloss"
      ],
      "additionalProperties": true,
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "const": "Morpheme",
          "readOnly": true,
          "description": "The type of object. Must be set to `Morpheme`."
        },
        "gloss": {
          "title": "Gloss",
          "$ref": "#/definitions/MultiLangString-5.0.0.json",
          "description": "A gloss for this morpheme, optionally in multiple languages. The gloss must be provided in at least one language. The gloss of a grammatical morpheme must be written in CAPS, for human readability."
        },
        "lexeme": {
          "title": "Lexeme (Database Reference)",
          "type": "object",
          "$ref": "#/definitions/DatabaseReference-4.3.0.json",
          "description": "A database reference to a lexeme where more information about this morpheme may be found"
        },
        "notes": {
          "title": "Notes",
          "type": "array",
          "uniqueItems": true,
          "description": "A collection of notes about this morpheme token",
          "items": {
            "title": "Note",
            "type": "object",
            "$ref": "#/definitions/Note-5.0.0.json",
            "description": "A note about this morpheme token"
          }
        },
        "tags": {
          "title": "Tags",
          "type": "object",
          "$ref": "#/definitions/Tags-2.1.0.json",
          "description": "A set of tags for this morpheme token"
        },
        "transcription": {
          "title": "Transcription",
          "type": "object",
          "minProperties": 1,
          "$ref": "#/definitions/Transcription-2.1.0.json",
          "description": "A transcription of this morpheme token. Should be a phonemic transcription of this particular token/allomorph, rather than an abstract representation of the morpheme. Do not include any leading or trailing tokens such as hyphens or equal signs."
        }
      },
      "examples": [
        {
          "gloss": "man",
          "lexeme": {
            "key": "qasi"
          },
          "tags": {
            "role": "subject"
          },
          "transcription": {
            "APA": "ʔasi",
            "IPA": "ʔasi",
            "Mod": "qasi"
          },
          "type": "Morpheme"
        },
        {
          "gloss": "dog",
          "lexeme": {
            "key": "chisese"
          },
          "transcription": {
            "IPA": "sɛ́ɛsɛ",
            "Swa": "sese",
            "Eke": "séese"
          },
          "type": "Morpheme"
        }
      ]
    }
  }
}