{
  "title": "A JSON Schema for Swagger 2.0 API.",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "required": [
    "swagger",
    "info",
    "paths"
  ],
  "definitions": {
    "info": {
      "type": "object",
      "description": "General information about the API.",
      "required": [
        "version",
        "title"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "version": {
          "type": "string",
          "description": "A semantic version number of the API."
        },
        "title": {
          "type": "string",
          "description": "A unique and precise title of the API."
        },
        "description": {
          "type": "string",
          "description": "A longer description of the API. Should be different from the title."
        },
        "termsOfService": {
          "type": "string",
          "description": "The terms of service for the API."
        },
        "contact": {
          "type": "object",
          "description": "Contact information for the owners of the API.",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "The identifying name of the contact person/organization."
            },
            "url": {
              "type": "string",
              "description": "The URL pointing to the contact information.",
              "format": "uri"
            },
            "email": {
              "type": "string",
              "description": "The email address of the contact person/organization.",
              "format": "email"
            }
          }
        },
        "license": {
          "type": "object",
          "required": [
            "name"
          ],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the license type. It\u0027s encouraged to use an OSI compatible license."
            },
            "url": {
              "type": "string",
              "description": "The URL pointing to the license.",
              "format": "uri"
            }
          }
        }
      }
    },
    "example": {
      "type": "object",
      "patternProperties": {
        "^[a-z0-9-]+/[a-z0-9-+]+$": {}
      },
      "additionalProperties": false
    },
    "mimeType": {
      "type": "string",
      "pattern": "^[a-z0-9-]+/[a-z0-9-+]+$",
      "description": "The MIME type of the HTTP message."
    },
    "operation": {
      "type": "object",
      "required": [
        "responses"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "summary": {
          "type": "string",
          "description": "A brief summary of the operation."
        },
        "description": {
          "type": "string",
          "description": "A longer description of the operation."
        },
        "operationId": {
          "type": "string",
          "description": "A friendly name of the operation"
        },
        "produces": {
          "type": "array",
          "description": "A list of MIME types the API can produce.",
          "additionalItems": false,
          "items": {
            "$ref": "#/definitions/mimeType"
          }
        },
        "parameters": {
          "type": "array",
          "description": "The parameters needed to send a valid API call.",
          "minItems": 1,
          "additionalItems": false,
          "items": {
            "$ref": "#/definitions/parameter"
          }
        },
        "responses": {
          "$ref": "#/definitions/responses"
        },
        "schemes": {
          "type": "array",
          "description": "The transfer protocol of the API.",
          "items": {
            "type": "string",
            "enum": [
              "http",
              "https",
              "ws",
              "wss"
            ]
          }
        }
      }
    },
    "responses": {
      "type": "object",
      "description": "Response objects names can either be any valid HTTP status code or \u0027default\u0027.",
      "minProperties": 1,
      "additionalProperties": false,
      "patternProperties": {
        "^([0-9]+)$|^(default)$": {
          "$ref": "#/definitions/response"
        },
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "response": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/schema"
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schema"
          }
        },
        "examples": {
          "$ref": "#/definitions/example"
        }
      },
      "additionalProperties": false
    },
    "vendorExtension": {
      "description": "Any property starting with x- is valid.",
      "additionalProperties": true,
      "additionalItems": true
    },
    "parameter": {
      "type": "object",
      "required": [
        "name",
        "in"
      ],
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "query",
            "header",
            "path",
            "formData",
            "body"
          ],
          "default": "query"
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use."
        },
        "required": {
          "type": "boolean",
          "description": "Determines whether or not this parameter is required or optional."
        },
        "schema": {
          "$ref": "#/definitions/schema"
        }
      }
    },
    "schema": {
      "type": "object",
      "description": "A deterministic version of a JSON Schema object.",
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "$ref": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "title": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_title"
        },
        "description": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_description"
        },
        "default": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_default"
        },
        "multipleOf": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_multipleOf"
        },
        "maximum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
        },
        "minLength": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0"
        },
        "pattern": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_pattern"
        },
        "discriminator": {
          "type": "string"
        },
        "xml": {
          "$ref": "#/definitions/xml"
        },
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/schema"
              }
            }
          ],
          "default": {}
        },
        "maxItems": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
        },
        "minItems": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0"
        },
        "uniqueItems": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_uniqueItems"
        },
        "maxProperties": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
        },
        "minProperties": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0"
        },
        "required": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_stringArray"
        },
        "definitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/schema"
          },
          "default": {}
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/schema"
          },
          "default": {}
        },
        "enum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_enum"
        },
        "type": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_type"
        },
        "allOf": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/schema"
          }
        }
      }
    },
    "xml": {
      "properties": {
        "namespace": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "attribute": {
          "type": "boolean"
        },
        "wrapped": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "http:__json-schema.org_draft-04_schema_properties_title": {
      "type": "string"
    },
    "http:__json-schema.org_draft-04_schema_properties_description": {
      "type": "string"
    },
    "http:__json-schema.org_draft-04_schema_properties_default": {},
    "http:__json-schema.org_draft-04_schema_properties_multipleOf": {
      "type": "number",
      "minimum": 0,
      "exclusiveMinimum": true
    },
    "http:__json-schema.org_draft-04_schema_properties_maximum": {
      "type": "number"
    },
    "http:__json-schema.org_draft-04_schema_properties_exclusiveMaximum": {
      "type": "boolean",
      "default": false
    },
    "http:__json-schema.org_draft-04_schema_properties_minimum": {
      "type": "number"
    },
    "http:__json-schema.org_draft-04_schema_properties_exclusiveMinimum": {
      "type": "boolean",
      "default": false
    },
    "http:__json-schema.org_draft-04_schema_definitions_positiveInteger": {
      "type": "integer",
      "minimum": 0
    },
    "http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0": {
      "allOf": [
        {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
        },
        {
          "default": 0
        }
      ]
    },
    "http:__json-schema.org_draft-04_schema_properties_pattern": {
      "type": "string",
      "format": "regex"
    },
    "http:__json-schema.org_draft-04_schema_properties_uniqueItems": {
      "type": "boolean",
      "default": false
    },
    "http:__json-schema.org_draft-04_schema_definitions_stringArray": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "http:__json-schema.org_draft-04_schema_properties_enum": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true
    },
    "http:__json-schema.org_draft-04_schema_properties_type": {
      "anyOf": [
        {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_simpleTypes"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_simpleTypes"
          },
          "minItems": 1,
          "uniqueItems": true
        }
      ]
    },
    "http:__json-schema.org_draft-04_schema_definitions_simpleTypes": {
      "enum": [
        "array",
        "boolean",
        "integer",
        "null",
        "number",
        "object",
        "string"
      ]
    }
  },
  "additionalProperties": false,
  "patternProperties": {
    "^x-": {
      "$ref": "#/definitions/vendorExtension"
    }
  },
  "properties": {
    "swagger": {
      "type": "number",
      "enum": [
        2.0
      ],
      "description": "The Swagger version of this document."
    },
    "info": {
      "$ref": "#/definitions/info"
    },
    "host": {
      "type": "string",
      "format": "uri",
      "description": "The fully qualified URI to the host of the API."
    },
    "basePath": {
      "type": "string",
      "pattern": "^/",
      "description": "The base path to the API. Example: \u0027/api\u0027."
    },
    "schemes": {
      "type": "array",
      "description": "The transfer protocol of the API.",
      "items": {
        "type": "string",
        "enum": [
          "http",
          "https",
          "ws",
          "wss"
        ]
      }
    },
    "consumes": {
      "type": "array",
      "description": "A list of MIME types accepted by the API.",
      "items": {
        "$ref": "#/definitions/mimeType"
      }
    },
    "produces": {
      "type": "array",
      "description": "A list of MIME types the API can produce.",
      "items": {
        "$ref": "#/definitions/mimeType"
      }
    },
    "paths": {
      "type": "object",
      "description": "Relative paths to the individual endpoints. They should be relative to the \u0027basePath\u0027.",
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "additionalProperties": {
        "type": "object",
        "minProperties": 1,
        "additionalProperties": false,
        "patternProperties": {
          "^x-": {
            "$ref": "#/definitions/vendorExtension"
          }
        },
        "properties": {
          "get": {
            "$ref": "#/definitions/operation"
          },
          "put": {
            "$ref": "#/definitions/operation"
          },
          "post": {
            "$ref": "#/definitions/operation"
          },
          "delete": {
            "$ref": "#/definitions/operation"
          },
          "options": {
            "$ref": "#/definitions/operation"
          },
          "head": {
            "$ref": "#/definitions/operation"
          },
          "patch": {
            "$ref": "#/definitions/operation"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/parameter"
            }
          }
        }
      }
    },
    "schemas": {
      "type": "object",
      "description": "One or more JSON objects describing the schemas being consumed and produced by the API.",
      "additionalProperties": {
        "$ref": "#/definitions/schema"
      }
    },
    "security": {
      "type": "array"
    }
  }
}