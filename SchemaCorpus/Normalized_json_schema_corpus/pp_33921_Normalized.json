{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Certificate Document Version 1.2 Schema",
  "id": "https://w3id.org/blockcerts/schema/1.2/certificate-document-1.2.json",
  "description": "The complete certificate document, including the assertion, certificate, and issuer. Doesn\u0027t include the blockchain receipt. This part is hashed and placed on the blockchain",
  "type": "object",
  "definitions": {
    "JsonLdContext": {
      "description": "A link to a valid JSON-LD context file, that maps term names to contexts. Blockchain Certificate contexts may also define JSON-schema to validate Blockchain Certificates against. In a Blockchain Certificate Object, this will almost always be a string:uri to a single context file, but might rarely be an array of links or context objects instead. This schema also allows direct mapping of terms to IRIs by using an object as an option within an array.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "array"
              }
            ]
          }
        }
      ]
    },
    "JsonLdType": {
      "description": "A type or an array of types that the Blockchain Certificate object represents. The first or only item should be \u0027CertificateDocument\u0027, and any others should each be an IRI (usually a URL) corresponding to a definition of the type itself. In almost all cases, there will be only one type: \u0027CertificateDocument\u0027",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "Certificate": {
      "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_certificate-1.2.json"
    },
    "Assertion": {
      "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_assertion-1.2.json"
    },
    "VerificationObject": {
      "type": "object",
      "description": "V1.2 notice: the Blockchain Certificates VerificationObject will change in the next schema version to be consistent with OBI VerificationObjects. This work is in progress.",
      "properties": {
        "attribute-signed": {
          "type": "string",
          "description": "Name of the attribute in the json that is signed by the issuer\u0027s private key. Default is \u0027uid\u0027, referring to the uid attribute."
        },
        "type": {
          "type": "string",
          "enum": [
            "hosted",
            "signed",
            "ECDSA(secp256k1)"
          ],
          "description": "Name of the signing method. Default is \u0027ECDSA(secp256k1)\u0027, referring to the Blockchain Certificates method of signing messages with the issuer\u0027s private key."
        },
        "signer": {
          "type": "string",
          "format": "uri",
          "description": "URI where issuer\u0027s public key is presented. Default is https://[domain]/keys/[org-abbr]-certs-public-key.asc. V1.2 change: this field is optional"
        }
      },
      "required": [
        "attribute-signed",
        "type"
      ]
    },
    "Recipient": {
      "type": "object",
      "properties": {
        "familyName": {
          "type": "string",
          "description": "Family name of the recipient. http://schema.org/Person#familyName"
        },
        "identity": {
          "type": "string",
          "description": "String that represents a recipient\u0027s identity. By default, it is an email address."
        },
        "type": {
          "type": "string",
          "description": "Type of value in the identity field. Default is \u0027email\u0027."
        },
        "hashed": {
          "type": "boolean",
          "description": "Describes if the value in the identity field is hashed or not. We strongly recommend that the issuer hash the identy to protect the recipient."
        },
        "salt": {
          "type": "string",
          "description": "per the OBI standard, if the recipient identity is hashed, then this should contain the string used to salt the hash"
        },
        "publicKey": {
          "type": "string",
          "description": "Bitcoin address (compressed public key, usually 24 characters) of the recipient. V1.2 change: renamed from pubkey"
        },
        "revocationKey": {
          "type": "string",
          "description": "Issuer revocation key for the recipient, optional. Bitcoin address (compressed public key, usually 24 characters) of the recipient."
        },
        "givenName": {
          "type": "string",
          "description": "Given name of the recipient. http://schema.org/Person#givenName"
        }
      },
      "required": [
        "type",
        "familyName",
        "identity",
        "hashed",
        "publicKey",
        "givenName"
      ],
      "additionalProperties": true
    },
    "http:__w3id.org_blockcerts_schema_1.2_certificate-1.2.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Blockchain Certificates Certificate Schema, Version 1.2",
      "description": "Extends the Open Badges Certificate Schema for certificates on the blockchain",
      "type": "object",
      "definitions": {
        "JsonLdContext": {
          "description": "A link to a valid JSON-LD context file, that maps term names to contexts. Blockchain Certificate contexts may also define JSON-schema to validate Blockchain Certificates against. In a Blockchain Certificate Object, this will almost always be a string:uri to a single context file, but might rarely be an array of links or context objects instead. This schema also allows direct mapping of terms to IRIs by using an object as an option within an array.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "array"
                  }
                ]
              }
            }
          ]
        },
        "JsonLdType": {
          "description": "A type or an array of types that the Blockchain Certificate object represents. The first or only item should be \u0027Certificate\u0027, and any others should each be an IRI (usually a URL) corresponding to a definition of the type itself. In almost all cases, there will be only one type: \u0027Certificate\u0027",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "Issuer": {
          "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_issuer-1.2.json"
        }
      },
      "properties": {
        "@context": {
          "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_certificate-1.2.json_definitions_JsonLdContext"
        },
        "type": {
          "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_certificate-1.2.json_definitions_JsonLdType"
        },
        "id": {
          "type": "string",
          "format": "uri",
          "description": "URI link to a JSON that describes the type of certificate. Default format is https://[domain]/criteria/[year]/[month]/[certificate_title].json. V1.2 change: this field is optional."
        },
        "name": {
          "type": "string",
          "description": "Name (or title) of the certificate. V1.2 change: renamed from \u0027title\u0027 to be consistent with OBI schema"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string",
          "pattern": "data:image/png;base64,",
          "description": "Data URI; a base-64 encoded png image of the certificate\u0027s image. https://en.wikipedia.org/wiki/Data_URI_scheme"
        },
        "criteria": {
          "type": "string",
          "format": "uri"
        },
        "issuer": {
          "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_certificate-1.2.json_definitions_Issuer"
        },
        "alignment": {
          "$ref": "#/definitions/https:__openbadgespec.org_v1_schema_badgeclass.json_definitions_AlignmentArray"
        },
        "tags": {
          "$ref": "#/definitions/https:__openbadgespec.org_v1_schema_badgeclass.json_definitions_TagsArray"
        },
        "language": {
          "type": "string",
          "description": "Represents the ieft language and ieft country codes. Format is [ieft_language]-[IEFT_COUNTRY]. V1.2 changes: this field is optional",
          "pattern": "[a-z]{2}-[A-Z]{2}"
        },
        "subtitle": {
          "type": "string",
          "description": "Subtitle of the certificate. V1.2 changes: this type is now string, and this field is optional"
        }
      },
      "required": [
        "name",
        "description",
        "image",
        "issuer"
      ],
      "additionalProperties": true
    },
    "http:__w3id.org_blockcerts_schema_1.2_issuer-1.2.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Blockchain Certificates Issuer Schema, Version 1.2",
      "description": "Extends the Open Badges Issuer Schema for certificates on the blockchain",
      "type": "object",
      "definitions": {
        "JsonLdContext": {
          "description": "A link to a valid JSON-LD context file, that maps term names to contexts. Blockchain Certificate contexts may also define JSON-schema to validate Blockchain Certificates against. In a Blockchain Certificate Object, this will almost always be a string:uri to a single context file, but might rarely be an array of links or context objects instead. This schema also allows direct mapping of terms to IRIs by using an object as an option within an array.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "array"
                  }
                ]
              }
            }
          ]
        },
        "JsonLdType": {
          "description": "A type or an array of types that the Blockchain Certificate object represents. The first or only item should be \u0027Issuer\u0027, and any others should each be an IRI (usually a URL) corresponding to a definition of the type itself. In almost all cases, there will be only one type: \u0027Issuer\u0027",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "BCBadgeImage": {
          "description": "An image representative of the entity. This overrides BadgeImage from OBI because oneOf, compared to anyOf, was failing validation",
          "anyOf": [
            {
              "$ref": "#/definitions/https:__openbadgespec.org_v1_schema_issuer.json_definitions_ImageDataUrl"
            },
            {
              "type": "string",
              "format": "uri"
            }
          ]
        }
      },
      "properties": {
        "@context": {
          "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_issuer-1.2.json_definitions_JsonLdContext"
        },
        "type": {
          "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_issuer-1.2.json_definitions_JsonLdType"
        },
        "id": {
          "type": "string",
          "format": "uri",
          "description": "Link to a JSON that details the issuer\u0027s issuing and recovation keys. Default is https://[domain]/issuer/[org_abbr]-issuer.json. Included for (near) backward compatibility with open badges specification 1.1"
        },
        "image": {
          "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_issuer-1.2.json_definitions_BCBadgeImage"
        },
        "name": {
          "description": "Human-readable name of the issuing entity",
          "type": "string"
        },
        "url": {
          "description": "The URL of the issuer\u0027s website or homepage",
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string",
          "description": "A text description of the issuing organization"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Contact address for the individual or organization."
        },
        "revocationList": {
          "type": "string",
          "format": "uri"
        }
      },
      "required": [
        "name",
        "url",
        "id"
      ],
      "additionalProperties": true
    },
    "https:__openbadgespec.org_v1_schema_issuer.json_definitions_ImageDataUrl": {
      "type": "string",
      "pattern": "^data:"
    },
    "http:__w3id.org_blockcerts_schema_1.2_issuer-1.2.json_definitions_JsonLdContext": {
      "description": "A link to a valid JSON-LD context file, that maps term names to contexts. Blockchain Certificate contexts may also define JSON-schema to validate Blockchain Certificates against. In a Blockchain Certificate Object, this will almost always be a string:uri to a single context file, but might rarely be an array of links or context objects instead. This schema also allows direct mapping of terms to IRIs by using an object as an option within an array.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "array"
              }
            ]
          }
        }
      ]
    },
    "http:__w3id.org_blockcerts_schema_1.2_issuer-1.2.json_definitions_JsonLdType": {
      "description": "A type or an array of types that the Blockchain Certificate object represents. The first or only item should be \u0027Issuer\u0027, and any others should each be an IRI (usually a URL) corresponding to a definition of the type itself. In almost all cases, there will be only one type: \u0027Issuer\u0027",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "http:__w3id.org_blockcerts_schema_1.2_issuer-1.2.json_definitions_BCBadgeImage": {
      "description": "An image representative of the entity. This overrides BadgeImage from OBI because oneOf, compared to anyOf, was failing validation",
      "anyOf": [
        {
          "$ref": "#/definitions/https:__openbadgespec.org_v1_schema_issuer.json_definitions_ImageDataUrl"
        },
        {
          "type": "string",
          "format": "uri"
        }
      ]
    },
    "http:__w3id.org_blockcerts_schema_1.2_certificate-1.2.json_definitions_JsonLdContext": {
      "description": "A link to a valid JSON-LD context file, that maps term names to contexts. Blockchain Certificate contexts may also define JSON-schema to validate Blockchain Certificates against. In a Blockchain Certificate Object, this will almost always be a string:uri to a single context file, but might rarely be an array of links or context objects instead. This schema also allows direct mapping of terms to IRIs by using an object as an option within an array.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "array"
              }
            ]
          }
        }
      ]
    },
    "http:__w3id.org_blockcerts_schema_1.2_certificate-1.2.json_definitions_JsonLdType": {
      "description": "A type or an array of types that the Blockchain Certificate object represents. The first or only item should be \u0027Certificate\u0027, and any others should each be an IRI (usually a URL) corresponding to a definition of the type itself. In almost all cases, there will be only one type: \u0027Certificate\u0027",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "http:__w3id.org_blockcerts_schema_1.2_certificate-1.2.json_definitions_Issuer": {
      "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_issuer-1.2.json"
    },
    "https:__openbadgespec.org_v1_schema_badgeclass.json_definitions_AlignmentArray": {
      "description": "List of objects describing which educational standards this badge aligns to, if any, and linking to the appropriate standard.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/https:__openbadgespec.org_v1_schema_badgeclass.json_definitions_AlignmentObject"
      }
    },
    "https:__openbadgespec.org_v1_schema_badgeclass.json_definitions_AlignmentObject": {
      "description": "Each object in an alignment array is an object that describes a particular standard or standard element and provides an appropriate link",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "url"
      ]
    },
    "https:__openbadgespec.org_v1_schema_badgeclass.json_definitions_TagsArray": {
      "description": "An array of strings. TagsArray is not a controlled vocabulary; it\u0027s a folksonomy",
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true
    },
    "http:__w3id.org_blockcerts_schema_1.2_assertion-1.2.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Blockchain Certificates Assertion Schema, Version 1.2",
      "description": "Extends the Open Badges Assertion Schema for certificates on the blockchain",
      "type": "object",
      "definitions": {
        "JsonLdContext": {
          "description": "A link to a valid JSON-LD context file, that maps term names to contexts. Blockchain Certificate contexts may also define JSON-schema to validate Blockchain Certificates against. In a Blockchain Certificate Object, this will almost always be a string:uri to a single context file, but might rarely be an array of links or context objects instead. This schema also allows direct mapping of terms to IRIs by using an object as an option within an array.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "array"
                  }
                ]
              }
            }
          ]
        },
        "JsonLdType": {
          "description": "A type or an array of types that the Blockchain Certificate object represents. The first or only item should be \u0027Assertion\u0027, and any others should each be an IRI (usually a URL) corresponding to a definition of the type itself. In almost all cases, there will be only one type: \u0027Assertion\u0027",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      },
      "properties": {
        "@context": {
          "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_assertion-1.2.json_definitions_JsonLdContext"
        },
        "type": {
          "$ref": "#/definitions/http:__w3id.org_blockcerts_schema_1.2_assertion-1.2.json_definitions_JsonLdType"
        },
        "id": {
          "type": "string",
          "format": "uri",
          "description": "URI that links to the certificate on the viewer."
        },
        "uid": {
          "type": "string",
          "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
          "description": "Unique identifier, in GUID format. V1.2 change: string pattern changed to guid"
        },
        "issuedOn": {
          "$ref": "#/definitions/https:__openbadgespec.org_v1_schema_assertion.json_definitions_DateTime",
          "description": "Date the the certificate JSON was created."
        },
        "evidence": {
          "type": "string",
          "format": "uri",
          "description": "URL of the work that the recipient did to earn the achievement. This can be a page that links out to other pages if linking directly to the work is infeasible. V1.2 made this field optional, which is consistent with OBI spec."
        },
        "expires": {
          "$ref": "#/definitions/https:__openbadgespec.org_v1_schema_assertion.json_definitions_DateTime",
          "description": "If the achievement has some notion of expiry, this indicates a date when a badge should no longer be considered valid."
        },
        "image:signature": {
          "description": "A single signature image, or array of objects with fields image and jobTitle. V1.2 change: support multiple signatures",
          "oneOf": [
            {
              "type": "string",
              "pattern": "data:image/png;base64,",
              "description": "Data URI; a base-64 encoded png image of the certificate\u0027s image. https://en.wikipedia.org/wiki/Data_URI_scheme"
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "pattern": "data:image/png;base64,",
                    "description": "Data URI; a base-64 encoded png image of the certificate\u0027s image. https://en.wikipedia.org/wiki/Data_URI_scheme"
                  },
                  "jobIitle": {
                    "type": "string",
                    "description": "Title of the undersigned. http://schema.org/Person#jobTitle"
                  }
                }
              }
            }
          ]
        }
      },
      "required": [
        "type",
        "uid",
        "issuedOn",
        "id"
      ],
      "additionalProperties": true
    },
    "http:__w3id.org_blockcerts_schema_1.2_assertion-1.2.json_definitions_JsonLdContext": {
      "description": "A link to a valid JSON-LD context file, that maps term names to contexts. Blockchain Certificate contexts may also define JSON-schema to validate Blockchain Certificates against. In a Blockchain Certificate Object, this will almost always be a string:uri to a single context file, but might rarely be an array of links or context objects instead. This schema also allows direct mapping of terms to IRIs by using an object as an option within an array.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "array"
              }
            ]
          }
        }
      ]
    },
    "http:__w3id.org_blockcerts_schema_1.2_assertion-1.2.json_definitions_JsonLdType": {
      "description": "A type or an array of types that the Blockchain Certificate object represents. The first or only item should be \u0027Assertion\u0027, and any others should each be an IRI (usually a URL) corresponding to a definition of the type itself. In almost all cases, there will be only one type: \u0027Assertion\u0027",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "https:__openbadgespec.org_v1_schema_assertion.json_definitions_DateTime": {
      "anyOf": [
        {
          "$ref": "#/definitions/https:__openbadgespec.org_v1_schema_assertion.json_definitions_ISODateTime"
        },
        {
          "$ref": "#/definitions/https:__openbadgespec.org_v1_schema_assertion.json_definitions_UNIXTimeStamp"
        }
      ]
    },
    "https:__openbadgespec.org_v1_schema_assertion.json_definitions_ISODateTime": {
      "description": "ISO 8601 date format string yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS with optional .SSS milliseconds",
      "type": "string",
      "pattern": "^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d(:[0-5]\\d)?([\\.,]\\d{1,3})?(Z|[+-][0-2]\\d(:?[0-5]\\d)?)?)?$"
    },
    "https:__openbadgespec.org_v1_schema_assertion.json_definitions_UNIXTimeStamp": {
      "description": "10-digit UNIX timestamp, epoch time",
      "type": "integer",
      "minimum": 0,
      "maximum": 9999999999
    }
  },
  "properties": {
    "@context": {
      "$ref": "#/definitions/JsonLdContext"
    },
    "type": {
      "$ref": "#/definitions/JsonLdType"
    },
    "certificate": {
      "$ref": "#/definitions/Certificate"
    },
    "assertion": {
      "$ref": "#/definitions/Assertion"
    },
    "verify": {
      "$ref": "#/definitions/VerificationObject"
    },
    "recipient": {
      "$ref": "#/definitions/Recipient"
    }
  },
  "required": [
    "type",
    "certificate",
    "assertion",
    "verify",
    "recipient"
  ],
  "additionalProperties": true
}