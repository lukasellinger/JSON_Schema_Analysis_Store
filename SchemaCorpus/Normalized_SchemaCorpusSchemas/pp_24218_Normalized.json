{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Search result",
  "type": "object",
  "description": "search metadata and result list",
  "additionalProperties": false,
  "properties": {
    "searchingView": {
      "description": "Type of record inside the result list. 1 for Bibliographic records, -1 for authority",
      "type": "integer"
    },
    "displayQuery": {
      "description": "query that produced result list",
      "type": "string"
    },
    "from": {
      "description": "Specifies an offset into a query’s result set to begin displaying results from this offset",
      "type": "integer"
    },
    "to": {
      "description": "Pagination properties. Specifies the end of offset into a query’s result set to stop displaying results",
      "type": "integer"
    },
    "numFound": {
      "description": "count of result founded",
      "type": "integer"
    },
    "docs": {
      "description": "result list",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "recordView": {
            "description": "record type. 1 for Bibliographic records, -1 for authority",
            "type": "integer",
            "pattern": "/[1,-1]{1}/"
          },
          "countDoc": {
            "description": "count of bibliographic records associated to the current record",
            "type": "integer"
          },
          "queryForAssociatedDoc": {
            "description": "query to retrieve records associated to the current one",
            "type": "string"
          }
        },
        "tagHighlighted": {
          "description": "list of tag in which query terms are present",
          "type": "string"
        },
        "data": {
          "description": "marc record",
          "type": "object",
          "properties": {
            "leader": {
              "description": "marc leader of the record",
              "type": "string"
            },
            "fields": {
              "description": "fields of record",
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/field.json"
              }
            }
          }
        }
      }
    }
  },
  "metadata": {
    "description": "Metadata about creation and changes to marc record, provided by the server (client should not provide)",
    "type": "object",
    "$ref": "#/definitions/..\\raml-storage\\raml-util\\schemas\\metadata.schema"
  },
  "definitions": {
    "field.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "title": "Loan",
      "description": "Links the item with the patron and applies certain conditions based on policies",
      "properties": {
        "tag": {
          "description": "tag of record",
          "type": "string"
        },
        "subfields": {
          "description": "subfields of record field",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/subfield.json"
          }
        }
      },
      "additionalProperties": false,
      "metadata": {
        "description": "Metadata about creation and changes to subfields, provided by the server (client should not provide)",
        "type": "object",
        "$ref": "#/definitions/..\\raml-storage\\raml-util\\schemas\\metadata.schema"
      }
    },
    "subfield.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "title": "Loan",
      "description": "Links the item with the patron and applies certain conditions based on policies",
      "properties": {
        "subfield": {
          "description": "subfield of record tag subfields",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "..\\raml-storage\\raml-util\\schemas\\metadata.schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Metadata Schema",
      "description": "Metadata about creation and changes to records, provided by the server (client should not provide)",
      "type": "object",
      "properties": {
        "createdDate": {
          "description": "Date and time when the record was created",
          "type": "string",
          "format": "date-time"
        },
        "createdByUserId": {
          "description": "ID of the user who created the record",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "createdByUsername": {
          "description": "Username of the user who created the record (when available)",
          "type": "string"
        },
        "updatedDate": {
          "description": "Date and time when the record was last updated",
          "type": "string",
          "format": "date-time"
        },
        "updatedByUserId": {
          "description": "ID of the user who last updated the record",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "updatedByUsername": {
          "description": "Username of the user who last updated the record (when available)",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "createdDate",
        "createdByUserId"
      ]
    }
  }
}