{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "accessElineProductOrder",
  "id": "accessElineProductOrder",
  "description": "An orderable representation of an Access Eline Product.",
  "type": "object",
  "required": [
    "objectType",
    "productSpecification",
    "uniReference"
  ],
  "properties": {
    "objectType": {
      "type": "string",
      "enum": [
        "accessElineProductOrder"
      ],
      "description": "The type of the object, Eline."
    },
    "sellerOvcId": {
      "type": "string",
      "description": "The circuit identifier that the Seller uses to refer to this OVC.",
      "maxLength": 45
    },
    "buyerOvcId": {
      "type": "string",
      "description": "The circuit identifier that the Partner/Access Provider (Buyer) uses to refer to this OVC.",
      "maxLength": 45
    },
    "productSpecification": {
      "$ref": "#/definitions/productSpecRef",
      "description": "A reference to the Partner/Access Provider (Seller) Product Specification (product catalog item) that the buyer is ordering."
    },
    "enniSvlanId": {
      "type": "integer",
      "description": "The S-VLAN ID to be used for this service.",
      "minimum": 0,
      "maximum": 4095
    },
    "ovcMaximumFrameSize": {
      "type": "integer",
      "description": "The maximum frame size provides the upper bounds on the length of an ingress frame . An integer greater or equal to 1526.",
      "minimum": 1526
    },
    "colorForwardingEnabled": {
      "type": "boolean",
      "description": "Color Forwarding is an OVC attribute defining the relationship between the color on an egress ENNI frame and the color of the corresponding ingress ENNI Frame or Service Frame.  For ordering, this attribute identifies if the Buyer requests Color Forwarding for this service"
    },
    "classOfServiceName": {
      "type": "string",
      "description": "The name of the service level for this Access Eline. (E.g. Gold).",
      "maxLength": 20
    },
    "enniReference": {
      "type": "object",
      "description": "A reference to an existing or ordered ENNI.",
      "oneOf": [
        {
          "$ref": "#/definitions/orderedEnniReference"
        },
        {
          "$ref": "#/definitions/existingEnniReference"
        }
      ]
    },
    "enniSiteContact": {
      "$ref": "#/definitions/contact",
      "description": "The primary site contact for the ENNI site."
    },
    "enniSiteAlternateContact": {
      "$ref": "#/definitions/contact",
      "description": "The secondary site contact for the ENNI site."
    },
    "enniIngressBandwidthProfile": {
      "$ref": "#/definitions/bandwidthProfile",
      "description": "The ingress bandwidth profile at the ENNI end of the OVC that implements the Access Eline."
    },
    "uniReference": {
      "type": "object",
      "description": "A reference to an existing or ordered UNI.",
      "oneOf": [
        {
          "$ref": "#/definitions/orderedUniReference"
        },
        {
          "$ref": "#/definitions/existingUniReference"
        }
      ]
    },
    "uniSiteContact": {
      "$ref": "#/definitions/contact",
      "description": "The primary site contact for the UNI site. The UNI site contacts are ONLY required when the UNI is NOT on the same Order as the Access Eline."
    },
    "uniSiteAlternateContact": {
      "$ref": "#/definitions/contact",
      "description": "The secondary site contact for the UNI site. The UNI site contacts are ONLY required when the UNI is NOT on the same Order as the Access Eline."
    },
    "uniIngressBandwidthProfile": {
      "$ref": "#/definitions/bandwidthProfile",
      "description": "The ingress bandwidth profile at the UNI end of the OVC that implements the Access Eline."
    }
  },
  "definitions": {
    "productSpecRef": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "productSpecRef",
      "description": "A reference (by name, id or link) to a Product Specification.",
      "type": "object",
      "required": [
        "objectType"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "productSpecRef"
          ],
          "description": "The type of the object, A Product Specification Reference."
        },
        "name": {
          "type": "string",
          "description": "The name a product (specification) is known by within an organization (e.g., Access EVPL 100).",
          "maxLength": 25
        },
        "code": {
          "type": "string",
          "description": "Unique identifier that an organization uses for a product (specification) in its internal systems that can refer to one or a set of products (e.g., AEVPL100).",
          "maxLength": 15
        },
        "productSpecification": {
          "$ref": "#/definitions/resourceReference",
          "description": "A reference to the Partner/Access Provider (Seller) Product Specification (product catalog item) that the buyer is ordering."
        }
      }
    },
    "resourceReference": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "resourceReference",
      "description": "A reference to a resource, including it\u0027s ID, type, and a link to retrieve the resource.",
      "type": "object",
      "required": [
        "objectType",
        "id",
        "type",
        "link"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "resourceReference"
          ],
          "description": "The type of the object, resourceReference."
        },
        "id": {
          "type": "string",
          "description": "The resource\u0027s unique identifier.",
          "maxLength": 45
        },
        "type": {
          "type": "string",
          "description": "Specifies the type for the referenced resource.",
          "maxLength": 25
        },
        "link": {
          "$ref": "#/definitions/link",
          "description": "A link for accessing the resource."
        }
      }
    },
    "link": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "link",
      "description": "Specifies relationships between the current document and an external resource.",
      "type": "object",
      "required": [
        "objectType",
        "href",
        "rel"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "description": "The type of the object, link.",
          "maxLength": 25
        },
        "href": {
          "type": "string",
          "description": "A URL. Specifies the location of the linked document.",
          "maxLength": 255
        },
        "rel": {
          "type": "string",
          "description": "Specifies the relationship between the current document and the linked document.",
          "maxLength": 25
        },
        "title": {
          "type": "string",
          "description": "Provide additional / advisory information (expand on the meaning of the link).",
          "maxLength": 25
        },
        "method": {
          "type": "string",
          "enum": [
            "get",
            "post"
          ],
          "description": "Specifies how to send the data (e.g. get, post)."
        },
        "type": {
          "type": "string",
          "description": "Specifies the media type of the linked document.",
          "maxLength": 25
        }
      }
    },
    "orderedEnniReference": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "orderedEnniReference",
      "description": "A reference to an ordered ENNI. The ENNI is referenced on an Order by customer order number (PON), and order item reference.",
      "type": "object",
      "required": [
        "objectType",
        "orderItemReference"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "orderedEnniReference"
          ],
          "description": "The type of the object, orderedEnniReference."
        },
        "orderId": {
          "type": "string",
          "description": "A unique identifier for an order.",
          "maxLength": 45
        },
        "buyerPurchaseOrderNumber": {
          "type": "string",
          "description": "The purchase order number for the order that contains the referenced ENNI. This is required if the ordered ENNI is not on the same order as the orderedUniReference.",
          "maxLength": 16
        },
        "orderItemReference": {
          "type": "string",
          "description": "A reference number that can be used to refer to the order item of ordered ENNI.",
          "maxLength": 4
        }
      }
    },
    "existingEnniReference": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "existingEnniReference",
      "description": "A reference to an existing ENNI.",
      "type": "object",
      "required": [
        "objectType",
        "sellerEnniId"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "existingEnniReference"
          ],
          "description": "The type of the object, existingEnniReference."
        },
        "sellerEnniId": {
          "type": "string",
          "description": "The circuit identifier that the seller uses to refer to this ENNI.",
          "maxLength": 45
        },
        "buyerEnniId": {
          "type": "string",
          "description": "The circuit identifier that the buyer uses to refer to this ENNI.",
          "maxLength": 45
        }
      }
    },
    "contact": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "contact",
      "description": "Represents a contact.",
      "type": "object",
      "required": [
        "objectType",
        "name",
        "telephoneNumber"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "contact"
          ],
          "description": "The type of the object, contact."
        },
        "name": {
          "type": "string",
          "description": "Identifies the name of the person or office.",
          "maxLength": 50
        },
        "telephoneNumber": {
          "type": "string",
          "description": "Identifies the telephone number (excluding extension) of the Contact.",
          "maxLength": 15
        },
        "telephoneNumberExt": {
          "type": "string",
          "description": "Identifies the telephone number extension of the Contact.",
          "maxLength": 6
        },
        "email": {
          "type": "string",
          "description": "Identifies the electronic mail address of the Contact.",
          "maxLength": 60
        }
      }
    },
    "bandwidthProfile": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "bandwidthProfile",
      "description": "Bandwidth Profile parameters. Properties that are not specified must be derivable from the Product that is being ordered, or by a Contract or Implementation Agreement between the Buyer and the Seller.",
      "type": "object",
      "required": [
        "objectType"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "bandwidthProfile"
          ],
          "description": "The type of the object, bandwidthProfile."
        },
        "committedInformationRate": {
          "$ref": "#/definitions/informationRateQuantity",
          "description": "Defines the average rate in bits/s of Service or ENNI Frames up to which the network may deliver Service or Network Frames but without any performance objectives."
        },
        "committedBurstSize": {
          "type": "integer",
          "description": "Limits the maximum number of bytes available for a burst of Service or ENNI Frames sent at the EI speed to remain CIR- onformant. MUST be \u003e\u003d 12176.",
          "minimum": 12176
        },
        "excessInformationRate": {
          "$ref": "#/definitions/informationRateQuantity",
          "description": "If specified, defines the average rate in bits/s of Service or ENNI Frames up to which the network may deliver Service or Network Frames but without any performance objectives."
        },
        "excessBurstSize": {
          "type": "integer",
          "description": "If specified, limits the maximum number of bytes available for a burst of Service or ENNI Frames sent at the EI speed to remain EIR-conformant.",
          "minimum": 0
        },
        "colorMode": {
          "type": "string",
          "enum": [
            "COLOR_AWARE",
            "COLOR_BLIND"
          ],
          "description": "Color Mode parameter indicates whether the color-aware or color-blind property is employed by the Bandwidth Profile."
        },
        "couplingFlag": {
          "type": "boolean",
          "description": "The Coupling Flag allows the choice between two modes of operation of the Bandwidth Profile algorithm."
        }
      }
    },
    "informationRateQuantity": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "informationRateQuantity",
      "description": "A quantity to be used for specifying information rates.",
      "type": "object",
      "required": [
        "objectType",
        "amount",
        "units"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "informationRateQuantity"
          ],
          "description": "The type of the object, bandwidthProfile."
        },
        "amount": {
          "type": "number",
          "description": "A quantity of something. Typically size, value, extent, or money."
        },
        "units": {
          "type": "string",
          "enum": [
            "Mbps",
            "Gbps"
          ],
          "description": "The unit of measure for the quantity."
        }
      }
    },
    "orderedUniReference": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "orderedUniReference",
      "description": "A reference to an ordered UNI. The UNI is referenced on an Order by customer order number (PON), and order item reference.",
      "type": "object",
      "required": [
        "objectType",
        "orderItemReference"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "orderedUniReference"
          ],
          "description": "The type of the object, orderedUniReference."
        },
        "orderId": {
          "type": "string",
          "description": "An unique identifier for an order.",
          "maxLength": 45
        },
        "buyerPurchaseOrderNumber": {
          "type": "string",
          "description": "The purchase order number for the order that contains the referenced UNI. This is required if the ordered UNI is not on the same order as the orderedUniReference.",
          "maxLength": 16
        },
        "orderItemReference": {
          "type": "string",
          "description": "The order item reference for the UNI on the referenced order, or on the current order if a buyerPurchaseOrderNumber is not provided.",
          "maxLength": 4
        }
      }
    },
    "existingUniReference": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "existingUniReference",
      "description": "A reference to an existing UNI.",
      "type": "object",
      "required": [
        "objectType",
        "sellerUniId"
      ],
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "existingUniReference"
          ],
          "description": "The type of the object, existingUniReference."
        },
        "sellerUniId": {
          "type": "string",
          "description": "The circuit identifier that the seller uses to refer to this UNI.",
          "maxLength": 45
        },
        "buyerUniId": {
          "type": "string",
          "description": "The circuit identifier that the buyer uses to refer to this UNI.",
          "maxLength": 45
        }
      }
    }
  }
}