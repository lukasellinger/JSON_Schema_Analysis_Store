{
  "$id": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/observables/user-account.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "user-account",
  "description": "The User Account Object represents an instance of any type of user account, including but not limited to operating system, device, messaging service, and social media platform accounts.",
  "type": "object",
  "allOf": [
    {
      "$ref": "#/definitions/..\\common\\cyber-observable-core.json"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "The value of this property MUST be `user-account`.",
          "enum": [
            "user-account"
          ]
        },
        "id": {
          "title": "id",
          "pattern": "^user-account--"
        },
        "extensions": {
          "$ref": "#/definitions/user-account-extensions-dictionary",
          "description": "The User Account Object defines the following extensions. In addition to these, producers MAY create their own. Extensions: unix-account-ext."
        },
        "user_id": {
          "type": "string",
          "description": "Specifies the identifier of the account."
        },
        "credential": {
          "type": "string",
          "description": "Specifies a cleartext credential. This is only intended to be used in capturing metadata from malware analysis (e.g., a hard-coded domain administrator password that the malware attempts to use for lateral movement) and SHOULD NOT be used for sharing of PII."
        },
        "account_login": {
          "type": "string",
          "description": "Specifies the account login string, used in cases where the user_id property specifies something other than what a user would type when they login."
        },
        "account_type": {
          "type": "string",
          "description": "Specifies the type of the account. This is an open vocabulary and values SHOULD come from the account-type-ov vocabulary."
        },
        "display_name": {
          "type": "string",
          "description": "Specifies the display name of the account, to be shown in user interfaces, if applicable."
        },
        "is_service_account": {
          "type": "boolean",
          "description": "Indicates that the account is associated with a network service or system process (daemon), not a specific individual."
        },
        "is_privileged": {
          "type": "boolean",
          "description": "Specifies that the account has elevated privileges (i.e., in the case of root on Unix or the Windows Administrator account)."
        },
        "can_escalate_privs": {
          "type": "boolean",
          "description": "Specifies that the account has the ability to escalate privileges (i.e., in the case of sudo on Unix or a Windows Domain Admin account)."
        },
        "is_disabled": {
          "type": "boolean",
          "description": "Specifies if the account is disabled."
        },
        "account_created": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies when the account was created."
        },
        "account_expires": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies the expiration date of the account."
        },
        "credential_last_changed": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies when the account credential was last changed."
        },
        "account_first_login": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies when the account was first accessed."
        },
        "account_last_login": {
          "$ref": "#/definitions/..\\common\\timestamp.json",
          "description": "Specifies when the account was last accessed."
        }
      }
    }
  ],
  "anyOf": [
    {
      "required": [
        "extensions"
      ]
    },
    {
      "required": [
        "user_id"
      ]
    },
    {
      "required": [
        "credential"
      ]
    },
    {
      "required": [
        "account_login"
      ]
    },
    {
      "required": [
        "account_type"
      ]
    },
    {
      "required": [
        "display_name"
      ]
    },
    {
      "required": [
        "is_service_account"
      ]
    },
    {
      "required": [
        "is_privileged"
      ]
    },
    {
      "required": [
        "can_escalate_privs"
      ]
    },
    {
      "required": [
        "is_disabled"
      ]
    },
    {
      "required": [
        "account_created"
      ]
    },
    {
      "required": [
        "account_expires"
      ]
    },
    {
      "required": [
        "credential_last_changed"
      ]
    },
    {
      "required": [
        "account_first_login"
      ]
    },
    {
      "required": [
        "account_last_login"
      ]
    }
  ],
  "definitions": {
    "user-account-extensions-dictionary": {
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\dictionary.json"
        }
      ],
      "patternProperties": {
        "^unix-account-ext$": {
          "type": "object",
          "description": "The User Account Object defines the following extensions. In addition to these, producers MAY create their own.",
          "allOf": [
            {
              "properties": {
                "gid": {
                  "type": "number",
                  "description": "Specifies the primary group ID of the account."
                },
                "groups": {
                  "type": "array",
                  "description": "Specifies a list of names of groups that the account is a member of.",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1
                },
                "home_dir": {
                  "type": "string",
                  "description": "Specifies the home directory of the account."
                },
                "shell": {
                  "type": "string",
                  "description": "Specifies the accountâ€™s command shell."
                }
              }
            },
            {
              "anyOf": [
                {
                  "required": [
                    "gid"
                  ]
                },
                {
                  "required": [
                    "groups"
                  ]
                },
                {
                  "required": [
                    "home_dir"
                  ]
                },
                {
                  "required": [
                    "shell"
                  ]
                }
              ]
            }
          ]
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/..\\common\\dictionary.json",
        "description": "Custom file extension"
      }
    },
    "account-type-ov": {
      "type": "string",
      "enum": [
        "unix",
        "windows local",
        "windows domain",
        "ldap",
        "tacacs",
        "radius",
        "nis",
        "openid",
        "facebook",
        "skype",
        "twitter",
        "kavi"
      ]
    },
    "..\\common\\cyber-observable-core.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "cyber-observable-core",
      "description": "Common properties and behavior across all Cyber Observable Objects.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-?$",
          "minLength": 3,
          "maxLength": 250,
          "description": "Indicates that this object is an Observable Object. The value of this property MUST be a valid Observable Object type name, but to allow for custom objects this has been removed from the schema.",
          "not": {
            "enum": [
              "action"
            ]
          }
        },
        "spec_version": {
          "type": "string",
          "enum": [
            "2.0",
            "2.1"
          ],
          "description": "The version of the STIX specification used to represent the content in this cyber-observable."
        },
        "object_marking_refs": {
          "type": "array",
          "description": "The list of marking-definition objects to be applied to this object.",
          "items": {
            "$ref": "#/definitions/..\\common\\identifier.json"
          },
          "minItems": 1
        },
        "granular_markings": {
          "type": "array",
          "description": "The set of granular markings that apply to this object.",
          "items": {
            "$ref": "#/definitions/..\\common\\granular-marking.json"
          },
          "minItems": 1
        },
        "defanged": {
          "type": "boolean",
          "description": "Defines whether or not the data contained within the object has been defanged."
        },
        "id": {
          "$ref": "#/definitions/..\\common\\identifier.json",
          "description": "Specifies the identifier of the observable object, as a string."
        },
        "extensions": {
          "description": "Specifies any extensions of the object, as a dictionary.",
          "type": "object",
          "minProperties": 1,
          "patternProperties": {
            "^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-ext$": {
              "type": "object",
              "minProperties": 1,
              "allOf": [
                {
                  "$ref": "#/definitions/..\\common\\properties.json"
                }
              ]
            },
            "^extension-definition--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$": {
              "allOf": [
                {
                  "$ref": "#/definitions/..\\common\\extension.json"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\properties.json"
        }
      ],
      "not": {
        "anyOf": [
          {
            "required": [
              "severity"
            ]
          },
          {
            "required": [
              "action"
            ]
          },
          {
            "required": [
              "username"
            ]
          },
          {
            "required": [
              "phone_numbers"
            ]
          }
        ]
      },
      "required": [
        "type",
        "id"
      ]
    },
    "..\\common\\identifier.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "identifier",
      "description": "Represents identifiers across the CTI specifications. The format consists of the name of the top-level object being identified, followed by two dashes (--), followed by a UUIDv4.",
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]+[a-z0-9]--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    },
    "..\\common\\granular-marking.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "granular-marking",
      "description": "The granular-marking type defines how the list of marking-definition objects referenced by the marking_refs property to apply to a set of content identified by the list of selectors in the selectors property.",
      "type": "object",
      "properties": {
        "selectors": {
          "type": "array",
          "description": "A list of selectors for content contained within the STIX object in which this property appears.",
          "items": {
            "type": "string",
            "pattern": "^([a-z0-9_-]{3,249}(\\.(\\[\\d+\\]|[a-z0-9_-]{1,250}))*|id)$"
          },
          "minItems": 1
        },
        "lang": {
          "type": "string",
          "description": "Identifies the language of the text identified by this marking."
        },
        "marking_ref": {
          "allOf": [
            {
              "$ref": "#/definitions/..\\common\\identifier.json"
            },
            {
              "pattern": "^marking-definition--",
              "description": "The marking_ref property specifies the ID of the marking-definition object that describes the marking."
            }
          ]
        }
      },
      "required": [
        "selectors",
        "marking_ref"
      ]
    },
    "..\\common\\properties.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "properties",
      "description": "Rules for custom properties",
      "patternProperties": {
        "^[a-z][a-z0-9_]{0,245}_bin$": {
          "$ref": "#/definitions/..\\common\\binary.json"
        },
        "^[a-z][a-z0-9_]{0,245}_hex$": {
          "$ref": "#/definitions/..\\common\\hex.json"
        },
        "^([a-z][a-z0-9_]{2,249})|id$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "..\\common\\binary.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "binary",
      "description": "The â€‹binary data type represents a sequence of bytes. In order to allow pattern matching on custom objects, for all properties that use the binary type, the property name MUST end with \u0027_bin\u0027. The JSON MTI serialization represents this as a base64-Â­encoded string as specified in RFC4648â€‹. Other serializations SHOULD use a native binary type, if available.",
      "type": "string",
      "pattern": "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}\u003d|[A-Za-z0-9+/]{2}\u003d\u003d)$"
    },
    "..\\common\\hex.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "hex",
      "description": "The hex data type encodes an array of octets (8-bit bytes) as hexadecimal. The string MUST consist of an even number of hexadecimal characters, which are the digits \u00270\u0027 through \u00279\u0027 and the letters \u0027a\u0027 through \u0027f\u0027.  In order to allow pattern matching on custom objects, all properties that use the hex type, the property name MUST end with \u0027_hex\u0027.",
      "type": "string",
      "pattern": "^([a-fA-F0-9]{2})+$"
    },
    "..\\common\\extension.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "extension_type": {
          "description": "The type of extension.",
          "$ref": "#/definitions/..\\common\\extension.json_definitions_extension-type-enum"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/..\\common\\properties.json"
        }
      ],
      "required": [
        "extension_type"
      ],
      "definitions": {
        "extension-type-enum": {
          "type": "string",
          "enum": [
            "new-sdo",
            "new-sco",
            "new-sro",
            "property-extension",
            "toplevel-property-extension"
          ]
        }
      }
    },
    "..\\common\\extension.json_definitions_extension-type-enum": {
      "type": "string",
      "enum": [
        "new-sdo",
        "new-sco",
        "new-sro",
        "property-extension",
        "toplevel-property-extension"
      ]
    },
    "..\\common\\timestamp.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "timestamp",
      "description": "Represents timestamps across the CTI specifications. The format is an RFC3339 timestamp, with a required timezone specification of \u0027Z\u0027.",
      "type": "string",
      "pattern": "^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?Z$"
    },
    "..\\common\\dictionary.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "dictionary",
      "description": "A dictionary captures a set of key/value pairs",
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        "^[a-zA-Z0-9_-]{0,250}$": {
          "anyOf": [
            {
              "type": "array",
              "minItems": 1
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    }
  }
}