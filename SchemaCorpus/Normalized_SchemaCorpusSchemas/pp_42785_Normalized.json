{
  "id": "http://schemas.gdbots.io/json-schema/gdbots/ncr/event/node-updated/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "_schema": {
      "type": "string",
      "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
      "default": "pbj:gdbots:ncr:event:node-updated:1-0-0"
    },
    "event_id": {
      "type": "string",
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
    },
    "occurred_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$"
    },
    "ctx_tenant_id": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "Multi-tenant apps can use this field to track the tenant id."
    },
    "ctx_causator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false
    },
    "ctx_correlator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false
    },
    "ctx_user_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false
    },
    "ctx_app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/app"
        }
      ],
      "description": "The \"ctx_app\" refers to the application used to send the command which in turn resulted in this event being published."
    },
    "ctx_cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/cloud"
        }
      ],
      "description": "The \"ctx_cloud\" is usually copied from the command that resulted in this event being published. This means the value most likely refers to the cloud that received the command originally, not the machine processing the event."
    },
    "ctx_ip": {
      "type": "string",
      "format": "ipv4"
    },
    "ctx_ipv6": {
      "type": "string",
      "format": "ipv6"
    },
    "ctx_ua": {
      "type": "string",
      "minLength": 0,
      "maxLength": 65535
    },
    "ctx_msg": {
      "type": "string",
      "minLength": 0,
      "maxLength": 65535,
      "description": "An optional message/reason for the event being created. Consider this like a git commit message."
    },
    "tags": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      },
      "additionalProperties": false,
      "description": "Tags is a map that categorizes data or tracks references in external systems. The tags names should be consistent and descriptive, e.g. fb_user_id:123, salesforce_customer_id:456."
    },
    "ctx_ip_geo": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/address"
        }
      ]
    },
    "month_of_year": {
      "type": "integer",
      "default": 0,
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ]
    },
    "day_of_month": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 31
    },
    "day_of_week": {
      "type": "integer",
      "default": 0,
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    },
    "is_weekend": {
      "type": "boolean"
    },
    "hour_of_day": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 23
    },
    "ts_ymdh": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 4294967295
    },
    "ts_ymd": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 4294967295
    },
    "ts_ym": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 16777215
    },
    "ctx_ua_parsed": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/user-agent"
        }
      ]
    },
    "node_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$"
    },
    "slug": {
      "type": "string",
      "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
      "minLength": 0,
      "maxLength": 255
    },
    "new_etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$"
    },
    "old_etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$"
    },
    "new_node": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/node"
        }
      ]
    },
    "old_node": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/node"
        }
      ],
      "description": "The entire node, as it appeared before it was modified."
    },
    "paths": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[a-zA-Z_]{1}[\\w\\.]*$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "description": "The names of the fields this update event should apply changes to. Nested paths can be referenced using dot notation."
    }
  },
  "required": [
    "_schema",
    "event_id",
    "node_ref",
    "new_node"
  ],
  "definitions": {
    "app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\contexts\\app\\1-0-0.json"
        }
      ]
    },
    "cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\contexts\\cloud\\1-0-0.json"
        }
      ]
    },
    "address": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\geo\\address\\1-0-0.json"
        },
        {
          "$ref": "#/definitions/..\\..\\..\\geo\\address\\1-0-1.json"
        },
        {
          "$ref": "#/definitions/..\\..\\..\\geo\\address\\1-0-2.json"
        }
      ]
    },
    "user-agent": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\..\\contexts\\user-agent\\1-0-0.json"
        }
      ]
    },
    "node": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/..\\..\\mixin\\node\\1-0-0.json"
        }
      ]
    },
    "..\\..\\..\\contexts\\app\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::app:1-0-0"
        },
        "_id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "vendor": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "name": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "version": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "build": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "variant": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\contexts\\cloud\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::cloud:1-0-0"
        },
        "provider": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "region": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "zone": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 20
        },
        "instance_id": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        },
        "instance_type": {
          "type": "string",
          "pattern": "^[\\w\\.-]+$"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\geo\\address\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:geo::address:1-0-0"
        },
        "geo_hash": {
          "type": "string",
          "pattern": "^\\w+$"
        },
        "geo_point": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "pattern": "^Point$"
            },
            "coordinates": {
              "type": "array",
              "items": [
                {
                  "required": true,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180
                },
                {
                  "required": true,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90
                }
              ]
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "additionalProperties": false
        },
        "is_verified": {
          "type": "boolean"
        },
        "street1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "street2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "po_box": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "city": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "region": {
          "type": "string",
          "pattern": "^[A-Z0-9]{2}$",
          "description": "A two letter alpha or numeric code indicating the region, e.g. \"CA\". @link http://www.maxmind.com/download/geoip/misc/region_codes.csv"
        },
        "region_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 150,
          "description": "The full name of the region, e.g. \"California\"."
        },
        "postal_code": {
          "type": "string",
          "pattern": "^[\\w\\s-]+$"
        },
        "country": {
          "type": "string",
          "pattern": "^[A-Z]{2}$"
        },
        "continent": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\geo\\address\\1-0-1.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:geo::address:1-0-1"
        },
        "geo_hash": {
          "type": "string",
          "pattern": "^\\w+$"
        },
        "geo_point": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "pattern": "^Point$"
            },
            "coordinates": {
              "type": "array",
              "items": [
                {
                  "required": true,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180
                },
                {
                  "required": true,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90
                }
              ]
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "additionalProperties": false
        },
        "verified": {
          "type": "boolean",
          "description": "Indicates if a verification has been run on this address."
        },
        "is_verified": {
          "type": "boolean",
          "description": "Indicates if this is a valid adddress or not. Generally only true if the verified field is also true."
        },
        "street1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "street2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "po_box": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "city": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "region": {
          "type": "string",
          "pattern": "^[A-Z0-9]{2}$",
          "description": "A two letter alpha or numeric code indicating the region, e.g. \"CA\". @link http://www.maxmind.com/download/geoip/misc/region_codes.csv"
        },
        "region_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 150,
          "description": "The full name of the region, e.g. \"California\"."
        },
        "postal_code": {
          "type": "string",
          "pattern": "^[\\w\\s-]+$"
        },
        "country": {
          "type": "string",
          "pattern": "^[A-Z]{2}$"
        },
        "continent": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\geo\\address\\1-0-2.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:geo::address:1-0-2"
        },
        "geo_hash": {
          "type": "string",
          "pattern": "^\\w+$"
        },
        "geo_point": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "pattern": "^Point$"
            },
            "coordinates": {
              "type": "array",
              "items": [
                {
                  "required": true,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180
                },
                {
                  "required": true,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90
                }
              ]
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "additionalProperties": false
        },
        "verified": {
          "type": "boolean",
          "description": "Indicates if a verification has been run on this address."
        },
        "is_verified": {
          "type": "boolean",
          "description": "Indicates if this is a valid adddress or not. Generally only true if the verified field is also true."
        },
        "street1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "street2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "po_box": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "city": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "county": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "region": {
          "type": "string",
          "pattern": "^[A-Z0-9]{2}$",
          "description": "A two letter alpha or numeric code indicating the region, e.g. \"CA\". @link http://www.maxmind.com/download/geoip/misc/region_codes.csv"
        },
        "region_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 150,
          "description": "The full name of the region, e.g. \"California\"."
        },
        "postal_code": {
          "type": "string",
          "pattern": "^[\\w\\s-]+$"
        },
        "country": {
          "type": "string",
          "pattern": "^[A-Z]{2}$"
        },
        "continent": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\..\\contexts\\user-agent\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_schema": {
          "type": "string",
          "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
          "default": "pbj:gdbots:contexts::user-agent:1-0-0"
        },
        "br_family": {
          "type": "string",
          "pattern": ".+"
        },
        "br_major": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "br_minor": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "br_patch": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "os_family": {
          "type": "string",
          "pattern": ".+"
        },
        "os_major": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "os_minor": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "os_patch": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "os_patch_minor": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 65535
        },
        "dvce_family": {
          "type": "string",
          "pattern": ".+"
        }
      },
      "required": [
        "_schema"
      ],
      "additionalProperties": false
    },
    "..\\..\\mixin\\node\\1-0-0.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$",
          "description": "The \"_id\" value: - MUST NOT change for the life of the node. - SHOULD be globally unique - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())"
        },
        "status": {
          "type": "string",
          "default": "draft",
          "enum": [
            "unknown",
            "published",
            "scheduled",
            "pending",
            "draft",
            "expired",
            "archived",
            "deleted"
          ]
        },
        "etag": {
          "type": "string",
          "pattern": "^[\\w\\.:-]+$"
        },
        "created_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "creator_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user."
        },
        "updated_at": {
          "type": "string",
          "pattern": "^[1-9]{1}[0-9]{12,15}$"
        },
        "updater_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "last_event_ref": {
          "type": "object",
          "properties": {
            "curie": {
              "type": "string",
              "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
              "minLength": 0,
              "maxLength": 146
            },
            "id": {
              "type": "string",
              "pattern": "^[A-Za-z0-9:_\\-]+$",
              "minLength": 0,
              "maxLength": 255
            },
            "tag": {
              "type": "string",
              "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
              "minLength": 0,
              "maxLength": 255
            }
          },
          "required": [
            "curie",
            "id"
          ],
          "additionalProperties": false,
          "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\""
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "_id"
      ],
      "additionalProperties": true
    }
  },
  "additionalProperties": false
}