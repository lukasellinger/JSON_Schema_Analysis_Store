{
  "title": "UniqueValue Renderer",
  "type": "object",
  "$schema": "http://json-schema.org/draft-04/schema",
  "description": "A unique value renderer symbolizes based on the value of an attribute.",
  "properties": {
    "authoringInfo": {
      "type": "object",
      "description": "An object containing metadata about the authoring process for creating a renderer object. This allows the authoring clients to save specific overridable settings so that next time it is accessed via the UI, their selections are remembered. Non-authoring clients can ignore it.",
      "$ref": "#/definitions/authoringInfo_schema.json"
    },
    "backgroundFillSymbol": {
      "type": "object",
      "description": "Used for polygon features. It can only be used for bivariate types and size rendering.",
      "$ref": "#/definitions/polygonSymbol3D_schema.json"
    },
    "defaultLabel": {
      "type": "string",
      "description": "Default label for the default symbol used to draw unspecified values."
    },
    "defaultSymbol": {
      "description": "The defaultSymbol on the renderer that get assigned to features with no value or features that do not fall within the configured data.",
      "$ref": "#/definitions/symbol3D_schema.json"
    },
    "field1": {
      "type": "string",
      "description": "Attribute field renderer uses to match values."
    },
    "field2": {
      "type": "string",
      "description": "If needed, specify an additional attribute field the renderer uses to match values."
    },
    "field3": {
      "type": "string",
      "description": "If needed, specify an additional attribute field the renderer uses to match values."
    },
    "fieldDelimiter": {
      "type": "string",
      "description": "String inserted between the values if multiple attribute fields are specified.",
      "default": ", "
    },
    "legendOptions": {
      "type": "object",
      "description": "A legend containing one title, which is a string describing the renderer in the legend.",
      "$ref": "#/definitions/rendererLegendOptions_schema.json"
    },
    "type": {
      "type": "string",
      "description": "Specifies the type of renderer used.",
      "enum": [
        "uniqueValue"
      ]
    },
    "uniqueValueInfos": {
      "type": "array",
      "description": "An array of uniqueValueInfo objects.",
      "items": {
        "type": "object",
        "$ref": "#/definitions/uniqueValueInfo_schema.json"
      }
    },
    "valueExpression": {
      "type": "string",
      "description": "An [Arcade expression](https://developers.arcgis.com/arcade/) evaluating to either a string or a number."
    },
    "valueExpressionTitle": {
      "type": "string",
      "description": "The title identifying and describing the associated [Arcade](https://developers.arcgis.com/arcade/) expression as defined in the `valueExpression` property."
    },
    "visualVariables": {
      "type": "array",
      "description": "An array of objects used to set rendering properties.",
      "items": {
        "type": "object",
        "$ref": "#/definitions/visualVariable_schema.json"
      }
    }
  },
  "required": [
    "type",
    "uniqueValueInfos"
  ],
  "additionalProperties": false,
  "esriDocumentation": {
    "examples": [
      {
        "title": "UniqueValue",
        "description": "",
        "code": {
          "renderer": {
            "type": "uniqueValue",
            "field1": "COUNTRY",
            "uniqueValueInfos": [
              {
                "value": "US",
                "label": "US",
                "symbol": {
                  "type": "PointSymbol3D",
                  "symbolLayers": [
                    {
                      "type": "Icon",
                      "resource": {
                        "primitive": "circle"
                      },
                      "material": {
                        "color": [
                          253,
                          127,
                          111
                        ]
                      },
                      "size": 12
                    }
                  ]
                }
              },
              {
                "value": "Canada",
                "label": "Canada",
                "symbol": {
                  "type": "PointSymbol3D",
                  "symbolLayers": [
                    {
                      "type": "Icon",
                      "resource": {
                        "primitive": "circle"
                      },
                      "material": {
                        "color": [
                          126,
                          176,
                          213
                        ]
                      },
                      "size": 12
                    }
                  ]
                }
              },
              {
                "value": "Brazil",
                "label": "Brazil",
                "symbol": {
                  "type": "PointSymbol3D",
                  "symbolLayers": [
                    {
                      "type": "Icon",
                      "resource": {
                        "primitive": "circle"
                      },
                      "material": {
                        "color": [
                          178,
                          224,
                          97
                        ]
                      },
                      "size": 12
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    ]
  },
  "definitions": {
    "authoringInfo_schema.json": {
      "title": "authoringInfo",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The authoringInfo is an object containing metadata about the authoring process for creating a renderer object. This allows the authoring clients to save specific overridable settings so that next time it is accessed via an authoring client, their selections are remembered. Non-authoring clients can ignore it. Properties for color/size/transparency sliders, theme selection, classification information, and additional properties are saved within this object.",
      "properties": {
        "classificationMethod": {
          "type": "string",
          "description": "Used for classed color or size. The default value is `esriClassifyManual`.",
          "enum": [
            "esriClassifyDefinedInterval",
            "esriClassifyEqualInterval",
            "esriClassifyManual",
            "esriClassifyNaturalBreaks",
            "esriClassifyQuantile",
            "esriClassifyStandardDeviation"
          ],
          "default": "esriClassifyManual"
        },
        "colorRamp": {
          "type": "object",
          "$ref": "#/definitions/colorRamp_schema.json"
        },
        "field1": {
          "$ref": "#/definitions/field_authoringInfo_schema.json"
        },
        "field2": {
          "$ref": "#/definitions/field_authoringInfo_schema.json"
        },
        "fields": {
          "type": "array",
          "description": "An array of string values representing field names used for creating predominance renderers.",
          "items": {
            "type": "string"
          }
        },
        "focus": {
          "type": "string",
          "description": "Optional. Used for Relationship renderer. If not set, the legend will default to being square.",
          "enum": [
            "HH",
            "HL",
            "LH",
            "LL"
          ]
        },
        "lengthUnit": {
          "type": "string",
          "description": "Unit used in user interfaces to display world/map sizes and distances",
          "enum": [
            "centimeters",
            "decimal-degrees",
            "decimeters",
            "feet",
            "inches",
            "kilometers",
            "meters",
            "miles",
            "millimeters",
            "nautical-miles",
            "yards"
          ]
        },
        "numClasses": {
          "type": "integer",
          "description": "Number of classes to be associated with the relationship. Used for Relationship renderer.",
          "minimum": 2,
          "maximum": 4
        },
        "standardDeviationInterval": {
          "type": "number",
          "description": "Use this property if the classificationMethod is `esriClassifyStandardDeviation`.",
          "enum": [
            0.25,
            0.33,
            0.5,
            1
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "classedColor",
            "classedSize",
            "predominance",
            "relationship",
            "univariateColorSize"
          ]
        },
        "visualVariables": {
          "type": "array",
          "description": "An array of visualVariable objects containing additional information needed when authoring the renderer.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/authoringInfo_visualVariable_schema.json"
          }
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "additionalInformation": "The authoringInfo object is not required with a renderer. It is only used if rendering was generated using the Scene Viewer rendering tools. All snippets provided below show a portion of what is contained within `authoringInfo`. Please refer to the sample snippets in the [authoringInfo visual variable](authoringInfo_visualVariable.md) object for additional help.",
        "examples": [
          {
            "title": "Classed Size Renderer (Option 1)",
            "code": {
              "authoringInfo": {
                "type": "classedSize",
                "classificationMethod": "esriClassifyNaturalBreaks"
              }
            }
          },
          {
            "title": "Classed Size Renderer (Option 2)",
            "code": {
              "authoringInfo": {
                "type": "classedSize",
                "classificationMethod": "esriClassifyStandardDeviation",
                "standardDeviationInterval": 0.5
              }
            }
          },
          {
            "title": "Classed Color Renderer (Option 1)",
            "code": {
              "authoringInfo": {
                "type": "classedColor",
                "classificationMethod": "esriClassifyNaturalBreaks"
              }
            }
          },
          {
            "title": "Classed Color Renderer (Option 2)",
            "code": {
              "authoringInfo": {
                "type": "classedColor",
                "classificationMethod": "esriClassifyStandardDeviation",
                "standardDeviationInterval": 0.5
              }
            }
          },
          {
            "title": "Predominance Renderer",
            "code": {
              "authoringInfo": {
                "type": "predominance",
                "fields": [
                  "COST",
                  "DOLLARS",
                  "PRICE"
                ]
              }
            }
          },
          {
            "title": "Univariate Color Size Renderer",
            "code": {
              "authoringInfo": {
                "type": "univariateColorSize",
                "visualVariables": [
                  {
                    "type": "sizeInfo",
                    "minSliderValue": 1,
                    "maxSliderValue": 1000
                  },
                  {
                    "type": "colorInfo",
                    "minSliderValue": 1,
                    "maxSliderValue": 1000,
                    "theme": "high-to-low"
                  }
                ]
              }
            }
          },
          {
            "title": "Relationship Renderer",
            "code": {
              "authoringInfo": {
                "classificationMethod": "esriClassifyQuantile",
                "field1": {
                  "field": "VOTE_TURNOUT",
                  "classBreakInfos": [
                    {
                      "minValue": 1.0844,
                      "maxValue": 54.0946
                    },
                    {
                      "minValue": 54.0946,
                      "maxValue": 4083.8235
                    }
                  ]
                },
                "field2": {
                  "field": "MP06026a_B",
                  "normalizationField": "TOTPOP_CY",
                  "classBreakInfos": [
                    {
                      "minValue": 0.101322,
                      "maxValue": 0.197619
                    },
                    {
                      "minValue": 0.197619,
                      "maxValue": 0.266094
                    }
                  ]
                },
                "focus": "HH",
                "numClasses": 2,
                "type": "relationship"
              }
            }
          }
        ]
      }
    },
    "colorRamp_schema.json": {
      "title": "Color Ramp",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "A colorRamp object is used to specify a range of colors that are applied to a group of symbols.",
      "oneOf": [
        {
          "$ref": "#/definitions/colorRamp_algorithmic_schema.json"
        },
        {
          "$ref": "#/definitions/colorRamp_multipart_schema.json"
        }
      ]
    },
    "colorRamp_algorithmic_schema.json": {
      "title": "Color Ramp Algorithmic",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "A colorRamp object is used to specify a range of colors that are applied to a group of symbols.",
      "properties": {
        "algorithm": {
          "type": "string",
          "description": "Algorithm used for calculating the ramp.",
          "enum": [
            "esriCIELabAlgorithm",
            "esriHSVAlgorithm",
            "esriLabLChAlgorithm"
          ]
        },
        "fromColor": {
          "description": "Array representing the initial color to start the ramp from.",
          "$ref": "#/definitions/color_schema.json"
        },
        "toColor": {
          "description": "Array representing the final color to end the ramp with.",
          "$ref": "#/definitions/color_schema.json"
        },
        "type": {
          "type": "string",
          "description": "Value indicating the type of colorRamp.",
          "enum": [
            "algorithmic"
          ]
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Algorithmic",
            "code": {
              "colorRamp": {
                "type": "algorithmic",
                "fromColor": [
                  115,
                  76,
                  0,
                  255
                ],
                "toColor": [
                  255,
                  25,
                  86,
                  255
                ],
                "algorithm": "esriHSVAlgorithm"
              }
            }
          }
        ]
      }
    },
    "color_schema.json": {
      "title": "color",
      "type": "array",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Color is represented as a three or four-element array. The four elements represent values for red, green, blue, and alpha in that order. Values range from 0 through 255. If color is undefined for a symbol, the color value is null.",
      "items": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "minItems": 3,
      "maxItems": 4,
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "color",
            "code": {
              "color": [
                13,
                38,
                68,
                255
              ]
            }
          }
        ]
      }
    },
    "colorRamp_multipart_schema.json": {
      "title": "Color Ramp Multipart",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "A colorRamp object is used to specify a range of colors that are applied to a group of symbols.",
      "properties": {
        "colorRamps": {
          "type": "array",
          "description": "A multipart color ramp is defined by a list of constituent color ramps.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/colorRamp_algorithmic_schema.json"
          }
        },
        "type": {
          "type": "string",
          "description": "Value indicating the type of colorRamp.",
          "enum": [
            "multipart"
          ]
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Multipart",
            "code": {
              "colorRamp": {
                "type": "multipart",
                "colorRamps": [
                  {
                    "type": "algorithmic",
                    "fromColor": [
                      255,
                      0,
                      0,
                      255
                    ],
                    "toColor": [
                      255,
                      255,
                      0,
                      255
                    ],
                    "algorithm": "esriHSVAlgorithm"
                  },
                  {
                    "type": "algorithmic",
                    "fromColor": [
                      0,
                      255,
                      255,
                      255
                    ],
                    "toColor": [
                      0,
                      0,
                      255,
                      255
                    ],
                    "algorithm": "esriHSVAlgorithm"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "field_authoringInfo_schema.json": {
      "title": "AuthoringInfo Field",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Contains information about an attribute field relating to Relationship renderers.",
      "properties": {
        "classBreakInfos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/classBreakInfo_authoringInfo_schema.json"
          }
        },
        "field": {
          "type": "string",
          "description": "Attribute field used for renderer."
        },
        "normalizationField": {
          "type": "string",
          "description": "Attribute field used to normalize the data."
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "code": {
              "field1": {
                "field": "VOTE_TURNOUT",
                "classBreakInfos": [
                  {
                    "minValue": 1.0844,
                    "maxValue": 54.0946
                  },
                  {
                    "minValue": 54.0946,
                    "maxValue": 4083.8235
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "classBreakInfo_authoringInfo_schema.json": {
      "title": "AuthoringInfo classBreakInfo",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The classBreaksInfo object provides information about the class breaks associated with the Relationship renderer.",
      "properties": {
        "maxValue": {
          "type": "number",
          "description": "A numeric value used to specify the maximum value for a break."
        },
        "minValue": {
          "type": "number",
          "description": "A numeric value used to specify the minimum value for a break."
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "classBreak Info",
            "code": {
              "classBreakInfo": {
                "minValue": 3,
                "maxValue": 18
              }
            }
          }
        ]
      }
    },
    "authoringInfo_visualVariable_schema.json": {
      "title": "AuthoringInfo Visual Variable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "This visual variable pertains specifically to [authoringInfo](authoringInfo.md) and is different from visual variables directly on the [renderer](renderer.md).",
      "properties": {
        "endTime": {
          "type": [
            "number",
            "string"
          ],
          "description": "A Unix stamp. Both `startTime` or `endTime` can be fields. If this is the case, their names must be different."
        },
        "field": {
          "type": "string",
          "description": "The attribute field the user chose in the Smart Mapping gallery. Must be the same as in either `startTime` or `endTime`."
        },
        "maxSliderValue": {
          "type": "number",
          "description": "A numeric value indicating the maximum value displayed."
        },
        "minSliderValue": {
          "type": "number",
          "description": "A numeric value indicating the minimum value displayed."
        },
        "startTime": {
          "type": [
            "number",
            "string"
          ],
          "description": "A Unix time stamp. Both `startTime` or `endTime` can be fields. If this is the case, their names must be different."
        },
        "style": {
          "type": "string",
          "description": "(This property is used for comparison rendering). It is used to map the ratio between two numbers. It is possible to express that relationship as percentages, simple ratios, or an overall percentage.",
          "enum": [
            "percent",
            "percentTotal",
            "ratio"
          ]
        },
        "theme": {
          "type": "string",
          "description": "Theme to be used only when working with visual variables of type `colorInfo`. Default is `high-to-low`.",
          "enum": [
            "above-and-below",
            "centered-on",
            "extremes",
            "high-to-low"
          ]
        },
        "type": {
          "type": "string",
          "description": "A string value specifying the type of renderer\u0027s visual variable.",
          "enum": [
            "colorInfo",
            "rotationInfo",
            "sizeInfo",
            "transparencyInfo"
          ]
        },
        "units": {
          "type": "string",
          "description": "(This property is used only with age renderers.) Units for startTime and endTime.",
          "enum": [
            "days",
            "hours",
            "minutes",
            "months",
            "seconds",
            "years"
          ]
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Attribute Transparency",
            "description": "Allows displaying features with different levels of opacity.",
            "schema": "authoringInfo_schema.json",
            "code": {
              "authoringInfo": {
                "visualVariables": [
                  {
                    "type": "transparencyInfo",
                    "minSliderValue": 0.0003,
                    "maxSliderValue": 23.8951
                  }
                ]
              }
            }
          },
          {
            "title": "Continuous Size Renderer",
            "description": "If a layer contains date values, it is possible to use a sequence of proportional symbols to view dates sequentially on a scene.",
            "schema": "authoringInfo_schema.json",
            "code": {
              "authoringInfo": {
                "visualVariables": [
                  {
                    "type": "sizeInfo",
                    "minSliderValue": 1,
                    "maxSliderValue": 14928.5396
                  }
                ]
              }
            }
          },
          {
            "title": "Continuous Color Renderer",
            "description": "If a layer contains date values, it is possible to use color to view data sequentially from new to old or before and after a key date.",
            "schema": "authoringInfo_schema.json",
            "code": {
              "authoringInfo": {
                "visualVariables": [
                  {
                    "type": "colorInfo",
                    "minSliderValue": 1,
                    "maxSliderValue": 14928.5396,
                    "theme": "high-to-low"
                  }
                ]
              }
            }
          },
          {
            "title": "Age-Size Renderer",
            "description": "If a layer contains date or time values, it is possible to use a sequence of proportional symbols to view the age of features. Age reflects the length of time (in seconds, minutes, hours, days, months, or years) from a start date or time to an end date or time.",
            "schema": "authoringInfo_schema.json",
            "code": {
              "authoringInfo": {
                "visualVariables": [
                  {
                    "type": "sizeInfo",
                    "minSliderValue": -129.2625,
                    "maxSliderValue": 234.7374,
                    "units": "days",
                    "startTime": "DATE",
                    "endTime": 1471970511924,
                    "field": "DATE"
                  }
                ]
              }
            }
          },
          {
            "title": "Age-Color Renderer",
            "description": "If a layer contains date or time values, it is possible to use color to represent the age of features. Age reflects the length of time (in seconds, minutes, hours, days, months, or years) from a start date or time to an end date or time.",
            "schema": "authoringInfo_schema.json",
            "code": {
              "authoringInfo": {
                "visualVariables": [
                  {
                    "type": "colorInfo",
                    "minSliderValue": -129.2625,
                    "maxSliderValue": 234.7374,
                    "units": "days",
                    "startTime": "DATE",
                    "endTime": 1471970511924,
                    "field": "DATE",
                    "theme": "high-to-low"
                  }
                ]
              }
            }
          },
          {
            "title": "Compare Renderer (special color renderer)",
            "description": "This style allows mapping the ratio between two numbers and expresses that relationship as percentages, simple ratios, or overall percentage.",
            "schema": "authoringInfo_schema.json",
            "code": {
              "authoringInfo": {
                "visualVariables": [
                  {
                    "type": "colorInfo",
                    "minSliderValue": 0.0003858501658018686,
                    "maxSliderValue": 23.89513157894737,
                    "theme": "above-and-below",
                    "style": "ratio"
                  }
                ]
              }
            }
          },
          {
            "title": "Predominance Renderer",
            "description": "This style uses transparency to show the relative strength of the predominant attribute for each feature in the layer. The strength, or degree, of predominance is calculated as a percentage of the total value of all the attributes for a given feature.",
            "schema": "authoringInfo_schema.json",
            "code": {
              "authoringInfo": {
                "type": "predominance",
                "fields": [
                  "COST",
                  "DOLLARS",
                  "PRICE"
                ],
                "visualVariables": [
                  {
                    "type": "transparencyInfo",
                    "minSliderValue": 0,
                    "maxSliderValue": 100
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "polygonSymbol3D_schema.json": {
      "title": "PolygonSymbol3D",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "PolygonSymbol3D is used to render features with Polygon geometry in a 3D SceneView. Polygon features may also be rendered as points with icons or objects at the centroid of each polygon.",
      "properties": {
        "styleOrigin": {
          "$ref": "#/definitions/styleOrigin_schema.json"
        },
        "symbolLayers": {
          "type": "array",
          "description": "A Collection of Symbol3DLayer objects used to visualize the graphic or feature.",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/fillSymbol3DLayer_schema.json"
              },
              {
                "$ref": "#/definitions/extrudeSymbol3DLayer_schema.json"
              },
              {
                "$ref": "#/definitions/waterSymbol3DLayer_schema.json"
              },
              {
                "$ref": "#/definitions/iconSymbol3DLayer_schema.json"
              },
              {
                "$ref": "#/definitions/objectSymbol3DLayer_schema.json"
              },
              {
                "$ref": "#/definitions/textSymbol3DLayer_schema.json"
              },
              {
                "description": "\u003cem\u003eDeprecated\u003c/em\u003e, use [fillSymbol3DLayer with outline](fillSymbol3DLayer.md) instead",
                "$ref": "#/definitions/lineSymbol3DLayer_schema.json"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "PolygonSymbol3D"
          ]
        }
      },
      "required": [
        "symbolLayers",
        "type"
      ],
      "additionalProperties": false
    },
    "styleOrigin_schema.json": {
      "title": "styleOrigin",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The origin of the style from which the symbol was originally referenced. A reference to the style origin can be either by styleName or by styleUrl (but not both). It may be used to understand where a symbol was originally sourced from, but does not affect actual appearance or rendering of the symbol.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Identifies a symbol in the style by name."
        },
        "styleName": {
          "type": "string",
          "description": "A registered web style name, such as `EsriThematicShapesStyle`"
        },
        "styleUrl": {
          "description": "URL to a style definition.",
          "oneOf": [
            {
              "type": "string",
              "format": "uri",
              "description": "An absolute URL"
            },
            {
              "type": "string",
              "description": "A relative path starting with ./",
              "pattern": "^\\./.+$"
            }
          ]
        }
      },
      "oneOf": [
        {
          "required": [
            "name",
            "styleName"
          ]
        },
        {
          "required": [
            "name",
            "styleUrl"
          ]
        }
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "styleOrigin",
            "schema": "pointSymbol3D_schema.json",
            "code": {
              "symbol": {
                "styleOrigin": {
                  "styleName": "EsriThematicTreesStyle",
                  "name": "Frangula"
                },
                "type": "PointSymbol3D",
                "symbolLayers": [
                  {
                    "type": "Object",
                    "resource": {
                      "href": "http://static.arcgis.com/arcgis/styleItems/ThematicTrees/web/resource/FrangulaAlnus.json"
                    },
                    "height": 100,
                    "material": {
                      "color": [
                        255,
                        0,
                        0
                      ]
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "fillSymbol3DLayer_schema.json": {
      "title": "FillSymbol3DLayer",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "FillSymbol3DLayer is used to render the surfaces of flat 2D Polygon geometries and 3D volumetric meshes in a SceneView.",
      "properties": {
        "castShadows": {
          "type": "boolean",
          "description": "Boolean to control the shadow casting behaviour of the rendered geometries.",
          "default": true
        },
        "edges": {
          "type": "object",
          "description": "Specifies an edge visualization style. Only affects MeshSymbol3D.",
          "$ref": "#/definitions/edges_schema.json"
        },
        "enable": {
          "type": "boolean"
        },
        "material": {
          "$ref": "#/definitions/materialColorMixMode_schema.json"
        },
        "outline": {
          "$ref": "#/definitions/outline_schema.json"
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "Fill"
          ]
        }
      },
      "required": [
        "material",
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Fill SymbolLayer",
            "code": {
              "symbolLayers": [
                {
                  "type": "Fill",
                  "material": {
                    "color": [
                      255,
                      0,
                      0
                    ],
                    "colorMixMode": "replace"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "edges_schema.json": {
      "title": "Edges",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Edges describe additional styles applied to visually important edges of 3D objects.",
      "oneOf": [
        {
          "$ref": "#/definitions/sketchEdges_schema.json"
        },
        {
          "$ref": "#/definitions/solidEdges_schema.json"
        }
      ]
    },
    "sketchEdges_schema.json": {
      "title": "Sketch Edges",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The sketch edge rendering configuration of a symbol layer. Edges of type `sketch` are rendered with a hand-drawn look in mind.",
      "properties": {
        "color": {
          "$ref": "#/definitions/color_schema.json"
        },
        "extensionLength": {
          "type": "number",
          "description": "A size in points by which to extend edges beyond their original end points."
        },
        "size": {
          "type": "number",
          "description": "Edge size in points, positive only",
          "minimum": 0
        },
        "transparency": {
          "type": "integer",
          "description": "The value has to lie between `100` (full transparency) and `0` (full opacity).",
          "minimum": 0,
          "maximum": 100
        },
        "type": {
          "type": "string",
          "description": "The type of edge visualization.",
          "enum": [
            "sketch"
          ]
        }
      },
      "required": [
        "color",
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "edges",
            "code": {
              "edges": {
                "type": "sketch",
                "color": [
                  255,
                  0,
                  0
                ],
                "size": 0.75,
                "transparency": 10,
                "extensionLength": 5
              }
            }
          }
        ]
      }
    },
    "solidEdges_schema.json": {
      "title": "Solid Edges",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The solid edge rendering configuration of a symbol layer. Edges of type `solid` are rendered in a single color, unaffected by scene lighting.",
      "properties": {
        "color": {
          "$ref": "#/definitions/color_schema.json"
        },
        "extensionLength": {
          "type": "number",
          "description": "A size in points by which to extend edges beyond their original end points."
        },
        "size": {
          "type": "number",
          "description": "Edge size in points, positive only",
          "minimum": 0
        },
        "transparency": {
          "type": "integer",
          "description": "The value has to lie between `100` (full transparency) and `0` (full opacity).",
          "minimum": 0,
          "maximum": 100
        },
        "type": {
          "type": "string",
          "description": "The type of edge visualization.",
          "enum": [
            "solid"
          ]
        }
      },
      "required": [
        "color",
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "edges",
            "code": {
              "edges": {
                "type": "solid",
                "color": [
                  255,
                  0,
                  0
                ],
                "size": 0.75,
                "transparency": 10,
                "extensionLength": 5
              }
            }
          }
        ]
      }
    },
    "materialColorMixMode_schema.json": {
      "title": "Material",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The material used to shade the geometry, including colorMixMode options.",
      "properties": {
        "color": {
          "$ref": "#/definitions/color_schema.json"
        },
        "colorMixMode": {
          "type": "string",
          "description": "Controls how symbolLayer or visualVariable color is applied onto the underlying geometry color/texture. This property only applies to FillSymbol3DLayer within MeshSymbol3D.\u003cbr\u003e\u003cul\u003e\u003cli\u003e`tint`: the feature\u0027s appearance (in terms of color) should be altered to match the symbol / visual variable color.\u003c/li\u003e\u003cli\u003e`replace`: the feature\u0027s color is replaced with the symbol / visual variable color.\u003c/li\u003e\u003cli\u003e`multiply`: the feature\u0027s color is multiplied with the symbol color.\u003c/li\u003e\u003c/ul\u003e",
          "enum": [
            "multiply",
            "replace",
            "tint"
          ]
        },
        "transparency": {
          "type": "integer",
          "description": "A value between `100` (full transparency) and `0` (full opacity). Ignored if no color is specified.",
          "minimum": 0,
          "maximum": 100
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "material",
            "code": {
              "material": {
                "color": [
                  255,
                  0,
                  0
                ],
                "transparency": 20,
                "colorMixMode": "tint"
              }
            }
          }
        ]
      }
    },
    "outline_schema.json": {
      "title": "Outline",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The outline of the symbol layer.",
      "properties": {
        "color": {
          "$ref": "#/definitions/color_schema.json"
        },
        "size": {
          "type": "number",
          "description": "Outline size in points, positive only",
          "minimum": 0
        },
        "transparency": {
          "type": "integer",
          "description": "The value has to lie between `100` (full transparency) and `0` (full opacity).",
          "minimum": 0,
          "maximum": 100
        }
      },
      "required": [
        "color",
        "size"
      ],
      "additionalProperties": false
    },
    "extrudeSymbol3DLayer_schema.json": {
      "title": "ExtrudeSymbol3DLayer",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "ExtrudeSymbol3DLayer is used to render Polygon geometries by extruding them upward from the ground, creating a 3D volumetric object.",
      "properties": {
        "castShadows": {
          "type": "boolean",
          "description": "Boolean to control the shadow casting behaviour of the rendered geometries.",
          "default": true
        },
        "edges": {
          "type": "object",
          "description": "Specifies an edge visualization style.",
          "$ref": "#/definitions/edges_schema.json"
        },
        "enable": {
          "type": "boolean"
        },
        "material": {
          "$ref": "#/definitions/material_schema.json"
        },
        "size": {
          "type": "number",
          "description": "Extrusion height in meters."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "Extrude"
          ]
        }
      },
      "required": [
        "size",
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Extrude SymbolLayer",
            "code": {
              "symbolLayer": {
                "type": "Extrude",
                "material": {
                  "color": [
                    255,
                    0,
                    0
                  ]
                },
                "size": 250
              }
            }
          }
        ]
      }
    },
    "material_schema.json": {
      "title": "Material",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The material used to shade the geometry.",
      "properties": {
        "color": {
          "$ref": "#/definitions/color_schema.json"
        },
        "transparency": {
          "type": "integer",
          "description": "A value between `100` (full transparency) and `0` (full opacity). Ignored if no color is specified.",
          "minimum": 0,
          "maximum": 100
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "material",
            "code": {
              "material": {
                "color": [
                  255,
                  0,
                  0
                ],
                "transparency": 20
              }
            }
          }
        ]
      }
    },
    "waterSymbol3DLayer_schema.json": {
      "title": "WaterSymbol3DLayer",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Symbol Layer that describes a water appearance on surfaces in a SceneView.",
      "properties": {
        "color": {
          "description": "The dominant water color.",
          "$ref": "#/definitions/color_schema.json",
          "default": [
            0,
            119,
            190
          ]
        },
        "enable": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "Water"
          ]
        },
        "waterbodySize": {
          "type": "string",
          "description": "Size of the waterbody the symbol layer represents. Applications will display waves that are appropriate for the chosen body of water, for example ocean versus marina versus swimming pool.",
          "enum": [
            "large",
            "medium",
            "small"
          ],
          "default": "medium"
        },
        "waveDirection": {
          "type": "number",
          "description": "Azimuthal bearing for direction of the waves. If ommitted, waves appear directionless. The value is interpreted as \u0027geographic\u0027 rotation, i.e. clockwise starting from north.",
          "minimum": 0,
          "maximum": 360
        },
        "waveStrength": {
          "type": "string",
          "description": "The magnitude of the waves displayed on the waterbody. Strings roughly follow the [Douglas sea scale](https://en.wikipedia.org/wiki/Douglas_sea_scale), currently limited to lower degrees.",
          "enum": [
            "calm",
            "moderate",
            "rippled",
            "slight"
          ],
          "default": "moderate"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Water SymbolLayer defaults",
            "code": {
              "symbolLayers": [
                {
                  "type": "Water"
                }
              ]
            }
          },
          {
            "title": "Water SymbolLayer",
            "code": {
              "symbolLayers": [
                {
                  "type": "Water",
                  "color": [
                    98,
                    182,
                    210
                  ],
                  "waterbodySize": "large",
                  "waveStrength": "rippled",
                  "waveDirection": 60
                }
              ]
            }
          }
        ]
      }
    },
    "iconSymbol3DLayer_schema.json": {
      "title": "IconSymbol3DLayer",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "IconSymbol3DLayer is used to render Point geometries using a flat 2D icon (e.g. a circle) with a PointSymbol3D in a SceneView.",
      "properties": {
        "anchor": {
          "type": "string",
          "enum": [
            "bottom",
            "bottomLeft",
            "bottomRight",
            "center",
            "left",
            "relative",
            "right",
            "top",
            "topLeft",
            "topRight"
          ],
          "default": "center"
        },
        "anchorPosition": {
          "type": "array",
          "description": "When `anchor` equals `relative`, this property specifies the position within the icon that should coincide with the feature geometry. Otherwise it is ignored. The position is defined as a factor of the icon dimensions that is added to the icon center: `positionInIcon \u003d (0.5 + anchorPosition) * size`, where `size` is the original size of the icon resource.",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "maxItems": 2
        },
        "enable": {
          "type": "boolean"
        },
        "material": {
          "$ref": "#/definitions/material_schema.json"
        },
        "outline": {
          "$ref": "#/definitions/outline_schema.json"
        },
        "resource": {
          "$ref": "#/definitions/iconSymbol3DLayer_resource_schema.json"
        },
        "size": {
          "type": "number",
          "description": "Icon size in points, positive only",
          "minimum": 0
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "Icon"
          ]
        }
      },
      "required": [
        "size",
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Icon symbol layer",
            "code": {
              "symbolLayers": [
                {
                  "type": "Icon",
                  "resource": {
                    "primitive": "kite"
                  },
                  "material": {
                    "color": [
                      255,
                      255,
                      255
                    ]
                  },
                  "size": 12,
                  "anchor": "bottom",
                  "outline": {
                    "size": 1,
                    "color": [
                      0,
                      0,
                      0
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Icon symbol layer with custom anchor in the bottom right region of the icon",
            "code": {
              "symbolLayers": [
                {
                  "type": "Icon",
                  "resource": {
                    "href": "http://hostname/icon.png"
                  },
                  "size": 12,
                  "anchor": "relative",
                  "anchorPosition": [
                    0.25,
                    0.4
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "iconSymbol3DLayer_resource_schema.json": {
      "title": "IconSymbol3DLayer Resource",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The shape (primitive) or image URL (href) used to visualize the features.",
      "properties": {
        "dataURI": {
          "type": "string",
          "description": "an image encoded as base64 string, starting with `data:image/`",
          "pattern": "^data:image/(.|\\n|\\r)+$"
        },
        "href": {
          "description": "URL to the returned image.",
          "oneOf": [
            {
              "type": "string",
              "description": "An absolute URL",
              "pattern": "^https?://.+$"
            },
            {
              "type": "string",
              "description": "A relative path starting with ./",
              "pattern": "^\\./.+$"
            }
          ]
        },
        "primitive": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "circle",
            "cross",
            "kite",
            "square",
            "triangle",
            "x"
          ]
        }
      },
      "oneOf": [
        {
          "required": [
            "primitive"
          ]
        },
        {
          "required": [
            "href"
          ]
        },
        {
          "required": [
            "dataURI"
          ]
        }
      ],
      "additionalProperties": false
    },
    "objectSymbol3DLayer_schema.json": {
      "title": "ObjectSymbol3DLayer",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "ObjectSymbol3DLayer is used to render Point geometries using a volumetric 3D shape (e.g., a sphere or cylinder) with a Symbol3D in a SceneView.",
      "properties": {
        "anchor": {
          "type": "string",
          "description": "The positioning of the object relative to the geometry.",
          "enum": [
            "bottom",
            "center",
            "origin",
            "relative",
            "top"
          ],
          "default": "origin"
        },
        "anchorPosition": {
          "type": "array",
          "description": "When `anchor` equals `relative`, this property specifies the positioning of the object relative to the geometry as a fraction of the symbol layer\u0027s bounding box. Otherwise it is ignored.",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        },
        "castShadows": {
          "type": "boolean",
          "description": "Boolean to control the shadow casting behaviour of the rendered geometries.",
          "default": true
        },
        "depth": {
          "type": "number",
          "description": "Object depth in meters, positive only",
          "minimum": 0
        },
        "enable": {
          "type": "boolean"
        },
        "heading": {
          "type": "number",
          "description": "Rotation angle around Z axis in degrees. At 0 degrees, the model points in the direction of the Y-axis. Positive values indicate clockwise rotation (when looked at from the top). [Detailed description](static/objectSymbolLayerOrientation.md)."
        },
        "height": {
          "type": "number",
          "description": "Object height in meters, positive only",
          "minimum": 0
        },
        "material": {
          "$ref": "#/definitions/material_schema.json"
        },
        "resource": {
          "$ref": "#/definitions/objectSymbol3DLayer_resource_schema.json"
        },
        "roll": {
          "type": "number",
          "description": "Rotation angle around Y axis in degrees. At 0 degrees, the model is level. A positive value lifts the left part and lowers the right part of the model. [Detailed description](static/objectSymbolLayerOrientation.md)."
        },
        "tilt": {
          "type": "number",
          "description": "Rotation angle around X axis in degrees. At 0 degrees, the model is level. A positive value lifts the front and lowers the back of the model. [Detailed description](static/objectSymbolLayerOrientation.md)."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "Object"
          ]
        },
        "width": {
          "type": "number",
          "description": "Object width in meters, positive only",
          "minimum": 0
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "additionalInformation": "- [Size property interaction](static/objectSymbolLayerSize.md)\n- [Anchor and `origin`](https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-ObjectSymbol3DLayer.html#anchor) in ArcGIS API for JavaScript.",
        "examples": [
          {
            "title": "Object symbol layer",
            "code": {
              "symbolLayers": [
                {
                  "type": "Object",
                  "resource": {
                    "primitive": "sphere"
                  },
                  "width": 50000,
                  "height": 50000,
                  "material": {
                    "color": [
                      128,
                      255,
                      0
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Object symbol layer with 3-axis rotation",
            "code": {
              "symbolLayers": [
                {
                  "type": "Object",
                  "resource": {
                    "primitive": "diamond"
                  },
                  "width": 50000,
                  "height": 50000,
                  "material": {
                    "color": [
                      128,
                      255,
                      0
                    ]
                  },
                  "heading": 12,
                  "tilt": 10,
                  "roll": 5
                }
              ]
            }
          },
          {
            "title": "Object symbol layer with relative anchor",
            "description": "Places a diamond symbol such that its Southern tip coincides with the point geometry (assuming ENU coordinates).",
            "code": {
              "symbolLayers": [
                {
                  "type": "Object",
                  "resource": {
                    "primitive": "diamond"
                  },
                  "width": 10000,
                  "anchor": "relative",
                  "anchorPosition": [
                    0,
                    -0.5,
                    0
                  ],
                  "material": {
                    "color": [
                      128,
                      255,
                      0
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Object symbol layer with casting shadows disabled",
            "code": {
              "symbolLayers": [
                {
                  "type": "Object",
                  "resource": {
                    "primitive": "cone"
                  },
                  "width": 50,
                  "height": 100,
                  "castShadows": false
                }
              ]
            }
          }
        ]
      }
    },
    "objectSymbol3DLayer_resource_schema.json": {
      "title": "ObjectSymbol3DLayer Resource",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The primitive shape (primitive) or external 3D model (href) used to visualize the points.",
      "properties": {
        "href": {
          "oneOf": [
            {
              "type": "string",
              "description": "An absolute URL",
              "pattern": "^https?://.+$"
            },
            {
              "type": "string",
              "description": "A relative path starting with ./",
              "pattern": "^\\./.+$"
            }
          ]
        },
        "primitive": {
          "type": "string",
          "enum": [
            "cone",
            "cube",
            "cylinder",
            "diamond",
            "invertedCone",
            "sphere",
            "tetrahedron"
          ]
        }
      },
      "oneOf": [
        {
          "required": [
            "primitive"
          ]
        },
        {
          "required": [
            "href"
          ]
        }
      ],
      "additionalProperties": false
    },
    "textSymbol3DLayer_schema.json": {
      "title": "TextSymbol3DLayer",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Symbol layer for text and font definitions.",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "font": {
          "$ref": "#/definitions/font_schema.json"
        },
        "halo": {
          "$ref": "#/definitions/halo_schema.json"
        },
        "material": {
          "$ref": "#/definitions/material_schema.json"
        },
        "size": {
          "type": "number",
          "description": "Font size in points, positive only",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Text content in the label. Typically this property is not set, as text content is read from labeling field."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "Text"
          ]
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "schema": "labelSymbol3D_schema.json",
            "code": {
              "symbol": {
                "type": "LabelSymbol3D",
                "symbolLayers": [
                  {
                    "size": 12,
                    "type": "Text",
                    "material": {
                      "color": [
                        255,
                        255,
                        0
                      ]
                    },
                    "font": {
                      "family": "Arial",
                      "weight": "bold"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "font_schema.json": {
      "title": "font",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Font used for text symbols.",
      "properties": {
        "decoration": {
          "type": "string",
          "description": "The text decoration.",
          "enum": [
            "line-through",
            "none",
            "underline"
          ],
          "default": "none"
        },
        "family": {
          "type": "string",
          "description": "The font family."
        },
        "size": {
          "type": "number",
          "description": "The font size in points. Ignored when font is used on TextSymbol3DLayer."
        },
        "style": {
          "type": "string",
          "description": "The text style.",
          "enum": [
            "italic",
            "normal",
            "oblique"
          ],
          "default": "normal"
        },
        "weight": {
          "type": "string",
          "description": "The text weight.",
          "enum": [
            "bold",
            "bolder",
            "lighter",
            "normal"
          ],
          "default": "normal"
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "font",
            "code": {
              "font": {
                "family": "Arial",
                "size": 12,
                "style": "normal",
                "weight": "bold",
                "decoration": "none"
              }
            }
          }
        ]
      }
    },
    "halo_schema.json": {
      "title": "halo",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Halo definition.",
      "properties": {
        "color": {
          "$ref": "#/definitions/color_schema.json"
        },
        "size": {
          "type": "number",
          "description": "Width of the halo in points."
        },
        "transparency": {
          "type": "integer",
          "description": "A value between `100` (full transparency) and `0` (full opacity).",
          "minimum": 0,
          "maximum": 100,
          "default": 0
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "halo",
            "code": {
              "halo": {
                "size": 2,
                "color": [
                  255,
                  255,
                  0
                ],
                "transparency": 70
              }
            }
          }
        ]
      }
    },
    "lineSymbol3DLayer_schema.json": {
      "title": "LineSymbol3DLayer",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "LineSymbol3DLayer renders Polyline geometries using a flat 2D line with a LineSymbol3D in a 3D SceneView.",
      "properties": {
        "cap": {
          "type": "string",
          "description": "Shape of the beginning and the end of each line geometry.",
          "enum": [
            "butt",
            "round",
            "square"
          ],
          "default": "butt"
        },
        "enable": {
          "type": "boolean"
        },
        "join": {
          "type": "string",
          "description": "Shape of the intersection of two line segments.",
          "enum": [
            "bevel",
            "miter",
            "round"
          ],
          "default": "miter"
        },
        "material": {
          "$ref": "#/definitions/material_schema.json"
        },
        "size": {
          "type": "number",
          "description": "Line width in points, positive only",
          "minimum": 0
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "Line"
          ]
        }
      },
      "required": [
        "size",
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Line SymbolLayer",
            "code": {
              "symbolLayers": [
                {
                  "type": "Line",
                  "material": {
                    "color": [
                      255,
                      0,
                      0
                    ]
                  },
                  "size": 12,
                  "cap": "round",
                  "join": "round"
                }
              ]
            }
          }
        ]
      }
    },
    "symbol3D_schema.json": {
      "title": "Symbol3D",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Symbol3D is the base class for all 3D symbols. It is used to render 2D Point, Polyline, and Polygon features in a FeatureLayer and 3D mesh features in a SceneLayer. All 3D symbols must be used in a SceneView instance; there is no support for 3D rendering in MapViews.",
      "oneOf": [
        {
          "$ref": "#/definitions/lineSymbol3D_schema.json"
        },
        {
          "$ref": "#/definitions/meshSymbol3D_schema.json"
        },
        {
          "$ref": "#/definitions/pointSymbol3D_schema.json"
        },
        {
          "$ref": "#/definitions/polygonSymbol3D_schema.json"
        },
        {
          "$ref": "#/definitions/styleSymbolReference_schema.json"
        }
      ]
    },
    "lineSymbol3D_schema.json": {
      "title": "LineSymbol3D",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "LineSymbol3D is used to render features with Polyline geometry in a 3D SceneView.",
      "properties": {
        "styleOrigin": {
          "$ref": "#/definitions/styleOrigin_schema.json"
        },
        "symbolLayers": {
          "type": "array",
          "description": "A Collection of Symbol3DLayer objects used to visualize the graphic or feature.",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/lineSymbol3DLayer_schema.json"
              },
              {
                "$ref": "#/definitions/pathSymbol3DLayer_schema.json"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "LineSymbol3D"
          ]
        }
      },
      "required": [
        "symbolLayers",
        "type"
      ],
      "additionalProperties": false
    },
    "pathSymbol3DLayer_schema.json": {
      "title": "PathSymbol3DLayer",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "PathSymbol3DLayer renders polyline geometries by extruding a 2D profile along the line, resulting in visualizations like tubes, walls, etc.",
      "properties": {
        "anchor": {
          "type": "string",
          "description": "The position of the extrusion profile with respect to the polyline geometry.",
          "enum": [
            "bottom",
            "center",
            "top"
          ],
          "default": "center"
        },
        "cap": {
          "type": "string",
          "description": "Shape of the beginning and the end of each line geometry.",
          "enum": [
            "butt",
            "none",
            "round",
            "square"
          ],
          "default": "butt"
        },
        "castShadows": {
          "type": "boolean",
          "description": "Boolean to control the shadow casting behaviour of the rendered geometries.",
          "default": true
        },
        "enable": {
          "type": "boolean"
        },
        "height": {
          "type": "number",
          "description": "Path height in meters. If unspecified, it is equal to `width`.",
          "minimum": 0
        },
        "join": {
          "type": "string",
          "description": "Shape of the intersection of two line segments.",
          "enum": [
            "bevel",
            "miter",
            "round"
          ],
          "default": "miter"
        },
        "material": {
          "$ref": "#/definitions/material_schema.json"
        },
        "profile": {
          "type": "string",
          "description": "The shape which is extruded along the line.",
          "enum": [
            "circle",
            "quad"
          ],
          "default": "circle"
        },
        "profileRotation": {
          "type": "string",
          "description": "Specifies the axes about which the profile may be rotated at the joins. Constraining the rotation axes leads to a fixed orientation of the profile for the specified directions.",
          "enum": [
            "all",
            "heading"
          ],
          "default": "all"
        },
        "size": {
          "type": "number",
          "description": "Path size (diameter) in meters. Ignored if either `width` or `height` are present.",
          "minimum": 0
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used.",
          "enum": [
            "Path"
          ]
        },
        "width": {
          "type": "number",
          "description": "Path width in meters. If unspecified, it is equal to `height`.",
          "minimum": 0
        }
      },
      "anyOf": [
        {
          "required": [
            "type",
            "size"
          ]
        },
        {
          "required": [
            "type",
            "width"
          ]
        },
        {
          "required": [
            "type",
            "height"
          ]
        }
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Red tube",
            "code": {
              "symbolLayers": [
                {
                  "type": "Path",
                  "material": {
                    "color": [
                      255,
                      0,
                      0
                    ]
                  },
                  "size": 12
                }
              ]
            }
          },
          {
            "title": "Thin wall",
            "code": {
              "symbolLayers": [
                {
                  "type": "Path",
                  "profile": "quad",
                  "width": 0,
                  "height": 50,
                  "anchor": "bottom",
                  "profileRotation": "heading"
                }
              ]
            }
          },
          {
            "title": "Strip",
            "code": {
              "symbolLayers": [
                {
                  "type": "Path",
                  "profile": "quad",
                  "width": 10,
                  "height": 1,
                  "anchor": "center",
                  "profileRotation": "heading"
                }
              ]
            }
          }
        ]
      }
    },
    "meshSymbol3D_schema.json": {
      "title": "MeshSymbol3D",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "MeshSymbol3D is used to render 3D mesh features in a SceneLayer in a 3D SceneView.",
      "properties": {
        "styleOrigin": {
          "$ref": "#/definitions/styleOrigin_schema.json"
        },
        "symbolLayers": {
          "type": "array",
          "description": "A Collection of Symbol3DLayer objects used to visualize the graphic or feature.",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/fillSymbol3DLayer_schema.json"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used",
          "enum": [
            "MeshSymbol3D"
          ]
        }
      },
      "required": [
        "symbolLayers",
        "type"
      ],
      "additionalProperties": false
    },
    "pointSymbol3D_schema.json": {
      "title": "PointSymbol3D",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "PointSymbol3D is used to render features with Point geometry in a 3D SceneView.",
      "properties": {
        "callout": {
          "$ref": "#/definitions/callout_schema.json"
        },
        "styleOrigin": {
          "$ref": "#/definitions/styleOrigin_schema.json"
        },
        "symbolLayers": {
          "type": "array",
          "description": "A Collection of Symbol3DLayer objects used to visualize the graphic or feature.",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/iconSymbol3DLayer_schema.json"
              },
              {
                "$ref": "#/definitions/objectSymbol3DLayer_schema.json"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of symbol used",
          "enum": [
            "PointSymbol3D"
          ]
        },
        "verticalOffset": {
          "$ref": "#/definitions/verticalOffset_schema.json"
        }
      },
      "required": [
        "symbolLayers",
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "Point Symbol 3D",
            "code": {
              "symbol": {
                "type": "PointSymbol3D",
                "symbolLayers": [
                  {
                    "width": 30000,
                    "height": 160000,
                    "resource": {
                      "primitive": "cylinder"
                    },
                    "type": "Object",
                    "material": {
                      "color": [
                        0,
                        255,
                        0
                      ]
                    }
                  }
                ]
              }
            }
          },
          {
            "title": "Icon Point Symbol with verticalOffset and leader line callout",
            "code": {
              "symbol": {
                "type": "PointSymbol3D",
                "symbolLayers": [
                  {
                    "size": 16,
                    "resource": {
                      "primitive": "circle"
                    },
                    "type": "Icon",
                    "material": {
                      "color": [
                        0,
                        255,
                        0
                      ]
                    }
                  }
                ],
                "callout": {
                  "type": "line",
                  "color": [
                    255,
                    255,
                    255
                  ],
                  "size": 0.75,
                  "border": {
                    "color": [
                      50,
                      50,
                      50
                    ]
                  }
                },
                "verticalOffset": {
                  "screenLength": 100,
                  "maxWorldLength": 600,
                  "minWorldLength": 10
                }
              }
            }
          }
        ]
      }
    },
    "callout_schema.json": {
      "title": "Callout",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Callout configuration for a symbol.",
      "properties": {
        "border": {
          "$ref": "#/definitions/border_schema.json"
        },
        "color": {
          "description": "The color of the line.",
          "$ref": "#/definitions/color_schema.json"
        },
        "size": {
          "type": "number",
          "description": "The width of the line in points.",
          "minimum": 0
        },
        "transparency": {
          "type": "integer",
          "description": "A value between `100` (full transparency) and `0` (full opacity).",
          "minimum": 0,
          "maximum": 100,
          "default": 0
        },
        "type": {
          "type": "string",
          "description": "The type of the callout. A callout of type `line` connects an offset symbol or label with its location.",
          "enum": [
            "line"
          ]
        }
      },
      "required": [
        "color",
        "size",
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "additionalInformation": "[Callout3D](https://developers.arcgis.com/javascript/latest/api-reference/esri-symbols-callouts-Callout3D.html) in ArcGIS API for JavaScript.",
        "examples": [
          {
            "title": "leader line",
            "code": {
              "callout": {
                "type": "line",
                "size": 0.75,
                "color": [
                  255,
                  255,
                  255
                ],
                "transparency": 20,
                "border": {
                  "color": [
                    50,
                    50,
                    50
                  ],
                  "transparency": 50
                }
              }
            }
          }
        ]
      }
    },
    "border_schema.json": {
      "title": "border",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Optional border on the line that is used to improve the contrast of the line color against various background colors.",
      "properties": {
        "color": {
          "$ref": "#/definitions/color_schema.json"
        },
        "transparency": {
          "type": "integer",
          "description": "A value between `100` (full transparency) and `0` (full opacity).",
          "minimum": 0,
          "maximum": 100,
          "default": 0
        }
      },
      "required": [
        "color"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "border",
            "code": {
              "border": {
                "color": [
                  255,
                  255,
                  255
                ],
                "transparency": 50
              }
            }
          }
        ]
      }
    },
    "verticalOffset_schema.json": {
      "title": "verticalOffset",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Shifts the symbol along the vertical world axis by a given length. The length is set in screen space units.",
      "properties": {
        "maxWorldLength": {
          "type": "number",
          "description": "The maximum vertical symbol lift in world units. It acts as an upper bound to avoid lift becoming too big."
        },
        "minWorldLength": {
          "type": "number",
          "description": "The minimum vertical symbol lift in world units. It acts as a lower bound to avoid lift becoming too small.",
          "default": 0
        },
        "screenLength": {
          "type": "number",
          "description": "Maximal screen length of lift in points."
        }
      },
      "required": [
        "screenLength"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "verticalOffset",
            "code": {
              "verticalOffset": {
                "screenLength": 100,
                "maxWorldLength": 600,
                "minWorldLength": 10
              }
            }
          }
        ]
      }
    },
    "styleSymbolReference_schema.json": {
      "title": "StyleSymbolReference",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The StyleSymbolReference is used to reference a symbol from a portal styleItem",
      "properties": {
        "name": {
          "type": "string",
          "description": "Identifies a symbol in the style by name."
        },
        "styleName": {
          "type": "string",
          "description": "A registered web style name, such as `EsriThematicTreesStyle`"
        },
        "styleUrl": {
          "type": "string",
          "description": "URL to a style definition."
        },
        "type": {
          "type": "string",
          "description": "The type of the symbol",
          "enum": [
            "styleSymbolReference"
          ]
        }
      },
      "oneOf": [
        {
          "required": [
            "type",
            "name",
            "styleUrl"
          ]
        },
        {
          "required": [
            "type",
            "name",
            "styleName"
          ]
        }
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "code": {
              "symbol": {
                "type": "styleSymbolReference",
                "styleName": "EsriThematicTreesStyle",
                "name": "Frangula"
              }
            }
          }
        ]
      }
    },
    "rendererLegendOptions_schema.json": {
      "title": "Renderer Legend Options",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Options available for the renderer legend.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the legend."
        }
      }
    },
    "uniqueValueInfo_schema.json": {
      "title": "uniqueValueInfo",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Info item for the Unique Value Renderer. Its symbol gets selected if the feature\u0027s field matches its value.",
      "properties": {
        "description": {
          "type": "string",
          "description": "String value used to describe the drawn symbol."
        },
        "label": {
          "type": "string",
          "description": "String value used to label the drawn symbol."
        },
        "symbol": {
          "type": "object",
          "description": "An object used to display the value.",
          "$ref": "#/definitions/symbol3D_schema.json"
        },
        "value": {
          "type": "string",
          "description": "String value indicating the unique value."
        }
      },
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "uniqueValueInfo",
            "code": {
              "uniqueValueInfo": {
                "value": "Pacific",
                "label": "Pacific region",
                "description": "The Pacific region description",
                "symbol": {
                  "type": "PointSymbol3D",
                  "symbolLayers": [
                    {
                      "type": "Icon",
                      "resource": {
                        "primitive": "circle"
                      },
                      "material": {
                        "color": [
                          255,
                          255,
                          255
                        ]
                      },
                      "size": 12
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "visualVariable_schema.json": {
      "title": "visualVariable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "An object used to set rendering options. Please see the individual visual variable for specific information on how it is used.",
      "oneOf": [
        {
          "$ref": "#/definitions/colorInfo_visualVariable_schema.json"
        },
        {
          "$ref": "#/definitions/rotationInfo_visualVariable_schema.json"
        },
        {
          "$ref": "#/definitions/sizeInfo_visualVariable_schema.json"
        },
        {
          "$ref": "#/definitions/transparencyInfo_visualVariable_schema.json"
        }
      ]
    },
    "colorInfo_visualVariable_schema.json": {
      "title": "ColorInfo Visual Variable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The colorInfo visual variable defines how a continuous color ramp is applied to features based on the values of a numeric field attribute.",
      "properties": {
        "field": {
          "type": "string",
          "description": "Attribute field used for color rendering if no valueExpression is provided."
        },
        "legendOptions": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/visualVariableLegendOptions_schema.json"
            },
            {
              "properties": {
                "title": {},
                "showLegend": {}
              },
              "additionalProperties": false
            }
          ]
        },
        "normalizationField": {
          "type": "string",
          "description": "Attribute field used to normalize the data."
        },
        "stops": {
          "type": "array",
          "description": "An array of stop objects.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/colorStop_schema.json"
          }
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of visual variable.",
          "enum": [
            "colorInfo"
          ]
        },
        "valueExpression": {
          "type": "string",
          "description": "An [Arcade expression](https://developers.arcgis.com/arcade/) that computes a value in lieu of a value provided by an attribute `field`."
        },
        "valueExpressionTitle": {
          "type": "string",
          "description": "The title identifying and describing the associated [Arcade](https://developers.arcgis.com/arcade/) expression as defined in the `valueExpression` property."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "colorInfo",
            "description": "Live sample web scene showing [use of the colorInfo visual variable](https://www.arcgis.com/home/webscene/viewer.html?webscene\u003ded2892fef34b43b8a5cc61c8ff890c6f).",
            "code": {
              "visualVariables": [
                {
                  "type": "colorInfo",
                  "field": "M086_07",
                  "stops": [
                    {
                      "value": -99,
                      "color": [
                        255,
                        252,
                        212,
                        255
                      ],
                      "label": "\u003c -99"
                    },
                    {
                      "value": 705950,
                      "color": [
                        177,
                        205,
                        194,
                        255
                      ]
                    },
                    {
                      "value": 1411999,
                      "color": [
                        98,
                        158,
                        176,
                        255
                      ],
                      "label": "1,411,999"
                    },
                    {
                      "value": 2578189,
                      "color": [
                        56,
                        98,
                        122,
                        255
                      ]
                    },
                    {
                      "value": 3744380,
                      "color": [
                        13,
                        38,
                        68,
                        255
                      ],
                      "label": "\u003e 3,744,380"
                    }
                  ]
                }
              ]
            }
          },
          {
            "title": "constant colorInfo",
            "description": "visual Variable with constant color",
            "code": {
              "visualVariables": [
                {
                  "type": "colorInfo",
                  "legendOptions": {
                    "title": "color"
                  },
                  "stops": [
                    {
                      "color": [
                        255,
                        0,
                        0,
                        255
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "visualVariableLegendOptions_schema.json": {
      "title": "Visual Variable Legend Options",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Options available for the legend for visual variables.",
      "properties": {
        "customValues": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "showLegend": {
          "type": "boolean",
          "description": "Indicates whether to show the color/size/opacity ramp in the legend."
        },
        "title": {
          "type": "string",
          "description": "The title of the legend."
        }
      }
    },
    "colorStop_schema.json": {
      "title": "colorStop",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "A colorStop object describes the renderer\u0027s color ramp with more specificity than just colors.",
      "properties": {
        "color": {
          "description": "A CSS color string or an array of rbga values. The color to place at the stop indicated by either a ratio or value.",
          "$ref": "#/definitions/color_schema.json"
        },
        "label": {
          "type": "string",
          "description": "Value if a label is needed on the legend for a stop."
        },
        "value": {
          "type": "number",
          "description": "The pixel intensity value. Describes the pixel intensity value that the color should be associated with. Just like in colorInfo, using value will ignore `maxPixelIntensity` and `minPixelIntensity` properties. It will actually set those properties to maximum and minimum values you set in the colorStops array. The hard values are converted to ratios to create the color gradient that is used in the heatmap calculations. Setting `minPixelIntensity` or `maxPixelIntensity`, after setting colorStops with values, removes the hard link between the color ramp and the pixel intensity values that were used to create it."
        }
      },
      "required": [
        "color"
      ],
      "esriDocumentation": {
        "examples": [
          {
            "title": "colorStops",
            "code": {
              "stop": {
                "value": 8035,
                "color": [
                  255,
                  252,
                  212,
                  255
                ],
                "label": "\u003c 8,035"
              }
            }
          }
        ]
      }
    },
    "rotationInfo_visualVariable_schema.json": {
      "title": "RotationInfo Visual Variable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The rotation visual variable defines how features rendered with marker symbols are rotated. The rotation value is determined by a value in a field or an Arcade expression calculating a value. Use either the `field` property or `valueExpression` when specifying rotation values.",
      "properties": {
        "axis": {
          "type": "string",
          "description": "Defines the rotation axis the visual variable should be applied to when rendering features with an ObjectSymbol3DLayer. [Detailed description](static/objectSymbolLayerOrientation.md).",
          "enum": [
            "heading",
            "roll",
            "tilt"
          ],
          "default": "heading"
        },
        "field": {
          "type": "string",
          "description": "Attribute field used for setting the rotation of a symbol if no `valueExpression` is provided."
        },
        "legendOptions": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/visualVariableLegendOptions_schema.json"
            },
            {
              "properties": {
                "title": {},
                "showLegend": {}
              },
              "additionalProperties": false
            }
          ]
        },
        "rotationType": {
          "type": "string",
          "description": "Defines the origin and direction of rotation depending on how the angle of rotation was measured. Possible values are `geographic` which rotates the symbol from the north in a clockwise direction and `arithmetic` which rotates the symbol from the east in a counter-clockwise direction.",
          "enum": [
            "arithmetic",
            "geographic"
          ],
          "default": "geographic"
        },
        "type": {
          "type": "string",
          "description": "A string value indicating the type of visual variable used for the renderer.",
          "enum": [
            "rotationInfo"
          ]
        },
        "valueExpression": {
          "type": "string",
          "description": "An [Arcade expression](https://developers.arcgis.com/arcade/) evaluating to a number."
        },
        "valueExpressionTitle": {
          "type": "string",
          "description": "The title identifying and describing the associated [Arcade expression] (https://developers.arcgis.com/arcade/) as defined in the `valueExpression` property."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "RotationInfo Visual Variable",
            "description": "Live sample web scene showing [use of the rotationInfo visual variable](https://www.arcgis.com/home/webscene/viewer.html?webscene\u003d30973f38dc5f4e019bf7f4926abd1571).",
            "code": {
              "visualVariables": [
                {
                  "type": "rotationInfo",
                  "rotationType": "geographic",
                  "field": "WIND_DIRECT"
                }
              ]
            }
          }
        ]
      }
    },
    "sizeInfo_visualVariable_schema.json": {
      "title": "SizeInfo Visual Variable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The sizeInfo visual variable defines how size is applied to features based on the values of a numeric field attribute. The minimum and maximum values of the data should be indicated along with their respective size values. You must specify either `minSize` and `maxSize`, or `stops`, or `valueUnit` to construct the size ramp. All features with values falling in between the specified min and max data values (or stops) will be scaled proportionally between the provided min and max sizes.",
      "properties": {
        "axis": {
          "type": "string",
          "description": "Defines the axis the size visual variable should be applied to when rendering features with an ObjectSymbol3DLayer.",
          "enum": [
            "all",
            "depth",
            "height",
            "width",
            "widthAndDepth"
          ],
          "default": "all"
        },
        "field": {
          "type": "string",
          "description": "Attribute field used for size rendering if no valueExpression is provided."
        },
        "legendOptions": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/visualVariableLegendOptions_schema.json"
            },
            {
              "properties": {
                "customValues": {},
                "title": {},
                "showLegend": {}
              },
              "additionalProperties": false
            }
          ]
        },
        "maxDataValue": {
          "type": "number",
          "description": "The maximum data value."
        },
        "maxSize": {
          "type": "number",
          "description": "Specifies the maximum size to be applied to the symbol. This is required if valueUnit is set to `unknown`."
        },
        "minDataValue": {
          "type": "number",
          "description": "The minimum data value."
        },
        "minSize": {
          "type": "number",
          "description": "Specifies the minimum size to be applied to the symbol. This is required if valueUnit is set to `unknown`."
        },
        "normalizationField": {
          "type": "string",
          "description": "Attribute field used to normalize the data."
        },
        "stops": {
          "type": "array",
          "description": "An array of objects that defines the thematic size ramp in a sequence of data or expression stops. At least two stops are required. The stops must be listed in ascending order based on the value of the `value` property in each stop. This property is required if `minDataValue`, `maxDataValue`, `minSize`, and `maxSize` are not defined.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/sizeStop_schema.json"
          }
        },
        "target": {
          "type": "string",
          "description": "Only used when sizeInfo is used for polygon outlines.",
          "enum": [
            "outline"
          ]
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of visual variable.",
          "enum": [
            "sizeInfo"
          ]
        },
        "useSymbolValue": {
          "type": "boolean",
          "description": "When setting a size visual variable on a renderer using an ObjectSymbol3DLayer, this property indicates whether to apply the value defined by the height, width, or depth properties to the corresponding axis of this visual variable instead of proportionally scaling this axis\u0027 value after other axes."
        },
        "valueExpression": {
          "type": "string",
          "description": "An [Arcade expression](https://developers.arcgis.com/arcade/) evaluating to a number."
        },
        "valueExpressionTitle": {
          "type": "string",
          "description": "The title identifying and describing the associated [Arcade](https://developers.arcgis.com/arcade/) expression as defined in the `valueExpression` property."
        },
        "valueRepresentation": {
          "type": "string",
          "description": "Specifies how to apply the data value when mapping real-world sizes. See table below for supported values.",
          "enum": [
            "area",
            "diameter",
            "distance",
            "radius",
            "width"
          ]
        },
        "valueUnit": {
          "type": "string",
          "description": "A string value indicating the unit of measurement. Defaults to `meters` if not set.",
          "enum": [
            "centimeters",
            "decimal-degrees",
            "decimeters",
            "feet",
            "inches",
            "kilometers",
            "meters",
            "miles",
            "millimeters",
            "nautical-miles",
            "unknown",
            "yards"
          ],
          "default": "meters"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "sizeInfo",
            "description": "Live sample web scene showing [use of the sizeInfo visual variable](https://www.arcgis.com/home/webscene/viewer.html?webscene\u003ded2892fef34b43b8a5cc61c8ff890c6f).",
            "code": {
              "visualVariables": [
                {
                  "type": "sizeInfo",
                  "field": "Deaths",
                  "axis": "all",
                  "minSize": 6,
                  "maxSize": 37,
                  "minDataValue": 2814,
                  "maxDataValue": 121179
                }
              ]
            }
          },
          {
            "title": "sizeInfo with stops",
            "code": {
              "visualVariables": [
                {
                  "type": "sizeInfo",
                  "field": "Deaths",
                  "legendOptions": {
                    "title": "size",
                    "customValues": [
                      1,
                      2,
                      3
                    ]
                  },
                  "stops": [
                    {
                      "value": 2814,
                      "size": 6
                    },
                    {
                      "value": 121179,
                      "size": 37
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "sizeStop_schema.json": {
      "title": "sizeStop",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "A `sizeStop` object describes the size of the symbol at various values of the expression.",
      "properties": {
        "label": {
          "type": "string",
          "description": "Value if a label is needed on the legend for a stop."
        },
        "size": {
          "type": "number",
          "description": "Specifies the marker size to use for the specified value."
        },
        "value": {
          "type": "number",
          "description": "The value to be mapped to a size."
        }
      },
      "required": [
        "size",
        "value"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "code": {
              "stop": {
                "value": 0,
                "size": 255
              }
            }
          }
        ]
      }
    },
    "transparencyInfo_visualVariable_schema.json": {
      "title": "TransparencyInfo Visual Variable",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The transparencyInfo visual variable defines the transparency, or opacity, of each feature\u0027s symbol based on a numeric attribute field value.",
      "properties": {
        "field": {
          "type": "string",
          "description": "Attribute field used for setting the transparency of a feature if no `valueExpression` is provided."
        },
        "legendOptions": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/visualVariableLegendOptions_schema.json"
            },
            {
              "properties": {
                "title": {},
                "showLegend": {}
              },
              "additionalProperties": false
            }
          ]
        },
        "normalizationField": {
          "type": "string",
          "description": "Attribute field used to normalize the data."
        },
        "stops": {
          "type": "array",
          "description": "An array of transparencyStop objects.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/transparencyStop_schema.json"
          }
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of visual variable.",
          "enum": [
            "transparencyInfo"
          ]
        },
        "valueExpression": {
          "type": "string",
          "description": "An [Arcade expression](https://developers.arcgis.com/arcade/) evaluating to a number."
        },
        "valueExpressionTitle": {
          "type": "string",
          "description": "The title identifying and describing the associated [Arcade](https://developers.arcgis.com/arcade/) expression as defined in the `valueExpression` property."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "title": "transparencyInfo",
            "description": "Live sample web scene showing [use of the transparencyInfo visual variable](https://www.arcgis.com/home/webscene/viewer.html?webscene\u003d593dc1e98a1d447fb09b09d486355ef0).",
            "code": {
              "visualVariables": [
                {
                  "type": "transparencyInfo",
                  "field": "strength",
                  "stops": [
                    {
                      "value": 21,
                      "transparency": 60
                    },
                    {
                      "value": 39,
                      "transparency": 10
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "transparencyStop_schema.json": {
      "title": "transparencyStop",
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "The transparencyStop object defines the thematic opacity ramp in a sequence of stops. At least two stops are required. The stops must be listed in ascending order based on the value of the `value` property in each stop.",
      "properties": {
        "label": {
          "type": "string",
          "description": "A string value used to label the stop in the legend."
        },
        "transparency": {
          "type": "integer",
          "description": "A numeric transparancy value for a stop ranging from 0-100, where 0 is opaque and 100 is 100% transparent.",
          "minimum": 0,
          "maximum": 100
        },
        "value": {
          "type": "number",
          "description": "The pixel intensity value. Describes the pixel intensity value that the color should be associated with."
        }
      },
      "required": [
        "transparency",
        "value"
      ],
      "additionalProperties": false,
      "esriDocumentation": {
        "examples": [
          {
            "code": {
              "stop": {
                "value": 0,
                "transparency": 50
              }
            }
          }
        ]
      }
    }
  }
}