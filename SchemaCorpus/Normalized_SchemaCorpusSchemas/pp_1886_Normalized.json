{
  "id": "https://schema.management.azure.com/schemas/2019-04-01/Microsoft.Network.FrontDoor.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Network",
  "description": "Microsoft Network Resource Types",
  "resourceDefinitions": {
    "frontDoors": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
              "minLength": 5,
              "maxLength": 64
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Name of the Front Door which is globally unique."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FrontDoorProperties"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create an endpoint."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Network/frontDoors"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Network/frontDoors"
    }
  },
  "definitions": {
    "Backend": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Location of the backend (IP address or FQDN)"
        },
        "backendHostHeader": {
          "type": "string",
          "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host."
        },
        "enabledState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Whether to enable use of this backend. Permitted values are \u0027Enabled\u0027 or \u0027Disabled\u0027."
        },
        "httpPort": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The HTTP TCP port number. Must be between 1 and 65535."
        },
        "httpsPort": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The HTTPS TCP port number. Must be between 1 and 65535."
        },
        "priority": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 5
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy."
        },
        "weight": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Weight of this endpoint for load balancing purposes."
        }
      },
      "description": "Backend address of a frontDoor load balancer."
    },
    "BackendPool": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BackendPoolProperties"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create a routing rule."
        }
      },
      "description": "A backend pool is a collection of backends that can be routed to."
    },
    "BackendPoolProperties": {
      "type": "object",
      "properties": {
        "backends": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Backend"
              }
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The set of backends for this pool"
        },
        "healthProbeSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Reference to another subresource."
        },
        "loadBalancingSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Reference to another subresource."
        },
        "resourceState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Enabling",
                "Enabled",
                "Disabling",
                "Disabled",
                "Deleting"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Resource status."
        }
      },
      "description": "The JSON object that contains the properties required to create a routing rule."
    },
    "BackendPoolsSettings": {
      "type": "object",
      "properties": {
        "enforceCertificateNameCheck": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests."
        }
      },
      "description": "Settings that apply to all backend pools."
    },
    "CacheConfiguration": {
      "type": "object",
      "properties": {
        "dynamicCompression": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Whether to use dynamic compression for cached content."
        },
        "queryParameterStripDirective": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "StripNone",
                "StripAll"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Treatment of URL query terms when forming the cache key."
        }
      },
      "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object."
    },
    "ForwardingConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration"
          ]
        },
        "backendPool": {
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Reference to another subresource."
        },
        "cacheConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheConfiguration"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object."
        },
        "customForwardingPath": {
          "type": "string",
          "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path."
        },
        "forwardingProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "HttpOnly",
                "HttpsOnly",
                "MatchRequest"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Protocol this rule will use when forwarding traffic to backends."
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes Forwarding Route."
    },
    "FrontDoorProperties": {
      "type": "object",
      "properties": {
        "backendPools": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackendPool"
              }
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Backend pools available to routing rules."
        },
        "backendPoolsSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/BackendPoolsSettings"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Settings that apply to all backend pools."
        },
        "enabledState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Operational status of the Front Door load balancer. Permitted values are \u0027Enabled\u0027 or \u0027Disabled\u0027."
        },
        "friendlyName": {
          "type": "string",
          "description": "A friendly name for the frontDoor"
        },
        "frontendEndpoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FrontendEndpoint"
              }
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Frontend endpoints available to routing rules."
        },
        "healthProbeSettings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HealthProbeSettingsModel"
              }
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Health probe settings associated with this Front Door instance."
        },
        "loadBalancingSettings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoadBalancingSettingsModel"
              }
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Load balancing settings associated with this Front Door instance."
        },
        "resourceState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Enabling",
                "Enabled",
                "Disabling",
                "Disabled",
                "Deleting"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Resource status of the Front Door."
        },
        "routingRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoutingRule"
              }
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Routing rules associated with this Front Door."
        }
      },
      "description": "The JSON object that contains the properties required to create an endpoint."
    },
    "FrontendEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FrontendEndpointProperties"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create a frontend endpoint."
        }
      },
      "description": "A frontend endpoint used for routing."
    },
    "FrontendEndpointProperties": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The host name of the frontendEndpoint. Must be a domain name."
        },
        "resourceState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Enabling",
                "Enabled",
                "Disabling",
                "Disabled",
                "Deleting"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Resource status."
        },
        "sessionAffinityEnabledState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Whether to allow session affinity on this host. Valid options are \u0027Enabled\u0027 or \u0027Disabled\u0027."
        },
        "sessionAffinityTtlSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable."
        },
        "webApplicationFirewallPolicyLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Defines the Web Application Firewall policy for each host (if applicable)"
        }
      },
      "description": "The JSON object that contains the properties required to create a frontend endpoint."
    },
    "FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Defines the Web Application Firewall policy for each host (if applicable)"
    },
    "HealthProbeSettingsModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HealthProbeSettingsProperties"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create a health probe settings."
        }
      },
      "description": "Load balancing settings for a backend pool"
    },
    "HealthProbeSettingsProperties": {
      "type": "object",
      "properties": {
        "intervalInSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The number of seconds between health probes."
        },
        "path": {
          "type": "string",
          "description": "The path to use for the health probe. Default is /"
        },
        "protocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Http",
                "Https"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Protocol scheme to use for this probe."
        },
        "resourceState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Enabling",
                "Enabled",
                "Disabling",
                "Disabled",
                "Deleting"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Resource status."
        }
      },
      "description": "The JSON object that contains the properties required to create a health probe settings."
    },
    "LoadBalancingSettingsModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LoadBalancingSettingsProperties"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create load balancing settings"
        }
      },
      "description": "Load balancing settings for a backend pool"
    },
    "LoadBalancingSettingsProperties": {
      "type": "object",
      "properties": {
        "additionalLatencyMilliseconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket"
        },
        "resourceState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Enabling",
                "Enabled",
                "Disabling",
                "Disabled",
                "Deleting"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Resource status."
        },
        "sampleSize": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The number of samples to consider for load balancing decisions"
        },
        "successfulSamplesRequired": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The number of samples within the sample period that must succeed"
        }
      },
      "description": "The JSON object that contains the properties required to create load balancing settings"
    },
    "RedirectConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration"
          ]
        },
        "customFragment": {
          "type": "string",
          "description": "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #."
        },
        "customHost": {
          "type": "string",
          "description": "Host to redirect. Leave empty to use the incoming host as the destination host."
        },
        "customPath": {
          "type": "string",
          "description": "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path."
        },
        "customQueryString": {
          "type": "string",
          "description": "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in \u003ckey\u003e\u003d\u003cvalue\u003e format. The first ? and \u0026 will be added automatically so do not include them in the front, but do separate multiple query strings with \u0026."
        },
        "redirectProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "HttpOnly",
                "HttpsOnly",
                "MatchRequest"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The protocol of the destination to where the traffic is redirected."
        },
        "redirectType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Moved",
                "Found",
                "TemporaryRedirect",
                "PermanentRedirect"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The redirect type the rule will use when redirecting traffic."
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes Redirect Route."
    },
    "RouteConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ForwardingConfiguration"
        },
        {
          "$ref": "#/definitions/RedirectConfiguration"
        }
      ],
      "properties": {},
      "description": "Base class for all types of Route."
    },
    "RoutingRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/RoutingRuleProperties"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create a routing rule."
        }
      },
      "description": "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information."
    },
    "RoutingRuleProperties": {
      "type": "object",
      "properties": {
        "acceptedProtocols": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Http",
                  "Https"
                ]
              }
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Protocol schemes to match for this rule"
        },
        "enabledState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Whether to enable use of this rule. Permitted values are \u0027Enabled\u0027 or \u0027Disabled\u0027."
        },
        "frontendEndpoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubResource"
              }
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Frontend endpoints associated with this rule"
        },
        "patternsToMatch": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "The route patterns of the rule."
        },
        "resourceState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Enabling",
                "Enabled",
                "Disabling",
                "Disabled",
                "Deleting"
              ]
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Resource status."
        },
        "routeConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/RouteConfiguration"
            },
            {
              "$ref": "#/definitions/..\\common\\definitions.json_definitions_expression"
            }
          ],
          "description": "Base class for all types of Route."
        }
      },
      "description": "The JSON object that contains the properties required to create a routing rule."
    },
    "SubResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Reference to another subresource."
    },
    "..\\common\\definitions.json_definitions_expression": {
      "type": "string",
      "pattern": "^\\[([^\\[].*)?\\]$",
      "description": "Deployment template expression. See https://aka.ms/arm-template-expressions for more details on the ARM expression syntax."
    }
  }
}