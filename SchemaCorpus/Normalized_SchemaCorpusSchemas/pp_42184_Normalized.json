{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Resource",
  "description": "Cloudformation template resource",
  "oneOf": [
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::Account"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::ApiKey"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::Authorizer"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::BasePathMapping"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::ClientCertificate"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::Deployment"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::Method"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::Model"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::Resource"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::RestApi"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::Stage"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApiGateway::UsagePlan"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApplicationAutoScaling::ScalableTarget"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::AutoScaling::AutoScalingGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::AutoScaling::LaunchConfiguration"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::AutoScaling::LifecycleHook"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::AutoScaling::ScalingPolicy"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::AutoScaling::ScheduledAction"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CertificateManager::Certificate"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudFormation::Authentication"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudFormation::CustomResource"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudFormation::Init"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudFormation::Interface"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudFormation::Stack"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudFormation::WaitCondition"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudFormation::WaitConditionHandle"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudFront::Distribution"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudTrail::Trail"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CloudWatch::Alarm"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CodeCommit::Repository"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CodeDeploy::Application"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CodeDeploy::DeploymentConfig"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CodeDeploy::DeploymentGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CodePipeline::CustomActionType"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::CodePipeline::Pipeline"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Config::ConfigRule"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Config::ConfigurationRecorder"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Config::DeliveryChannel"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::DataPipeline::Pipeline"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::DirectoryService::MicrosoftAD"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::DirectoryService::SimpleAD"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::DynamoDB::Table"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::CustomerGateway"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::DHCPOptions"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::EIP"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::EIPAssociation"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::FlowLog"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::Host"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::Instance"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::InternetGateway"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::NatGateway"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::NetworkAcl"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::NetworkAclEntry"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::NetworkInterface"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::NetworkInterfaceAttachment"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::PlacementGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::Route"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::RouteTable"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::SecurityGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::SecurityGroupEgress"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::SecurityGroupIngress"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::SpotFleet"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::Subnet"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::SubnetNetworkAclAssociation"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::SubnetRouteTableAssociation"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::Volume"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VolumeAttachment"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VPC"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VPCDHCPOptionsAssociation"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VPCEndpoint"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VPCGatewayAttachment"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VPCPeeringConnection"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VPNConnection"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VPNConnectionRoute"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VPNGateway"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EC2::VPNGatewayRoutePropagation"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ECR::Repository"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ECS::Cluster"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ECS::Service"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ECS::TaskDefinition"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EFS::FileSystem"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EFS::MountTarget"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElastiCache::CacheCluster"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElastiCache::ParameterGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElastiCache::ReplicationGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElastiCache::SecurityGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElastiCache::SecurityGroupIngress"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElastiCache::SubnetGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElasticBeanstalk::Application"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElasticBeanstalk::ApplicationVersion"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElasticBeanstalk::ConfigurationTemplate"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElasticBeanstalk::Environment"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElasticLoadBalancing::LoadBalancer"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElasticLoadBalancingV2::Listener"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElasticLoadBalancingV2::ListenerRule"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElasticLoadBalancingV2::LoadBalancer"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::ElasticLoadBalancingV2::TargetGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Elasticsearch::Domain"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EMR::Cluster"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EMR::InstanceGroupConfig"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::EMR::Step"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Events::Rule"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::GameLift::Alias"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::GameLift::Build"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::GameLift::Fleet"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IAM::AccessKey"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IAM::Group"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IAM::InstanceProfile"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IAM::ManagedPolicy"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IAM::Policy"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IAM::Role"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IAM::User"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IAM::UserToGroupAddition"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IoT::Certificate"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IoT::Policy"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IoT::PolicyPrincipalAttachment"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IoT::Thing"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IoT::ThingPrincipalAttachment"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::IoT::TopicRule"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Kinesis::Stream"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::KinesisFirehose::DeliveryStream"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::KMS::Alias"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::KMS::Key"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Lambda::EventSourceMapping"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Lambda::Alias"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Lambda::Function"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Lambda::Permission"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Lambda::Version"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Logs::Destination"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Logs::LogGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Logs::LogStream"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Logs::MetricFilter"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Logs::SubscriptionFilter"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::OpsWorks::App"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::OpsWorks::ElasticLoadBalancerAttachment"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::OpsWorks::Instance"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::OpsWorks::Layer"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::OpsWorks::Stack"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::RDS::DBCluster"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::RDS::DBClusterParameterGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::RDS::DBInstance"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::RDS::DBParameterGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::RDS::DBSecurityGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::RDS::DBSecurityGroupIngress"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::RDS::DBSubnetGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::RDS::EventSubscription"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::RDS::OptionGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Redshift::Cluster"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Redshift::ClusterParameterGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Redshift::ClusterSecurityGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Redshift::ClusterSecurityGroupIngress"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Redshift::ClusterSubnetGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Route53::HealthCheck"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Route53::HostedZone"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Route53::RecordSet"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::Route53::RecordSetGroup"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::S3::Bucket"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::S3::BucketPolicy"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::SDB::Domain"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::SNS::Subscription"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::SNS::Topic"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::SNS::TopicPolicy"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::SQS::Queue"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::SQS::QueuePolicy"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::SSM::Document"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::WAF::ByteMatchSet"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::WAF::IPSet"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::WAF::Rule"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::WAF::SizeConstraintSet"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::WAF::SqlInjectionMatchSet"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::WAF::WebACL"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::WAF::XssMatchSet"
    },
    {
      "$ref": "#/definitions/definitions_resource_types_AWS::WorkSpaces::Workspace"
    }
  ],
  "definitions": {
    "attributes": {
      "CreationPolicy": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ResourceSignal"
        ],
        "properties": {
          "ResourceSignal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Count": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Timeout": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          }
        }
      },
      "DependsOn": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "DeletionPolicy": {
        "type": "string",
        "enum": [
          "Delete",
          "Retain",
          "Snapshot"
        ]
      },
      "UpdatePolicy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "AutoScalingRollingUpdate": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "MaxBatchSize": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "MinInstancesInService": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "MinSuccessfulInstancesPercent": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "PauseTime": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SuspendProcesses": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "WaitOnResourceSignals": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              }
            }
          },
          "AutoScalingScheduledAction": {
            "type": "object",
            "additionalProperties": false,
            "IgnoreUnmodifiedGroupSizeProperties": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            }
          }
        }
      }
    },
    "resource_types": {
      "AWS::ApiGateway::Account": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CloudWatchRoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Account"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::ApiKey": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Enabled": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StageKeys": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-apikey-stagekey"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::ApiKey"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Authorizer": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AuthorizerCredentials": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AuthorizerResultTtlInSeconds": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "AuthorizerUri": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "IdentitySource": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "IdentityValidationExpression": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ProviderARNs": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "RestApiId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Type": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "IdentitySource",
              "Name",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Authorizer"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::BasePathMapping": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BasePath": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DomainName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RestApiId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Stage": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DomainName",
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::BasePathMapping"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::ClientCertificate": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::ClientCertificate"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Deployment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RestApiId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StageDescription": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-deployment-stagedescription"
              },
              "StageName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Deployment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Method": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApiKeyRequired": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "AuthorizationType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AuthorizerId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HttpMethod": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Integration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-method-integration"
              },
              "MethodResponses": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-method-methodresponse"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "RequestModels": {
                "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
              },
              "RequestParameters": {
                "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
              },
              "ResourceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RestApiId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "AuthorizationType",
              "HttpMethod",
              "ResourceId",
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Method"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Model": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ContentType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RestApiId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Schema": {
                "type": "object"
              }
            },
            "required": [
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Model"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Resource": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ParentId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PathPart": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RestApiId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ParentId",
              "PathPart",
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Resource"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::RestApi": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "object"
              },
              "BodyS3Location": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-restapi-bodys3location"
              },
              "CloneFrom": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "FailOnWarnings": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Parameters": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::RestApi"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Stage": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CacheClusterEnabled": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "CacheClusterSize": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ClientCertificateId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DeploymentId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MethodSettings": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-stage-methodsetting"
              },
              "RestApiId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StageName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Variables": {
                "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
              }
            },
            "required": [
              "DeploymentId",
              "RestApiId",
              "StageName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Stage"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::UsagePlan": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApiStages": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-apigateway-usageplan-apistage"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Quota": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-apigateway-usageplan-quotasettings"
              },
              "Throttle": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-apigateway-usageplan-throttlesettings"
              },
              "UsagePlanName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::UsagePlan"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApplicationAutoScaling::ScalableTarget": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "MaxCapacity": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "MinCapacity": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "ResourceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RoleARN": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ScalableDimension": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ServiceNamespace": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "MaxCapacity",
              "MinCapacity",
              "ResourceId",
              "RoleARN",
              "ScalableDimension",
              "ServiceNamespace"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApplicationAutoScaling::ScalableTarget"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApplicationAutoScaling::ScalingPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PolicyType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ResourceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ScalableDimension": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ServiceNamespace": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ScalingTargetId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StepScalingPolicyConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration"
              }
            },
            "required": [
              "PolicyName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApplicationAutoScaling::ScalingPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::AutoScalingGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AvailabilityZones": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Cooldown": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DesiredCapacity": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HealthCheckGracePeriod": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "HealthCheckType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LaunchConfigurationName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LoadBalancerNames": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "MaxSize": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MetricsCollection": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-as-metricscollection"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "MinSize": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NotificationConfigurations": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-as-notificationconfigurations"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "PlacementGroup": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-as-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "TargetGroupARNs": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "TerminationPolicies": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "VPCZoneIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "NotificationConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-as-notificationconfigurations"
              }
            },
            "required": [
              "MaxSize",
              "MinSize"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::AutoScalingGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          },
          "CreationPolicy": {
            "$ref": "#/definitions/definitions_attributes_CreationPolicy"
          },
          "UpdatePolicy": {
            "$ref": "#/definitions/definitions_attributes_UpdatePolicy"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::LaunchConfiguration": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AssociatePublicIpAddress": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "BlockDeviceMappings": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-as-launchconfig-blockdev-mapping"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "ClassicLinkVPCId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ClassicLinkVPCSecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "EbsOptimized": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "IamInstanceProfile": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ImageId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceMonitoring": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "InstanceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "KernelId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "KeyName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PlacementTenancy": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RamDiskId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SpotPrice": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "UserData": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ImageId",
              "InstanceType"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::LaunchConfiguration"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::LifecycleHook": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoScalingGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DefaultResult": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HeartbeatTimeout": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "LifecycleTransition": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NotificationMetadata": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NotificationTargetARN": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RoleARN": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "AutoScalingGroupName",
              "LifecycleTransition"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::LifecycleHook"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::ScalingPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AdjustmentType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AutoScalingGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Cooldown": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EstimatedInstanceWarmup": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "MetricAggregationType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MinAdjustmentMagnitude": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "PolicyType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ScalingAdjustment": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "StepAdjustments": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-autoscaling-scalingpolicy-stepadjustments"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "AdjustmentType",
              "AutoScalingGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::ScalingPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::ScheduledAction": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoScalingGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DesiredCapacity": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "EndTime": {
                "$ref": "#/definitions/basic_types.json_definitions_timestamp"
              },
              "MaxSize": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "MinSize": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Recurrence": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StartTime": {
                "$ref": "#/definitions/basic_types.json_definitions_timestamp"
              }
            },
            "required": [
              "AutoScalingGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::ScheduledAction"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CertificateManager::Certificate": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DomainName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DomainValidationOptions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-certificatemanager-certificate-domainvalidationoption"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "SubjectAlternativeNames": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "DomainName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CertificateManager::Certificate"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::Authentication": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "accessKeyId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "buckets": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "password": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "secretKey": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "type": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "uris": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "username": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "roleName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::Authentication"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::CustomResource": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "ServiceToken": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ServiceToken"
            ]
          },
          "Type": {
            "oneOf": [
              {
                "enum": [
                  "AWS::CloudFormation::CustomResource"
                ]
              },
              {
                "pattern": "^Custom::.*"
              }
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::Init": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {}
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::Init"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::Interface": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ParameterGroups": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-cloudformation-interface-parametergroup"
              },
              "ParameterLabels": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-cloudformation-interface-parameterlabel"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::Interface"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::Stack": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "NotificationARNs": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Parameters": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-stack-parameters"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "TemplateURL": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TimeoutInMinutes": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "TemplateURL"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::Stack"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::WaitCondition": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Count": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Handle": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Timeout": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Handle",
              "Timeout"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::WaitCondition"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          },
          "CreationPolicy": {
            "$ref": "#/definitions/definitions_attributes_CreationPolicy"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::WaitConditionHandle": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {}
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::WaitConditionHandle"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFront::Distribution": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DistributionConfig": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig"
              }
            },
            "required": [
              "DistributionConfig"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFront::Distribution"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudTrail::Trail": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CloudWatchLogsLogGroupArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CloudWatchLogsRoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EnableLogFileValidation": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "IncludeGlobalServiceEvents": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "IsLogging": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "IsMultiRegionTrail": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "KMSKeyId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "S3BucketName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "S3KeyPrefix": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SnsTopicName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "IsLogging",
              "S3BucketName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudTrail::Trail"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudWatch::Alarm": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ActionsEnabled": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "AlarmActions": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "AlarmDescription": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AlarmName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ComparisonOperator": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Dimensions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-cw-dimension"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "EvaluationPeriods": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InsufficientDataActions": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "MetricName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Namespace": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "OKActions": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Period": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Statistic": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Threshold": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Unit": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ComparisonOperator",
              "EvaluationPeriods",
              "MetricName",
              "Namespace",
              "Period",
              "Statistic",
              "Threshold"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudWatch::Alarm"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CodeCommit::Repository": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RepositoryDescription": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RepositoryName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Triggers": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-codecommit-repository-triggers"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "RepositoryName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodeCommit::Repository"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CodeDeploy::Application": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodeDeploy::Application"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CodeDeploy::DeploymentConfig": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DeploymentConfigName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MinimumHealthyHosts": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodeDeploy::DeploymentConfig"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CodeDeploy::DeploymentGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AutoScalingGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Deployment": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment"
              },
              "DeploymentConfigName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DeploymentGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Ec2TagFilters": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-ec2tagfilters"
              },
              "OnPremisesInstanceTagFilters": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters"
              },
              "ServiceRoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ApplicationName",
              "ServiceRoleArn"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodeDeploy::DeploymentGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CodePipeline::CustomActionType": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Category": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ConfigurationProperties": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-resource-codepipeline-customactiontype-configurationproperties"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "InputArtifactDetails": {
                "$ref": "#/definitions/definitions_property_types_aws-resource-codepipeline-customactiontype-artifactdetails"
              },
              "OutputArtifactDetails": {
                "$ref": "#/definitions/definitions_property_types_aws-resource-codepipeline-customactiontype-artifactdetails"
              },
              "Provider": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Settings": {
                "$ref": "#/definitions/definitions_property_types_aws-resource-codepipeline-customactiontype-settings"
              },
              "Version": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Category",
              "InputArtifactDetails",
              "OutputArtifactDetails",
              "Provider"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodePipeline::CustomActionType"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CodePipeline::Pipeline": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ArtifactStore": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-artifactstore"
              },
              "DisableInboundStageTransitions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-disableinboundstagetransitions"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RestartExecutionOnUpdate": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "RoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Stages": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "ArtifactStore",
              "RoleArn",
              "Stages"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodePipeline::Pipeline"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Config::ConfigRule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ConfigRuleName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InputParameters": {
                "type": "object"
              },
              "MaximumExecutionFrequency": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Scope": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-config-configrule-scope"
              },
              "Source": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-config-configrule-source"
              }
            },
            "required": [
              "Source"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Config::ConfigRule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Config::ConfigurationRecorder": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RecordingGroup": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-config-configurationrecorder-recordinggroup"
              },
              "RoleARN": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "RoleARN"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Config::ConfigurationRecorder"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Config::DeliveryChannel": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ConfigSnapshotDeliveryProperties": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-config-deliverychannel-configsnapshotdeliveryproperties"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "S3BucketName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "S3KeyPrefix": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SnsTopicARN": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "S3BucketName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Config::DeliveryChannel"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::DataPipeline::Pipeline": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Activate": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ParameterObjects": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-parameterobjects"
              },
              "ParameterValues": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-parametervalues"
              },
              "PipelineObjects": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-pipelineobjects"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "PipelineTags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-pipelinetags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Name",
              "PipelineObjects"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::DataPipeline::Pipeline"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::DirectoryService::MicrosoftAD": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CreateAlias": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "EnableSso": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Password": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ShortName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VpcSettings": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-directoryservice-microsoftad-vpcsettings"
              }
            },
            "required": [
              "Name",
              "Password",
              "VpcSettings"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::DirectoryService::MicrosoftAD"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::DirectoryService::SimpleAD": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CreateAlias": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EnableSso": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Password": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ShortName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Size": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VpcSettings": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-directoryservice-simplead-vpcsettings"
              }
            },
            "required": [
              "Name",
              "Password",
              "Size",
              "VpcSettings"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::DirectoryService::SimpleAD"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::DynamoDB::Table": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AttributeDefinitions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-attributedef"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "GlobalSecondaryIndexes": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-gsi"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "KeySchema": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-keyschema"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "LocalSecondaryIndexes": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-lsi"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "ProvisionedThroughput": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-provisionedthroughput"
              },
              "StreamSpecification": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-streamspecification"
              },
              "TableName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "AttributeDefinitions",
              "KeySchema",
              "ProvisionedThroughput"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::DynamoDB::Table"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::CustomerGateway": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BgpAsn": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "IpAddress": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Type": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "BgpAsn",
              "IpAddress",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::CustomerGateway"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::DHCPOptions": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DomainName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DomainNameServers": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "NetbiosNameServers": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "NetbiosNodeType": {
                "description": "\u003cp\u003eAn integer value indicating the NetBIOS node type:\u003c/p\u003e\u003cdiv class\u003d\"itemizedlist\"\u003e\u003cul class\u003d\"itemizedlist\" type\u003d\"disc\"\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003e\u003cspan class\u003d\"strong\"\u003e\u003cstrong\u003e1\u003c/strong\u003e\u003c/span\u003e: Broadcast (\"B\")\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003e\u003cspan class\u003d\"strong\"\u003e\u003cstrong\u003e2\u003c/strong\u003e\u003c/span\u003e: Point-to-point (\"P\")\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003e\u003cspan class\u003d\"strong\"\u003e\u003cstrong\u003e4\u003c/strong\u003e\u003c/span\u003e: Mixed mode (\"M\")\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003e\u003cspan class\u003d\"strong\"\u003e\u003cstrong\u003e8\u003c/strong\u003e\u003c/span\u003e: Hybrid (\"H\")\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cp\u003eFor more information about these values and about NetBIOS node types, see\n                     \u003ca class\u003d\"ulink\" href\u003d\"http://www.ietf.org/rfc/rfc2132.txt\" target\u003d\"_blank\"\u003eRFC 2132\u003c/a\u003e, \u003ca class\u003d\"ulink\" href\u003d\"http://tools.ietf.org/rfc/rfc1001.txt\" target\u003d\"_blank\"\u003eRFC 1001\u003c/a\u003e, and \u003ca class\u003d\"ulink\" href\u003d\"http://tools.ietf.org/rfc/rfc1002.txt\" target\u003d\"_blank\"\u003eRFC 1002\u003c/a\u003e. We recommend that\n                  you use only the value \u003ccode class\u003d\"code\"\u003e2\u003c/code\u003e at this time (broadcast and multicast are\n                  not currently supported).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Required if \u003ccode class\u003d\"code\"\u003eNetBiosNameServers\u003c/code\u003e is specified;\n                  optional otherwise.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of numbers\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eExample\u003c/em\u003e\u003c/span\u003e: \u003ccode class\u003d\"code\"\u003e\"NetbiosNodeType\" : 2\u003c/code\u003e\u003c/p\u003e"
              },
              "NtpServers": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::DHCPOptions"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::EIP": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "InstanceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Domain": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::EIP"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::EIPAssociation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AllocationId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EIP": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NetworkInterfaceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PrivateIpAddress": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::EIPAssociation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::FlowLog": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DeliverLogsPermissionArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LogGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ResourceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ResourceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TrafficType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DeliverLogsPermissionArn",
              "LogGroupName",
              "ResourceId",
              "ResourceType",
              "TrafficType"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::FlowLog"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Host": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoPlacement": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "AvailabilityZone",
              "InstanceType"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Host"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Instance": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Affinity": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "BlockDeviceMappings": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-blockdev-mapping"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "DisableApiTermination": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "EbsOptimized": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "HostId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "IamInstanceProfile": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ImageId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceInitiatedShutdownBehavior": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "KernelId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "KeyName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Monitoring": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "NetworkInterfaces": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-network-iface-embedded"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "PlacementGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PrivateIpAddress": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RamdiskId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SecurityGroupIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SourceDestCheck": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "SsmAssociations": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-instance-ssmassociations"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "SubnetId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Tenancy": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "UserData": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Volumes": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-mount-point"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "AdditionalInfo": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ImageId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Instance"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          },
          "CreationPolicy": {
            "$ref": "#/definitions/definitions_attributes_CreationPolicy"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::InternetGateway": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::InternetGateway"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NatGateway": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AllocationId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SubnetId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "AllocationId",
              "SubnetId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NatGateway"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NetworkAcl": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NetworkAcl"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NetworkAclEntry": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CidrBlock": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Egress": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Icmp": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-networkaclentry-icmp"
              },
              "NetworkAclId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PortRange": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-networkaclentry-portrange"
              },
              "Protocol": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "RuleAction": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RuleNumber": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              }
            },
            "required": [
              "CidrBlock",
              "NetworkAclId",
              "Protocol",
              "RuleAction",
              "RuleNumber"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NetworkAclEntry"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NetworkInterface": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "GroupSet": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "PrivateIpAddress": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PrivateIpAddresses": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-network-interface-privateipspec"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "SecondaryPrivateIpAddressCount": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "SourceDestCheck": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "SubnetId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "SubnetId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NetworkInterface"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NetworkInterfaceAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DeleteOnTermination": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "DeviceIndex": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NetworkInterfaceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DeviceIndex",
              "InstanceId",
              "NetworkInterfaceId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NetworkInterfaceAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::PlacementGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Strategy": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::PlacementGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Route": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DestinationCidrBlock": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "GatewayId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NatGatewayId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NetworkInterfaceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RouteTableId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VpcPeeringConnectionId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DestinationCidrBlock",
              "RouteTableId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Route"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::RouteTable": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::RouteTable"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SecurityGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "GroupDescription": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SecurityGroupEgress": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-security-group-rule"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "SecurityGroupIngress": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-security-group-rule"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "GroupDescription"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SecurityGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SecurityGroupEgress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CidrIp": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DestinationPrefixListId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DestinationSecurityGroupId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "FromPort": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "GroupId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "IpProtocol": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ToPort": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              }
            },
            "required": [
              "FromPort",
              "GroupId",
              "IpProtocol",
              "ToPort"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SecurityGroupEgress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SecurityGroupIngress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CidrIp": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "FromPort": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "GroupId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "GroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "IpProtocol": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SourceSecurityGroupId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SourceSecurityGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SourceSecurityGroupOwnerId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ToPort": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              }
            },
            "required": [
              "FromPort",
              "IpProtocol",
              "ToPort"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SecurityGroupIngress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SpotFleet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SpotFleetRequestConfigData": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata"
              }
            },
            "required": [
              "SpotFleetRequestConfigData"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SpotFleet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Subnet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AvailabilityZone": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CidrBlock": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MapPublicIpOnLaunch": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "CidrBlock",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Subnet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SubnetNetworkAclAssociation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubnetId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NetworkAclId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "SubnetId",
              "NetworkAclId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SubnetNetworkAclAssociation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SubnetRouteTableAssociation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RouteTableId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SubnetId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "RouteTableId",
              "SubnetId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SubnetRouteTableAssociation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Volume": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoEnableIO": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Encrypted": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Iops": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "KmsKeyId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Size": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SnapshotId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VolumeType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "AvailabilityZone"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Volume"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VolumeAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Device": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VolumeId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Device",
              "InstanceId",
              "VolumeId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VolumeAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPC": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CidrBlock": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EnableDnsSupport": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "EnableDnsHostnames": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "InstanceTenancy": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "CidrBlock"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPC"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPCDHCPOptionsAssociation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DhcpOptionsId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DhcpOptionsId",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPCDHCPOptionsAssociation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPCEndpoint": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyDocument": {
                "type": "object"
              },
              "RouteTableIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "ServiceName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ServiceName",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPCEndpoint"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPCGatewayAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "InternetGatewayId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VpnGatewayId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPCGatewayAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPCPeeringConnection": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PeerVpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "PeerVpcId",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPCPeeringConnection"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPNConnection": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CustomerGatewayId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StaticRoutesOnly": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VpnGatewayId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Type",
              "CustomerGatewayId",
              "VpnGatewayId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPNConnection"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPNConnectionRoute": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DestinationCidrBlock": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VpnConnectionId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DestinationCidrBlock",
              "VpnConnectionId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPNConnectionRoute"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPNGateway": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPNGateway"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPNGatewayRoutePropagation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RouteTableIds": {
                "description": "\u003cp class\u003d\"simpara\"\u003eA list of routing table IDs that are associated with a VPC. The routing\n                  tables must be associated with the same VPC that the virtual private gateway is\n                  attached to.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of route table IDs\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e"
              },
              "VpnGatewayId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "RouteTableIds",
              "VpnGatewayId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPNGatewayRoutePropagation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ECR::Repository": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RepositoryName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RepositoryPolicyText": {
                "type": "object"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ECR::Repository"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ECS::Cluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ClusterName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ECS::Cluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ECS::Service": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Cluster": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DeploymentConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-service-deploymentconfiguration"
              },
              "DesiredCount": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "LoadBalancers": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-service-loadbalancers"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Role": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TaskDefinition": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DesiredCount",
              "TaskDefinition"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ECS::Service"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ECS::TaskDefinition": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ContainerDefinitions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Family": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TaskRoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Volumes": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-volumes"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "ContainerDefinitions",
              "Volumes"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ECS::TaskDefinition"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EFS::FileSystem": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "FileSystemTags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-efs-filesystem-filesystemtags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "PerformanceMode": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EFS::FileSystem"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EFS::MountTarget": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "FileSystemId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "IpAddress": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SubnetId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "FileSystemId",
              "SecurityGroups",
              "SubnetId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EFS::MountTarget"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::CacheCluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoMinorVersionUpgrade": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "AZMode": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CacheNodeType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CacheParameterGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CacheSecurityGroupNames": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "CacheSubnetGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ClusterName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Engine": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EngineVersion": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NotificationTopicArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NumCacheNodes": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Port": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "PreferredAvailabilityZone": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PreferredAvailabilityZones": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SnapshotArns": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SnapshotName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SnapshotRetentionLimit": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "SnapshotWindow": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VpcSecurityGroupIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            },
            "required": [
              "CacheNodeType",
              "Engine",
              "NumCacheNodes"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::CacheCluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::ParameterGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CacheParameterGroupFamily": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Properties": {
                "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
              }
            },
            "required": [
              "CacheParameterGroupFamily",
              "Description"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::ParameterGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::ReplicationGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutomaticFailoverEnabled": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "AutoMinorVersionUpgrade": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "CacheNodeType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CacheParameterGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CacheSecurityGroupNames": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "CacheSubnetGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Engine": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EngineVersion": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NodeGroupConfiguration": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-elasticache-replicationgroup-nodegroupconfiguration"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "NotificationTopicArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NumCacheClusters": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "NumNodeGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Port": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "PreferredCacheClusterAZs": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PrimaryClusterId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ReplicasPerNodeGroup": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "ReplicationGroupDescription": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ReplicationGroupId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SecurityGroupIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SnapshotArns": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SnapshotName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SnapshotRetentionLimit": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "SnapshottingClusterId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SnapshotWindow": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Engine",
              "ReplicationGroupDescription"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::ReplicationGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::SecurityGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::SecurityGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::SecurityGroupIngress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CacheSecurityGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EC2SecurityGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EC2SecurityGroupOwnerId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "CacheSecurityGroupName",
              "EC2SecurityGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::SecurityGroupIngress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::SubnetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CacheSubnetGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SubnetIds": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Description",
              "SubnetIds"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::SubnetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticBeanstalk::Application": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticBeanstalk::Application"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticBeanstalk::ApplicationVersion": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SourceBundle": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-sourcebundle"
              }
            },
            "required": [
              "ApplicationName",
              "SourceBundle"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticBeanstalk::ApplicationVersion"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticBeanstalk::ConfigurationTemplate": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EnvironmentId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "OptionSettings": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-option-settings"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "SolutionStackName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SourceConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-configurationtemplate-sourceconfiguration"
              }
            },
            "required": [
              "ApplicationName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticBeanstalk::ConfigurationTemplate"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticBeanstalk::Environment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CNAMEPrefix": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EnvironmentName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "OptionSettings": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-option-settings"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "SolutionStackName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "TemplateName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tier": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-environment-tier"
              },
              "VersionLabel": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ApplicationName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticBeanstalk::Environment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancing::LoadBalancer": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AccessLoggingPolicy": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-accessloggingpolicy"
              },
              "AppCookieStickinessPolicy": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-AppCookieStickinessPolicy"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "AvailabilityZones": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "ConnectionDrainingPolicy": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-connectiondrainingpolicy"
              },
              "ConnectionSettings": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-connectionsettings"
              },
              "CrossZone": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "HealthCheck": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-health-check"
              },
              "Instances": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "LBCookieStickinessPolicy": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-LBCookieStickinessPolicy"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "LoadBalancerName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Listeners": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-listener"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Policies": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-policy"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Scheme": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Subnets": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Listeners"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancing::LoadBalancer"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancingV2::Listener": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Certificates": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-listener-certificates"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "DefaultActions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-listener-defaultactions"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "LoadBalancerArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Port": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Protocol": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SslPolicy": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DefaultActions",
              "LoadBalancerArn",
              "Port",
              "Protocol"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancingV2::Listener"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancingV2::ListenerRule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Actions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-listenerrule-actions"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Conditions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-listenerrule-conditions"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "ListenerArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Priority": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              }
            },
            "required": [
              "Actions",
              "Conditions",
              "ListenerArn",
              "Priority"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancingV2::ListenerRule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancingV2::LoadBalancer": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "LoadBalancerAttributes": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Scheme": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Subnets": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Subnets"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancingV2::LoadBalancer"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancingV2::TargetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "HealthCheckIntervalSeconds": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "HealthCheckPath": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HealthCheckPort": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HealthCheckProtocol": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HealthCheckTimeoutSeconds": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "HealthyThresholdCount": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Matcher": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-targetgroup-matcher"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Port": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Protocol": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "TargetGroupAttributes": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Targets": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-targetgroup-targetdescription"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "UnhealthyThresholdCount": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Port",
              "Protocol",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancingV2::TargetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Elasticsearch::Domain": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AccessPolicies": {
                "type": "object"
              },
              "AdvancedOptions": {
                "description": "\u003cp\u003eAdditional options to specify for the Amazon ES domain. For more information, see\n              \u003ca class\u003d\"ulink\" href\u003d\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target\u003d\"_blank\"\u003eConfiguring Advanced Options\u003c/a\u003e in the\n            \u003cem class\u003d\"citetitle\"\u003eAmazon Elasticsearch Service Developer Guide\u003c/em\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: A JSON object consisting of a string key-value pair, such\n            as:\u003c/p\u003e\u003cpre class\u003d\"programlisting\"\u003e\u003ccode class\u003d\"nohighlight\"\u003e{\n  \"rest.action.multi.allow_explicit_index\": \"true\"\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e"
              },
              "DomainName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EBSOptions": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-elasticsearch-domain-ebsoptions"
              },
              "ElasticsearchClusterConfig": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-elasticsearch-domain-elasticsearchclusterconfig"
              },
              "ElasticsearchVersion": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SnapshotOptions": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-elasticsearch-domain-snapshotoptions"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Elasticsearch::Domain"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EMR::Cluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AdditionalInfo": {
                "type": "object"
              },
              "Applications": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-application"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "BootstrapActions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-bootstrapactionconfig"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Configurations": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-configuration"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Instances": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig"
              },
              "JobFlowRole": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LogUri": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ReleaseLabel": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ServiceRole": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VisibleToAllUsers": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              }
            },
            "required": [
              "Instances",
              "JobFlowRole",
              "Name",
              "ServiceRole"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EMR::Cluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EMR::InstanceGroupConfig": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BidPrice": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Configurations": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-configuration"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "EbsConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-emr-ebsconfiguration"
              },
              "InstanceCount": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "InstanceRole": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "InstanceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "JobFlowId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Market": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "InstanceCount",
              "InstanceRole",
              "InstanceType",
              "JobFlowId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EMR::InstanceGroupConfig"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EMR::Step": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ActionOnFailure": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HadoopJarStep": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-emr-step-hadoopjarstepconfig"
              },
              "JobFlowId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ActionOnFailure",
              "HadoopJarStep",
              "JobFlowId",
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EMR::Step"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Events::Rule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EventPattern": {
                "type": "object"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ScheduleExpression": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "State": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Targets": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-events-rule-target"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Events::Rule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::GameLift::Alias": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RoutingStrategy": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-gamelift-alias-routingstrategy"
              }
            },
            "required": [
              "Name",
              "RoutingStrategy"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::GameLift::Alias"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::GameLift::Build": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StorageLocation": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-gamelift-build-storagelocation"
              },
              "Version": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::GameLift::Build"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::GameLift::Fleet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BuildId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DesiredEC2Instances": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "EC2InboundPermissions": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-gamelift-fleet-ec2inboundpermission"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "EC2InstanceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LogPaths": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "MaxSize": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "MinSize": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ServerLaunchParameters": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ServerLaunchPath": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "BuildId",
              "DesiredEC2Instances",
              "EC2InstanceType",
              "Name",
              "ServerLaunchPath"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::GameLift::Fleet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::AccessKey": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Serial": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Status": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "UserName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "UserName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::AccessKey"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::Group": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "GroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ManagedPolicyArns": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Path": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Policies": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-iam-policy"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::Group"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::InstanceProfile": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Path": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Roles": {
                "description": "\u003cp\u003eThe roles associated with this IAM instance profile.\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of references to \u003cspan class\u003d\"type\"\u003eAWS::IAM::Role\u003c/span\u003es. Currently, a\n                  maximum of one role can be assigned to an instance profile.\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e"
              }
            },
            "required": [
              "Path",
              "Roles"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::InstanceProfile"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::ManagedPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Groups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Path": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PolicyDocument": {
                "type": "object"
              },
              "Roles": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Users": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            },
            "required": [
              "PolicyDocument"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::ManagedPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::Policy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Groups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "PolicyDocument": {
                "type": "object"
              },
              "PolicyName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Roles": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Users": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            },
            "required": [
              "PolicyDocument",
              "PolicyName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::Policy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::Role": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AssumeRolePolicyDocument": {
                "description": "\u003cp\u003eThe trust policy that is associated with this role.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: A JSON policy document\u003c/p\u003e\u003cdiv class\u003d\"aws-note\"\u003e\u003cp class\u003d\"aws-note\"\u003eNote\u003c/p\u003e\u003cp\u003eAWS Identity and Access Management (IAM) requires that policies be in JSON format.\nHowever, for templates formatted in YAML, you can create an IAM policy in either JSON or YAML format. AWS CloudFormation always converts a policy to JSON format before submitting it to IAM.\u003c/p\u003e\u003c/div\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e\u003cdiv class\u003d\"aws-note\"\u003e\u003cp class\u003d\"aws-note\"\u003eNote\u003c/p\u003e\u003cp\u003eYou can associate only one assume role policy with a role. For an example of\n                     an assume role policy, see \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-templateexamples\" title\u003d\"Template Examples\"\u003eTemplate Examples\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e"
              },
              "ManagedPolicyArns": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Path": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Policies": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-iam-policy"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "RoleName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "AssumeRolePolicyDocument"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::Role"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::User": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Groups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "LoginProfile": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-iam-user-loginprofile"
              },
              "ManagedPolicyArns": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Path": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Policies": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-iam-policy"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "UserName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::User"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::UserToGroupAddition": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "GroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Users": {
                "description": "\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of users\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e"
              }
            },
            "required": [
              "GroupName",
              "Users"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::UserToGroupAddition"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::Certificate": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CertificateSigningRequest": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Status": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "CertificateSigningRequest",
              "Status"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::Certificate"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::Policy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyDocument": {
                "type": "object"
              },
              "PolicyName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "PolicyDocument"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::Policy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::PolicyPrincipalAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Principal": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "PolicyName",
              "Principal"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::PolicyPrincipalAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::Thing": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AttributePayload": {
                "description": "\u003cp\u003eA JSON string that contains up to three key-value pairs, for example: \u003ccode class\u003d\"code\"\u003e{\n                     \"attributes\": { \"string1\":\"string2\" } }\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String to string map\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e"
              },
              "ThingName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::Thing"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::ThingPrincipalAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Principal": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ThingName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Principal",
              "ThingName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::ThingPrincipalAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::TopicRule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RuleName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TopicRulePayload": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-iot-topicrulepayload"
              }
            },
            "required": [
              "TopicRulePayload"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::TopicRule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Kinesis::Stream": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ShardCount": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "ShardCount"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Kinesis::Stream"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::KinesisFirehose::DeliveryStream": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DeliveryStreamName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ElasticsearchDestinationConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration"
              },
              "RedshiftDestinationConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration"
              },
              "S3DestinationConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::KinesisFirehose::DeliveryStream"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::KMS::Alias": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AliasName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TargetKeyId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "AliasName",
              "TargetKeyId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::KMS::Alias"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::KMS::Key": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Enabled": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "EnableKeyRotation": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "KeyPolicy": {
                "type": "object"
              }
            },
            "required": [
              "KeyPolicy"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::KMS::Key"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::EventSourceMapping": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BatchSize": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Enabled": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "EventSourceArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "FunctionName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StartingPosition": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "EventSourceArn",
              "FunctionName",
              "StartingPosition"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::EventSourceMapping"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::Alias": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "FunctionName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "FunctionVersion": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "FunctionName",
              "FunctionVersion",
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::Alias"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::Function": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Code": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-lambda-function-code"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Environment": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-lambda-function-environment"
              },
              "FunctionName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Handler": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "KmsKeyArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MemorySize": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "Role": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Runtime": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Timeout": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "VpcConfig": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-lambda-function-vpcconfig"
              }
            },
            "required": [
              "Code",
              "Handler",
              "Role",
              "Runtime"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::Function"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::Permission": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Action": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "FunctionName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Principal": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SourceAccount": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SourceArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Action",
              "FunctionName",
              "Principal"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::Permission"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::Version": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CodeSha256": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "FunctionName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "FunctionName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::Version"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::Destination": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DestinationName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DestinationPolicy": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TargetArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DestinationName",
              "DestinationPolicy",
              "RoleArn",
              "TargetArn"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::Destination"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::LogGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "LogGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RetentionInDays": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::LogGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::LogStream": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "LogGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LogStreamName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "LogGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::LogStream"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::MetricFilter": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "FilterPattern": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LogGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MetricTransformations": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-logs-metricfilter-metrictransformation"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "FilterPattern",
              "LogGroupName",
              "MetricTransformations"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::MetricFilter"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::SubscriptionFilter": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DestinationArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "FilterPattern": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LogGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DestinationArn",
              "FilterPattern",
              "LogGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::SubscriptionFilter"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::App": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AppSource": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-stack-source"
              },
              "Attributes": {
                "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
              },
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Domains": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "EnableSsl": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Environment": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-app-environment"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Shortname": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SslConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-app-sslconfiguration"
              },
              "StackId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Type": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Name",
              "StackId",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::App"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ElasticLoadBalancerName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LayerId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ElasticLoadBalancerName",
              "LayerId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::ElasticLoadBalancerAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::Instance": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AmiId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Architecture": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AutoScalingType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EbsOptimized": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "InstallUpdatesOnBoot": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "InstanceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LayerIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Os": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RootDeviceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SshKeyName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StackId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SubnetId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TimeBasedAutoScaling": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-instance-timebasedautoscaling"
              }
            },
            "required": [
              "InstanceType",
              "LayerIds",
              "StackId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::Instance"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::Layer": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Attributes": {
                "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
              },
              "AutoAssignElasticIps": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "AutoAssignPublicIps": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "CustomInstanceProfileArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CustomRecipes": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-recipes"
              },
              "CustomSecurityGroupIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "EnableAutoHealing": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "InstallUpdatesOnBoot": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "LifecycleEventConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-lifecycleeventconfiguration"
              },
              "LoadBasedAutoScaling": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-loadbasedautoscaling"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Packages": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Shortname": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StackId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Type": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VolumeConfigurations": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-volumeconfig"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "AutoAssignElasticIps",
              "AutoAssignPublicIps",
              "EnableAutoHealing",
              "Name",
              "Shortname",
              "StackId",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::Layer"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::Stack": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AgentVersion": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Attributes": {
                "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
              },
              "ChefConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-stack-chefconfiguration"
              },
              "ConfigurationManager": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-stack-stackconfigmanager"
              },
              "CustomCookbooksSource": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-stack-source"
              },
              "CustomJson": {
                "type": "object"
              },
              "DefaultAvailabilityZone": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DefaultInstanceProfileArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DefaultOs": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DefaultRootDeviceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DefaultSshKeyName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DefaultSubnetId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HostnameTheme": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ServiceRoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "UseCustomCookbooks": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "UseOpsworksSecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DefaultInstanceProfileArn",
              "Name",
              "ServiceRoleArn"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::Stack"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBCluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AvailabilityZones": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "BackupRetentionPeriod": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "DatabaseName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBClusterParameterGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBSubnetGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Engine": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EngineVersion": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "KmsKeyId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MasterUsername": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MasterUserPassword": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Port": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "PreferredBackupWindow": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SnapshotIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StorageEncrypted": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VpcSecurityGroupIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            },
            "required": [
              "Engine"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBCluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBClusterParameterGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "description": "\u003cp\u003eA friendly description for this DB cluster parameter group.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e"
              },
              "Family": {
                "description": "\u003cp\u003eThe database family of this DB cluster parameter group, such as\n                     \u003ccode class\u003d\"code\"\u003eaurora5.6\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e"
              },
              "Parameters": {
                "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Description",
              "Family",
              "Parameters"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBClusterParameterGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBInstance": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AllocatedStorage": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "AllowMajorVersionUpgrade": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "AutoMinorVersionUpgrade": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "BackupRetentionPeriod": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CharacterSetName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBClusterIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBInstanceClass": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBInstanceIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBParameterGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBSecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "DBSnapshotIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBSubnetGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Domain": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DomainIAMRoleName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Engine": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EngineVersion": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Iops": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "KmsKeyId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "LicenseModel": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MasterUsername": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MasterUserPassword": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MonitoringInterval": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "MonitoringRoleArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MultiAZ": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "OptionGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Port": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PreferredBackupWindow": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PubliclyAccessible": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "SourceDBInstanceIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "StorageEncrypted": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "StorageType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VPCSecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            },
            "required": [
              "DBInstanceClass"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBInstance"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBParameterGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "description": "\u003cp\u003eA friendly description of the RDS parameter group. For example, \u003ccode class\u003d\"code\"\u003e\"My Parameter Group\"\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: Updates are not supported.\u003c/p\u003e"
              },
              "Family": {
                "description": "\u003cp\u003eThe database family of this RDS parameter group. For example, \u003ccode class\u003d\"code\"\u003e\"MySQL5.1\"\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: Updates are not supported.\u003c/p\u003e"
              },
              "Parameters": {
                "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Description",
              "Family"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBParameterGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBSecurityGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "EC2VpcId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBSecurityGroupIngress": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-rds-security-group-rule"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  },
                  {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-rds-security-group-rule"
                  }
                ]
              },
              "GroupDescription": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "DBSecurityGroupIngress",
              "GroupDescription"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBSecurityGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBSecurityGroupIngress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CIDRIP": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBSecurityGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EC2SecurityGroupId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EC2SecurityGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EC2SecurityGroupOwnerId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "DBSecurityGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBSecurityGroupIngress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBSubnetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DBSubnetGroupDescription": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SubnetIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "DBSubnetGroupDescription",
              "SubnetIds"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBSubnetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::EventSubscription": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Enabled": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "EventCategories": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SnsTopicArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SourceIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SourceType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "SnsTopicArn"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::EventSubscription"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::OptionGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "EngineName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MajorEngineVersion": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "OptionGroupDescription": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "OptionConfigurations": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-rds-optiongroup-optionconfigurations"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "EngineName",
              "MajorEngineVersion",
              "OptionGroupDescription",
              "OptionConfigurations"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::OptionGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::Cluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AllowVersionUpgrade": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "AutomatedSnapshotRetentionPeriod": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ClusterParameterGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ClusterSecurityGroups": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "ClusterSubnetGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ClusterType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ClusterVersion": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DBName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ElasticIp": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Encrypted": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "HsmClientCertificateIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HsmConfigurationIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "KmsKeyId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MasterUsername": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "MasterUserPassword": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NodeType": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "NumberOfNodes": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "OwnerAccount": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Port": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PubliclyAccessible": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "SnapshotClusterIdentifier": {
                "description": "\u003cp\u003eThe name of the cluster the source snapshot was created from. For more information about restoring from a snapshot, see the \u003ca class\u003d\"ulink\" href\u003d\"http://docs.aws.amazon.com/redshift/latest/APIReference/API_RestoreFromClusterSnapshot.html\" target\u003d\"_blank\"\u003eRestoreFromClusterSnapshot\u003c/a\u003e action in the \u003cem class\u003d\"citetitle\"\u003eAmazon Redshift API Reference\u003c/em\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Conditional. This property is required if your IAM policy includes\n                  a restriction on the cluster name, where the resource element specifies anything\n                  other than the wildcard character (\u003ccode class\u003d\"code\"\u003e*\u003c/code\u003e) for the cluster name.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e"
              },
              "SnapshotIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VpcSecurityGroupIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            },
            "required": [
              "ClusterType",
              "DBName",
              "MasterUsername",
              "MasterUserPassword",
              "NodeType"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::Cluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::ClusterParameterGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ParameterGroupFamily": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Parameters": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-property-redshift-clusterparametergroup-parameter"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Description",
              "ParameterGroupFamily"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::ClusterParameterGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::ClusterSecurityGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Description"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::ClusterSecurityGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::ClusterSecurityGroupIngress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ClusterSecurityGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CIDRIP": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EC2SecurityGroupName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "EC2SecurityGroupOwnerId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "ClusterSecurityGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::ClusterSecurityGroupIngress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::ClusterSubnetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SubnetIds": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            },
            "required": [
              "Description",
              "SubnetIds"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::ClusterSubnetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Route53::HealthCheck": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "HealthCheckConfig": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-route53-healthcheck-healthcheckconfig"
              },
              "HealthCheckTags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-route53-healthcheck-healthchecktags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "HealthCheckConfig"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Route53::HealthCheck"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Route53::HostedZone": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "HostedZoneConfig": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-route53-hostedzone-hostedzoneconfig"
              },
              "HostedZoneTags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-route53-hostedzone-hostedzonetags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "VPCs": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-resource-route53-hostedzone-hostedzonevpcs"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Route53::HostedZone"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Route53::RecordSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AliasTarget": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-route53-aliastarget"
              },
              "Comment": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Failover": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "GeoLocation": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-route53-recordset-geolocation"
              },
              "HealthCheckId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HostedZoneId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HostedZoneName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Region": {
                "description": "\u003cp\u003eLatency resource record sets only: The Amazon EC2 region where the resource that is\n                  specified in this resource record set resides. The resource typically is an AWS\n                  resource, for example, Amazon EC2 instance or an Elastic Load Balancing load balancer, and is referred\n                  to by an IP address or a DNS domain name, depending on the record type.\u003c/p\u003e\u003cp\u003eWhen Amazon Route 53 receives a DNS query for a domain name and type for which you have\n                  created latency resource record sets, Amazon Route 53 selects the latency resource record\n                  set that has the lowest latency between the end user and the associated Amazon EC2\n                  region. Amazon Route 53 then returns the value that is associated with the selected resource\n                  record set.\u003c/p\u003e\u003cp\u003eThe following restrictions must be followed:\u003c/p\u003e\u003cdiv class\u003d\"itemizedlist\"\u003e\u003cul class\u003d\"itemizedlist\" type\u003d\"disc\"\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou can only specify one resource record per latency resource record\n                        set.\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou can only create one latency resource record set for each Amazon EC2\n                        region.\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou are not required to create latency resource record sets for all Amazon EC2\n                        regions. Amazon Route 53 will choose the region with the best latency from among the\n                        regions for which you create latency resource record sets.\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou cannot create both weighted and latency resource record sets that\n                        have the same values for the Name and Type elements.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cp\u003eTo see a list of regions by service, see \u003ca class\u003d\"ulink\" href\u003d\"http://docs.aws.amazon.com/general/latest/gr/rande.html\" target\u003d\"_blank\"\u003eRegions and Endpoints\u003c/a\u003e in the\n                  \u003cem class\u003d\"citetitle\"\u003eAWS General Reference\u003c/em\u003e.\u003c/p\u003e"
              },
              "ResourceRecords": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              },
              "SetIdentifier": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TTL": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Type": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Weight": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              }
            },
            "required": [
              "Name",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Route53::RecordSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Route53::RecordSetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Comment": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HostedZoneId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "HostedZoneName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RecordSets": {
                "items": {
                  "$ref": "#/definitions/definitions_resource_types_AWS::Route53::RecordSet_properties_Properties"
                },
                "type": "array"
              }
            },
            "required": [
              "RecordSets"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Route53::RecordSetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::S3::Bucket": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AccessControl": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "BucketName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "CorsConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-cors"
              },
              "LifecycleConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig"
              },
              "LoggingConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-loggingconfig"
              },
              "NotificationConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfig"
              },
              "ReplicationConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-replicationconfiguration"
              },
              "Tags": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "VersioningConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-versioningconfig"
              },
              "WebsiteConfiguration": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::S3::Bucket"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::S3::BucketPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Bucket": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "PolicyDocument": {
                "type": "object"
              }
            },
            "required": [
              "Bucket",
              "PolicyDocument"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::S3::BucketPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::SDB::Domain": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SDB::Domain"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::SNS::Subscription": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Endpoint": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Protocol": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "TopicArn": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SNS::Subscription"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::SNS::Topic": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DisplayName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Subscription": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-sns-subscription"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "TopicName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SNS::Topic"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::SNS::TopicPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyDocument": {
                "type": "object"
              },
              "Topics": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            },
            "required": [
              "PolicyDocument",
              "Topics"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SNS::TopicPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::SQS::Queue": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DelaySeconds": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "MaximumMessageSize": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "MessageRetentionPeriod": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "QueueName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "ReceiveMessageWaitTimeSeconds": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              "RedrivePolicy": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-sqs-queues-redrivepolicy"
              },
              "VisibilityTimeout": {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SQS::Queue"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::SQS::QueuePolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyDocument": {
                "type": "object"
              },
              "Queues": {
                "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
              }
            },
            "required": [
              "PolicyDocument",
              "Queues"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SQS::QueuePolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::SSM::Document": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Content": {
                "type": "object"
              }
            },
            "required": [
              "Content"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SSM::Document"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::ByteMatchSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ByteMatchTuples": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-waf-bytematchset-bytematchtuples"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::ByteMatchSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::IPSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "IPSetDescriptors": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-waf-ipset-ipsetdescriptors"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::IPSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::Rule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "MetricName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Predicates": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-waf-rule-predicates"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "MetricName",
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::Rule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::SizeConstraintSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SizeConstraints": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-waf-sizeconstraintset-sizeconstraint"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Name",
              "SizeConstraints"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::SizeConstraintSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::SqlInjectionMatchSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "SqlInjectionMatchTuples": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::SqlInjectionMatchSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::WebACL": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DefaultAction": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-waf-webacl-action"
              },
              "MetricName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "Rules": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-waf-webacl-rules"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "DefaultAction",
              "MetricName",
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::WebACL"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::XssMatchSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "XssMatchTuples": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/definitions_property_types_aws-properties-waf-xssmatchset-xssmatchtuple"
                    }
                  },
                  {
                    "$ref": "#/definitions/basic_types.json_definitions_function"
                  }
                ]
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::XssMatchSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WorkSpaces::Workspace": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BundleId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "DirectoryId": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "UserName": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              "RootVolumeEncryptionEnabled": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "UserVolumeEncryptionEnabled": {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              "VolumeEncryptionKey": {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              }
            },
            "required": [
              "BundleId",
              "DirectoryId",
              "UserName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WorkSpaces::Workspace"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/definitions_attributes_DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      }
    },
    "property_types": {
      "aws-properties-apitgateway-apikey-stagekey": {
        "title": "Amazon API Gateway ApiKey StageKey",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-apikey-stagekey.html",
        "type": "object",
        "properties": {
          "RestApiId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StageName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-deployment-stagedescription": {
        "title": "Amazon API Gateway Deployment StageDescription",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-deployment-stagedescription.html",
        "type": "object",
        "properties": {
          "CacheClusterEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "CacheClusterSize": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "CacheDataEncrypted": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "CacheTtlInSeconds": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "CachingEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "ClientCertificateId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "DataTraceEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Description": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "LoggingLevel": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MethodSettings": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-deployment-stagedescription-methodsetting"
          },
          "MetricsEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "StageName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ThrottlingBurstLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ThrottlingRateLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Variables": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-deployment-stagedescription-methodsetting": {
        "title": "Amazon API Gateway Deployment StageDescription MethodSetting",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-deployment-stagedescription-methodsetting.html",
        "type": "object",
        "properties": {
          "CacheDataEncrypted": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "CacheTtlInSeconds": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "CachingEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "DataTraceEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "HttpMethod": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "LoggingLevel": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MetricsEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "ResourcePath": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ThrottlingBurstLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ThrottlingRateLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-method-integration": {
        "title": "Amazon API Gateway Method Integration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html",
        "type": "object",
        "properties": {
          "CacheKeyParameters": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "CacheNamespace": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Credentials": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IntegrationHttpMethod": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IntegrationResponses": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-method-integration-integrationresponse"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "PassthroughBehavior": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RequestParameters": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          },
          "RequestTemplates": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Uri": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-apitgateway-method-integration-integrationresponse": {
        "title": "Amazon API Gateway Method Integration IntegrationResponse",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html",
        "type": "object",
        "properties": {
          "ResponseParameters": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          },
          "ResponseTemplates": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          },
          "SelectionPattern": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StatusCode": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-method-methodresponse": {
        "title": "Amazon API Gateway Method MethodResponse",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-methodresponse.html",
        "type": "object",
        "properties": {
          "ResponseModels": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          },
          "ResponseParameters": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          },
          "StatusCode": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "StatusCode"
        ],
        "additionalProperties": false
      },
      "aws-properties-apitgateway-restapi-bodys3location": {
        "title": "Amazon API Gateway RestApi S3Location",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-restapi-bodys3location.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ETag": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Version": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-stage-methodsetting": {
        "title": "Amazon API Gateway Stage MethodSetting",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html",
        "type": "object",
        "properties": {
          "CacheDataEncrypted": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "CacheTtlInSeconds": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "CachingEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "DataTraceEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "HttpMethod": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "LoggingLevel": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MetricsEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "ResourcePath": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ThrottlingBurstLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ThrottlingRateLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "HttpMethod",
          "ResourcePath"
        ],
        "additionalProperties": false
      },
      "aws-properties-apigateway-usageplan-apistage": {
        "title": "Amazon API Gateway UsagePlan ApiStage",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html",
        "type": "object",
        "properties": {
          "ApiId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Stage": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apigateway-usageplan-quotasettings": {
        "title": "Amazon API Gateway UsagePlan QuotaSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-quotasettings.html",
        "type": "object",
        "properties": {
          "Limit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Offset": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Period": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apigateway-usageplan-throttlesettings": {
        "title": "Amazon API Gateway UsagePlan ThrottleSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-throttlesettings.html",
        "type": "object",
        "properties": {
          "BurstLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "RateLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration": {
        "title": "Application Auto Scaling ScalingPolicy StepScalingPolicyConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html",
        "type": "object",
        "properties": {
          "AdjustmentType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Cooldown": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MetricAggregationType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MinAdjustmentMagnitude": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "StepAdjustments": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment": {
        "title": "Application Auto Scaling ScalingPolicy StepScalingPolicyConfiguration StepAdjustment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html",
        "type": "object",
        "properties": {
          "MetricIntervalLowerBound": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MetricIntervalUpperBound": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ScalingAdjustment": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "ScalingAdjustment"
        ],
        "additionalProperties": false
      },
      "aws-properties-as-launchconfig-blockdev-mapping": {
        "title": "AWS CloudFormation AutoScaling Block Device Mapping Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html",
        "type": "object",
        "properties": {
          "DeviceName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Ebs": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-as-launchconfig-blockdev-template"
          },
          "NoDevice": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "VirtualName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DeviceName"
        ],
        "additionalProperties": false
      },
      "aws-properties-as-launchconfig-blockdev-template": {
        "title": "AWS CloudFormation AutoScaling EBS Block Device Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html",
        "type": "object",
        "properties": {
          "DeleteOnTermination": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Encrypted": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Iops": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "SnapshotId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "VolumeSize": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-as-metricscollection": {
        "title": "Auto Scaling MetricsCollection",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html",
        "type": "object",
        "properties": {
          "Granularity": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Metrics": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "required": [
          "Granularity"
        ],
        "additionalProperties": false
      },
      "aws-properties-as-notificationconfigurations": {
        "title": "Auto Scaling NotificationConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html",
        "type": "object",
        "properties": {
          "NotificationTypes": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "TopicARN": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "NotificationTypes",
          "TopicARN"
        ],
        "additionalProperties": false
      },
      "aws-properties-autoscaling-scalingpolicy-stepadjustments": {
        "title": "Auto Scaling ScalingPolicy StepAdjustments",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html",
        "type": "object",
        "properties": {
          "MetricIntervalLowerBound": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MetricIntervalUpperBound": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ScalingAdjustment": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "ScalingAdjustment"
        ],
        "additionalProperties": false
      },
      "aws-properties-as-tags": {
        "title": "Auto Scaling Tags Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PropagateAtLaunch": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "required": [
          "Key",
          "Value",
          "PropagateAtLaunch"
        ],
        "additionalProperties": false
      },
      "aws-properties-certificatemanager-certificate-domainvalidationoption": {
        "title": "AWS Certificate Manager Certificate DomainValidationOption",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html",
        "type": "object",
        "properties": {
          "DomainName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ValidationDomain": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DomainName",
          "ValidationDomain"
        ],
        "additionalProperties": false
      },
      "aws-properties-stack-parameters": {
        "title": "CloudFormation Stack Parameters Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack-parameters.html",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "aws-properties-cloudformation-interface-label": {
        "title": "AWS CloudFormation Interface Label",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-label.html",
        "type": "object",
        "properties": {
          "default": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudformation-interface-parametergroup": {
        "title": "AWS CloudFormation Interface ParameterGroup",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parametergroup.html",
        "type": "object",
        "properties": {
          "Label": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudformation-interface-label"
          },
          "Parameters": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudformation-interface-parameterlabel": {
        "title": "AWS CloudFormation Interface ParameterLabel",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parameterlabel.html",
        "type": "object",
        "properties": {
          "ParameterLogicalID": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudformation-interface-label"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig": {
        "title": "CloudFront DistributionConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig.html",
        "type": "object",
        "properties": {
          "Aliases": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "CacheBehaviors": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-cachebehavior"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Comment": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "CustomErrorResponses": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig-customerrorresponse"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "DefaultCacheBehavior": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-defaultcachebehavior"
          },
          "DefaultRootObject": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Enabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "HttpVersion": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Logging": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-logging"
          },
          "Origins": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-origin"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "PriceClass": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Restrictions": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig-restrictions"
          },
          "ViewerCertificate": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig-viewercertificate"
          },
          "WebACLId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DefaultCacheBehavior",
          "Enabled",
          "Origins"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-cachebehavior": {
        "title": "CloudFront DistributionConfig CacheBehavior",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachebehavior.html",
        "type": "object",
        "properties": {
          "AllowedMethods": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "CachedMethods": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Compress": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "DefaultTTL": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ForwardedValues": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-forwardedvalues"
          },
          "MaxTTL": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MinTTL": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "PathPattern": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SmoothStreaming": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "TargetOriginId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TrustedSigners": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "ViewerProtocolPolicy": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "ForwardedValues",
          "PathPattern",
          "TargetOriginId",
          "ViewerProtocolPolicy"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig-customerrorresponse": {
        "title": "CloudFront DistributionConfig CustomErrorResponse",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-customerrorresponse.html",
        "type": "object",
        "properties": {
          "ErrorCachingMinTTL": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ErrorCode": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ResponseCode": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ResponsePagePath": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "ErrorCode"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-defaultcachebehavior": {
        "title": "CloudFront DefaultCacheBehavior",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-defaultcachebehavior.html",
        "type": "object",
        "properties": {
          "AllowedMethods": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "CachedMethods": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Compress": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "DefaultTTL": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ForwardedValues": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-forwardedvalues"
          },
          "MaxTTL": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MinTTL": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SmoothStreaming": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "TargetOriginId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TrustedSigners": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "ViewerProtocolPolicy": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "ForwardedValues",
          "TargetOriginId",
          "ViewerProtocolPolicy"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-logging": {
        "title": "CloudFront Logging",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-logging.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IncludeCookies": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Prefix": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Bucket"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-origin": {
        "title": "CloudFront DistributionConfig Origin",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-origin.html",
        "type": "object",
        "properties": {
          "CustomOriginConfig": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-customorigin"
          },
          "DomainName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "OriginCustomHeaders": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-origin-origincustomheader"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "OriginPath": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "S3OriginConfig": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-s3origin"
          }
        },
        "required": [
          "DomainName",
          "Id"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-customorigin": {
        "title": "CloudFront DistributionConfig Origin CustomOrigin",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-customorigin.html",
        "type": "object",
        "properties": {
          "HTTPPort": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "HTTPSPort": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "OriginProtocolPolicy": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "OriginSSLProtocols": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "required": [
          "OriginProtocolPolicy"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-origin-origincustomheader": {
        "title": "CloudFront DistributionConfig Origin OriginCustomHeader",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-origin-origincustomheader.html",
        "type": "object",
        "properties": {
          "HeaderName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "HeaderValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "HeaderName",
          "HeaderValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-s3origin": {
        "title": "CloudFront DistributionConfig Origin S3Origin",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-s3origin.html",
        "type": "object",
        "properties": {
          "OriginAccessIdentity": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig-restrictions": {
        "title": "CloudFront DistributionConfiguration Restrictions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions.html",
        "type": "object",
        "properties": {
          "GeoRestriction": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig-restrictions-georestriction"
          }
        },
        "required": [
          "GeoRestriction"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig-restrictions-georestriction": {
        "title": "CloudFront DistributionConfig Restrictions GeoRestriction",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions-georestriction.html",
        "type": "object",
        "properties": {
          "Locations": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "RestrictionType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "RestrictionType"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig-viewercertificate": {
        "title": "CloudFront DistributionConfiguration ViewerCertificate",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-viewercertificate.html",
        "type": "object",
        "properties": {
          "AcmCertificateArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "CloudFrontDefaultCertificate": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "IamCertificateId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MinimumProtocolVersion": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SslSupportMethod": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudfront-forwardedvalues": {
        "title": "CloudFront ForwardedValues",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues.html",
        "type": "object",
        "properties": {
          "Cookies": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-forwardedvalues-cookies"
          },
          "Headers": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "QueryString": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "QueryStringCacheKeys": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "required": [
          "QueryString"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-forwardedvalues-cookies": {
        "title": "CloudFront ForwardedValues Cookies",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues-cookies.html",
        "type": "object",
        "properties": {
          "Forward": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "WhitelistedNames": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "required": [
          "Forward"
        ],
        "additionalProperties": false
      },
      "aws-properties-cw-dimension": {
        "title": "CloudWatch Metric Dimension Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Name",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-events-rule-target": {
        "title": "Amazon CloudWatch Events Rule Target",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html",
        "type": "object",
        "properties": {
          "Arn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Input": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "InputPath": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Arn",
          "Id"
        ],
        "additionalProperties": false
      },
      "aws-properties-logs-metricfilter-metrictransformation": {
        "title": "CloudWatch Logs MetricFilter MetricTransformation Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html",
        "type": "object",
        "properties": {
          "MetricName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MetricNamespace": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MetricValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "MetricName",
          "MetricNamespace",
          "MetricValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-codecommit-repository-triggers": {
        "title": "AWS CodeCommit Repository Trigger",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-triggers.html",
        "type": "object",
        "properties": {
          "Branches": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "CustomData": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "DestinationArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Events": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts": {
        "title": "AWS CodeDeploy DeploymentConfig MinimumHealthyHosts",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html",
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-deployment": {
        "title": "AWS CodeDeploy DeploymentGroup Deployment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IgnoreApplicationStopFailures": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Revision": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment-revision"
          }
        },
        "required": [
          "Revision"
        ],
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-deployment-revision": {
        "title": "AWS CodeDeploy DeploymentGroup Deployment Revision",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html",
        "type": "object",
        "properties": {
          "GitHubLocation": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation"
          },
          "RevisionType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "S3Location": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation": {
        "title": "AWS CodeDeploy DeploymentGroup Deployment Revision GitHubLocation",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html",
        "type": "object",
        "properties": {
          "CommitId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Repository": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "CommitId",
          "Repository"
        ],
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location": {
        "title": "AWS CodeDeploy DeploymentGroup Deployment Revision S3Location",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "BundleType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ETag": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Version": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Bucket",
          "BundleType",
          "Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-ec2tagfilters": {
        "title": "AWS CodeDeploy DeploymentGroup Ec2TagFilters",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilters.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters": {
        "title": "AWS CodeDeploy DeploymentGroup OnPremisesInstanceTagFilters",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-resource-codepipeline-customactiontype-artifactdetails": {
        "title": "AWS CodePipeline CustomActionType ArtifactDetails",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-artifactdetails.html",
        "type": "object",
        "properties": {
          "MaximumCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MinimumCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "MaximumCount",
          "MinimumCount"
        ],
        "additionalProperties": false
      },
      "aws-resource-codepipeline-customactiontype-configurationproperties": {
        "title": "AWS CodePipeline CustomActionType ConfigurationProperties",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-configurationproperties.html",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Queryable": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Required": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Secret": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Key",
          "Name",
          "Required",
          "Secret"
        ],
        "additionalProperties": false
      },
      "aws-resource-codepipeline-customactiontype-settings": {
        "title": "AWS CodePipeline CustomActionType Settings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-settings.html",
        "type": "object",
        "properties": {
          "EntityUrlTemplate": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ExecutionUrlTemplate": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RevisionUrlTemplate": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ThirdPartyConfigurationUrl": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-artifactstore": {
        "title": "AWS CodePipeline Pipeline ArtifactStore",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html",
        "type": "object",
        "properties": {
          "EncryptionKey": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-artifactstore-encryptionkey"
          },
          "Location": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Location",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-artifactstore-encryptionkey": {
        "title": "AWS CodePipeline Pipeline ArtifactStore EncryptionKey",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore-encryptionkey.html",
        "type": "object",
        "properties": {
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Id",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-disableinboundstagetransitions": {
        "title": "AWS CodePipeline Pipeline DisableInboundStageTransitions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-disableinboundstagetransitions.html",
        "type": "object",
        "properties": {
          "Reason": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StageName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Reason",
          "StageName"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages": {
        "title": "AWS CodePipeline Pipeline Stages",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html",
        "type": "object",
        "properties": {
          "Actions": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Blockers": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-blockers"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Actions",
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-actions": {
        "title": "AWS CodePipeline Pipeline Stages Actions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html",
        "type": "object",
        "properties": {
          "ActionTypeId": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions-actiontypeid"
          },
          "Configuration": {
            "type": "object"
          },
          "InputArtifacts": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions-inputartifacts"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "OutputArtifacts": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions-outputartifacts"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RunOrder": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "ActionTypeId",
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-actions-actiontypeid": {
        "title": "AWS CodePipeline Pipeline Stages Actions ActionTypeId",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html",
        "type": "object",
        "properties": {
          "Category": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Owner": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Provider": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Version": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Category",
          "Owner",
          "Provider",
          "Version"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-actions-inputartifacts": {
        "title": "AWS CodePipeline Pipeline Stages Actions InputArtifacts",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-inputartifacts.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-actions-outputartifacts": {
        "title": "AWS CodePipeline Pipeline Stages Actions OutputArtifacts",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-outputartifacts.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-blockers": {
        "title": "AWS CodePipeline Pipeline Stages Blockers",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-blockers.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Name",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-config-configrule-scope": {
        "title": "AWS Config ConfigRule Scope",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html",
        "type": "object",
        "properties": {
          "ComplianceResourceId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ComplianceResourceTypes": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "TagKey": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TagValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-config-configrule-source": {
        "title": "AWS Config ConfigRule Source",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html",
        "type": "object",
        "properties": {
          "Owner": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SourceDetails": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-config-configrule-source-sourcedetails"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "SourceIdentifier": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Owner",
          "SourceIdentifier"
        ],
        "additionalProperties": false
      },
      "aws-properties-config-configrule-source-sourcedetails": {
        "title": "AWS Config ConfigRule Source SourceDetails",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source-sourcedetails.html",
        "type": "object",
        "properties": {
          "EventSource": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MessageType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "EventSource",
          "MessageType"
        ],
        "additionalProperties": false
      },
      "aws-properties-config-configurationrecorder-recordinggroup": {
        "title": "AWS Config ConfigurationRecorder RecordingGroup",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html",
        "type": "object",
        "properties": {
          "AllSupported": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "IncludeGlobalResourceTypes": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "ResourceTypes": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-config-deliverychannel-configsnapshotdeliveryproperties": {
        "title": "AWS Config DeliveryChannel ConfigSnapshotDeliveryProperties",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties.html",
        "type": "object",
        "properties": {
          "DeliveryFrequency": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-parameterobjects": {
        "title": "AWS Data Pipeline Pipeline ParameterObjects",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects.html",
        "type": "object",
        "properties": {
          "Attributes": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-parameterobjects-attributes"
          },
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Attributes",
          "Id"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-parameterobjects-attributes": {
        "title": "AWS Data Pipeline Parameter Objects Attributes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects-attributes.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StringValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-parametervalues": {
        "title": "AWS Data Pipeline Pipeline ParameterValues",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parametervalues.html",
        "type": "object",
        "properties": {
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StringValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Id",
          "StringValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-pipelineobjects": {
        "title": "AWS Data Pipeline PipelineObjects",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects.html",
        "type": "object",
        "properties": {
          "Fields": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-pipelineobjects-fields"
          },
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Fields",
          "Id",
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-pipelineobjects-fields": {
        "title": "AWS Data Pipeline Data Pipeline Object Fields",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects-fields.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RefValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StringValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-pipelinetags": {
        "title": "AWS Data Pipeline Pipeline PipelineTags",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelinetags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-directoryservice-microsoftad-vpcsettings": {
        "title": "AWS Directory Service MicrosoftAD VpcSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-microsoftad-vpcsettings.html",
        "type": "object",
        "properties": {
          "SubnetIds": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "VpcId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "SubnetIds",
          "VpcId"
        ],
        "additionalProperties": false
      },
      "aws-properties-directoryservice-simplead-vpcsettings": {
        "title": "AWS Directory Service SimpleAD VpcSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-simplead-vpcsettings.html",
        "type": "object",
        "properties": {
          "SubnetIds": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "VpcId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "SubnetIds",
          "VpcId"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-attributedef": {
        "title": "DynamoDB Attribute Definitions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-attributedef.html",
        "type": "object",
        "properties": {
          "AttributeName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "AttributeType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "AttributeName",
          "AttributeType"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-gsi": {
        "title": "DynamoDB Global Secondary Indexes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-gsi.html",
        "type": "object",
        "properties": {
          "IndexName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "KeySchema": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-keyschema"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Projection": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-projectionobject"
          },
          "ProvisionedThroughput": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-provisionedthroughput"
          }
        },
        "required": [
          "IndexName",
          "KeySchema",
          "Projection",
          "ProvisionedThroughput"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-keyschema": {
        "title": "DynamoDB Key Schema",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-keyschema.html",
        "type": "object",
        "properties": {
          "AttributeName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "KeyType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "AttributeName",
          "KeyType"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-lsi": {
        "title": "DynamoDB Local Secondary Indexes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-lsi.html",
        "type": "object",
        "properties": {
          "IndexName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "KeySchema": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-keyschema"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Projection": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-projectionobject"
          }
        },
        "required": [
          "IndexName",
          "KeySchema",
          "Projection"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-projectionobject": {
        "title": "DynamoDB Projection Object",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-projectionobject.html",
        "type": "object",
        "properties": {
          "NonKeyAttributes": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "ProjectionType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-dynamodb-provisionedthroughput": {
        "title": "DynamoDB Provisioned Throughput",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html",
        "type": "object",
        "properties": {
          "ReadCapacityUnits": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "WriteCapacityUnits": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "ReadCapacityUnits",
          "WriteCapacityUnits"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-streamspecification": {
        "title": "DynamoDB Table StreamSpecification",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-streamspecification.html",
        "type": "object",
        "properties": {
          "StreamViewType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "StreamViewType"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-blockdev-mapping": {
        "title": "Amazon EC2 Block Device Mapping Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html",
        "type": "object",
        "properties": {
          "DeviceName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Ebs": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-blockdev-template"
          },
          "NoDevice": {
            "description": "\u003cp\u003eThis property can be used to unmap a defined device.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: an empty map: {}.\u003c/p\u003e"
          },
          "VirtualName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DeviceName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-blockdev-template": {
        "title": "Amazon Elastic Block Store Block Device Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html",
        "type": "object",
        "properties": {
          "DeleteOnTermination": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Encrypted": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Iops": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "SnapshotId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "VolumeSize": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "VolumeType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-instance-ssmassociations": {
        "title": "Amazon EC2 Instance SsmAssociations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html",
        "type": "object",
        "properties": {
          "AssociationParameters": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-instance-ssmassociations-associationparameters"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "DocumentName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DocumentName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-instance-ssmassociations-associationparameters": {
        "title": "Amazon EC2 Instance SsmAssociations AssociationParameters",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-mount-point": {
        "title": "EC2 MountPoint Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html",
        "type": "object",
        "properties": {
          "Device": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "VolumeId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Device",
          "VolumeId"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-network-iface-embedded": {
        "title": "EC2 NetworkInterface Embedded Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html",
        "type": "object",
        "properties": {
          "AssociatePublicIpAddress": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "DeleteOnTermination": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Description": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "DeviceIndex": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "GroupSet": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "NetworkInterfaceId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PrivateIpAddress": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PrivateIpAddresses": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-network-interface-privateipspec"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "SecondaryPrivateIpAddressCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "SubnetId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DeviceIndex"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-networkaclentry-icmp": {
        "title": "EC2 NetworkAclEntry Icmp",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html",
        "type": "object",
        "properties": {
          "Code": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-networkaclentry-portrange": {
        "title": "EC2 NetworkAclEntry PortRange",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html",
        "type": "object",
        "properties": {
          "From": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "To": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-network-interface-privateipspec": {
        "title": "EC2 Network Interface Private IP Specification",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html",
        "type": "object",
        "properties": {
          "PrivateIpAddress": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Primary": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "required": [
          "PrivateIpAddress",
          "Primary"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-security-group-rule": {
        "title": "EC2 Security Group Rule Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html",
        "type": "object",
        "properties": {
          "CidrIp": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "DestinationPrefixListId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "DestinationSecurityGroupId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "FromPort": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "IpProtocol": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SourceSecurityGroupId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SourceSecurityGroupName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SourceSecurityGroupOwnerId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ToPort": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "IpProtocol"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata": {
        "title": "Amazon EC2 SpotFleet SpotFleetRequestConfigData",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html",
        "type": "object",
        "properties": {
          "AllocationStrategy": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ExcessCapacityTerminationPolicy": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IamFleetRole": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "LaunchSpecifications": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "SpotPrice": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TargetCapacity": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "TerminateInstancesWithExpiration": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "ValidFrom": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ValidUntil": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "IamFleetRole",
          "LaunchSpecifications",
          "SpotPrice",
          "TargetCapacity"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html",
        "type": "object",
        "properties": {
          "BlockDeviceMappings": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "EbsOptimized": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "IamInstanceProfile": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile"
          },
          "ImageId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "InstanceType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "KernelId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "KeyName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Monitoring": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring"
          },
          "NetworkInterfaces": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Placement": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement"
          },
          "RamdiskId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SecurityGroups": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "SpotPrice": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SubnetId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "UserData": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "WeightedCapacity": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "ImageId",
          "InstanceType"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html",
        "type": "object",
        "properties": {
          "DeviceName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Ebs": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs"
          },
          "NoDevice": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "VirtualName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DeviceName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings Ebs",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html",
        "type": "object",
        "properties": {
          "DeleteOnTermination": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Encrypted": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Iops": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "SnapshotId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "VolumeSize": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications IamInstanceProfile",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html",
        "type": "object",
        "properties": {
          "Arn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring": {
        "title": "Amazon EC2 SpotFleet SpotFleetRequestConfigData LaunchSpecifications Monitoring",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html",
        "type": "object",
        "properties": {
          "Enabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html",
        "type": "object",
        "properties": {
          "AssociatePublicIpAddress": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "DeleteOnTermination": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Description": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "DeviceIndex": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Groups": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "NetworkInterfaceId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PrivateIpAddresses": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "SecondaryPrivateIpAddressCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "SubnetId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DeviceIndex"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces PrivateIpAddresses",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html",
        "type": "object",
        "properties": {
          "Primary": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "PrivateIpAddress": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "PrivateIpAddress"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications Placement",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html",
        "type": "object",
        "properties": {
          "AvailabilityZone": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "GroupName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications SecurityGroups",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html",
        "type": "object",
        "properties": {
          "GroupId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ecs-service-deploymentconfiguration": {
        "title": "Amazon EC2 Container Service Service DeploymentConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html",
        "type": "object",
        "properties": {
          "MaximumPercent": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MinimumHealthyPercent": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ecs-service-loadbalancers": {
        "title": "Amazon EC2 Container Service Service LoadBalancers",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html",
        "type": "object",
        "properties": {
          "ContainerName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ContainerPort": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "LoadBalancerName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TargetGroupArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "ContainerName",
          "ContainerPort"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html",
        "type": "object",
        "properties": {
          "Command": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Cpu": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "DisableNetworking": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "DnsSearchDomains": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "DnsServers": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "DockerLabels": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          },
          "DockerSecurityOptions": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "EntryPoint": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Environment": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-environment"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Essential": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "ExtraHosts": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-hostentry"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Hostname": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Image": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Links": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "LogConfiguration": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration"
          },
          "Memory": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MountPoints": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PortMappings": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-portmappings"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Privileged": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "ReadonlyRootFilesystem": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Ulimits": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-ulimit"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "User": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "VolumesFrom": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "WorkingDirectory": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Image",
          "Memory",
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-environment": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions Environment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Name",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-hostentry": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions HostEntry",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html",
        "type": "object",
        "properties": {
          "Hostname": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IpAddress": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Hostname",
          "IpAddress"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions LogConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html",
        "type": "object",
        "properties": {
          "LogDriver": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Options": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          }
        },
        "required": [
          "LogDriver"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions MountPoints",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html",
        "type": "object",
        "properties": {
          "ContainerPath": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SourceVolume": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ReadOnly": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "required": [
          "ContainerPath",
          "SourceVolume"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-portmappings": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions PortMappings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html",
        "type": "object",
        "properties": {
          "ContainerPort": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "HostPort": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Protocol": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "ContainerPort"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-ulimit": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions Ulimit",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html",
        "type": "object",
        "properties": {
          "HardLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SoftLimit": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "HardLimit",
          "SoftLimit"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions VolumesFrom",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html",
        "type": "object",
        "properties": {
          "SourceContainer": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ReadOnly": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "required": [
          "SourceContainer"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-volumes": {
        "title": "Amazon EC2 Container Service TaskDefinition Volumes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Host": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-volumes-host"
          }
        },
        "required": [
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-volumes-host": {
        "title": "Amazon EC2 Container Service TaskDefinition Volumes Host",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html",
        "type": "object",
        "properties": {
          "SourcePath": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-efs-filesystem-filesystemtags": {
        "title": "Amazon Elastic File System FileSystem FileSystemTags",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-efs-filesystem-filesystemtags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-beanstalk-environment-tier": {
        "title": "Elastic Beanstalk Environment Tier Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment-tier.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Version": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-beanstalk-option-settings": {
        "title": "Elastic Beanstalk OptionSettings Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html",
        "type": "object",
        "properties": {
          "Namespace": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "OptionName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Namespace",
          "OptionName",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-beanstalk-sourcebundle": {
        "title": "Elastic Beanstalk SourceBundle Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-sourcebundle.html",
        "type": "object",
        "properties": {
          "S3Bucket": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "S3Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "S3Bucket",
          "S3Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-beanstalk-configurationtemplate-sourceconfiguration": {
        "title": "Elastic Beanstalk SourceConfiguration Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-configurationtemplate-sourceconfiguration.html",
        "type": "object",
        "properties": {
          "ApplicationName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TemplateName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "ApplicationName",
          "TemplateName"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticache-replicationgroup-nodegroupconfiguration": {
        "title": "Amazon ElastiCache ReplicationGroup NodeGroupConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html",
        "type": "object",
        "properties": {
          "PrimaryAvailabilityZone": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ReplicaAvailabilityZones": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "ReplicaCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Slots": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-accessloggingpolicy": {
        "title": "Elastic Load Balancing AccessLoggingPolicy",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html",
        "type": "object",
        "properties": {
          "EmitInterval": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Enabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "S3BucketName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "S3BucketPrefix": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Enabled",
          "S3BucketName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-AppCookieStickinessPolicy": {
        "title": "ElasticLoadBalancing AppCookieStickinessPolicy Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-AppCookieStickinessPolicy.html",
        "type": "object",
        "properties": {
          "CookieName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PolicyName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "CookieName",
          "PolicyName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-connectiondrainingpolicy": {
        "title": "Elastic Load Balancing ConnectionDrainingPolicy",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectiondrainingpolicy.html",
        "type": "object",
        "properties": {
          "Enabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Timeout": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "Enabled"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-connectionsettings": {
        "title": "Elastic Load Balancing ConnectionSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectionsettings.html",
        "type": "object",
        "properties": {
          "IdleTimeout": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "IdleTimeout"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-health-check": {
        "title": "ElasticLoadBalancing HealthCheck Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html",
        "type": "object",
        "properties": {
          "HealthyThreshold": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Interval": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Target": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Timeout": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "UnhealthyThreshold": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "HealthyThreshold",
          "Interval",
          "Target",
          "Timeout",
          "UnhealthyThreshold"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-LBCookieStickinessPolicy": {
        "title": "ElasticLoadBalancing LBCookieStickinessPolicy Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-LBCookieStickinessPolicy.html",
        "type": "object",
        "properties": {
          "CookieExpirationPeriod": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PolicyName": {
            "description": "\u003cp\u003eThe name of the policy being created. The name must be unique within the set of\n                  policies for this load balancer.\u003c/p\u003e\u003cdiv class\u003d\"aws-note\"\u003e\u003cp class\u003d\"aws-note\"\u003eNote\u003c/p\u003e\u003cp\u003eTo associate this policy with a listener, include the policy name in the\n                     listener\u0027s \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html\" title\u003d\"ElasticLoadBalancing Listener Property Type\"\u003ePolicyNames\u003c/a\u003e\n                     property.\u003c/p\u003e\u003c/div\u003e"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-listener": {
        "title": "ElasticLoadBalancing Listener Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html",
        "type": "object",
        "properties": {
          "InstancePort": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "InstanceProtocol": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "LoadBalancerPort": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PolicyNames": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Protocol": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SSLCertificateId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "InstancePort",
          "LoadBalancerPort",
          "Protocol"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-policy": {
        "title": "ElasticLoadBalancing Policy Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html",
        "type": "object",
        "properties": {
          "Attributes": {
            "description": "\u003cp\u003eA list of arbitrary attributes for this policy. If you don\u0027t need to specify\n                  any policy attributes, specify an empty list (\u003ccode class\u003d\"code\"\u003e[]\u003c/code\u003e).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of JSON name-value pairs.\u003c/p\u003e"
          },
          "InstancePorts": {
            "description": "\u003cp\u003eA list of instance ports for the policy. These are the ports associated with the back-end\n                  server.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of String\u003c/p\u003e"
          },
          "LoadBalancerPorts": {
            "description": "\u003cp\u003eA list of external load balancer ports for the policy.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Only for some policies. For more information,\n                  see the \u003cem class\u003d\"citetitle\"\u003e\u003ca class\u003d\"ulink\" href\u003d\"http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/Welcome.html\" target\u003d\"_blank\"\u003eElastic Load Balancing\n                        Developer Guide\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of String\u003c/p\u003e"
          },
          "PolicyName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PolicyType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Attributes",
          "PolicyName",
          "PolicyType"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-listener-certificates": {
        "title": "Elastic Load Balancing Listener Certificates",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificates.html",
        "type": "object",
        "properties": {
          "CertificateArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-listener-defaultactions": {
        "title": "Elastic Load Balancing Listener DefaultActions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-defaultactions.html",
        "type": "object",
        "properties": {
          "TargetGroupArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "TargetGroupArn",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-listenerrule-actions": {
        "title": "Elastic Load Balancing ListenerRule Actions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-actions.html",
        "type": "object",
        "properties": {
          "TargetGroupArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "TargetGroupArn",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-listenerrule-conditions": {
        "title": "Elastic Load Balancing ListenerRule Conditions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-conditions.html",
        "type": "object",
        "properties": {
          "Field": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Values": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes": {
        "title": "Elastic Load Balancing LoadBalancer LoadBalancerAttributes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-targetgroup-matcher": {
        "title": "Elastic Load Balancing TargetGroup Matcher",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-matcher.html",
        "type": "object",
        "properties": {
          "HttpCode": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-targetgroup-targetdescription": {
        "title": "Elastic Load Balancing TargetGroup TargetDescription",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html",
        "type": "object",
        "properties": {
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Port": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "Id"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes": {
        "title": "Elastic Load Balancing TargetGroup TargetGroupAttributes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticsearch-domain-ebsoptions": {
        "title": "Amazon Elasticsearch Service Domain EBSOptions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-ebsoptions.html",
        "type": "object",
        "properties": {
          "EBSEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Iops": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "VolumeSize": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticsearch-domain-elasticsearchclusterconfig": {
        "title": "Amazon Elasticsearch Service Domain ElasticsearchClusterConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-elasticsearchclusterconfig.html",
        "type": "object",
        "properties": {
          "DedicatedMasterCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "DedicatedMasterEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "DedicatedMasterType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "InstanceCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "InstanceType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ZoneAwarenessEnabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticsearch-domain-snapshotoptions": {
        "title": "Amazon Elasticsearch Service Domain SnapshotOptions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-snapshotoptions.html",
        "type": "object",
        "properties": {
          "AutomatedSnapshotStartHour": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-application": {
        "title": "Amazon EMR Cluster Application",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-application.html",
        "type": "object",
        "properties": {
          "AdditionalInfo": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Args": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Version": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-bootstrapactionconfig": {
        "title": "Amazon EMR Cluster BootstrapActionConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ScriptBootstrapAction": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig"
          }
        },
        "required": [
          "Name",
          "ScriptBootstrapAction"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig": {
        "title": "Amazon EMR Cluster BootstrapActionConfig ScriptBootstrapActionConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig.html",
        "type": "object",
        "properties": {
          "Args": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Path": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Path"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-configuration": {
        "title": "Amazon EMR Cluster Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-configuration.html",
        "type": "object",
        "properties": {
          "Classification": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ConfigurationProperties": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Configurations": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-configuration"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-jobflowinstancesconfig": {
        "title": "Amazon EMR Cluster JobFlowInstancesConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html",
        "type": "object",
        "properties": {
          "AdditionalMasterSecurityGroups": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "AdditionalSlaveSecurityGroups": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "CoreInstanceGroup": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig"
          },
          "Ec2KeyName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Ec2SubnetId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "EmrManagedMasterSecurityGroup": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "EmrManagedSlaveSecurityGroup": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "HadoopVersion": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MasterInstanceGroup": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig"
          },
          "Placement": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig-placementtype"
          },
          "ServiceAccessSecurityGroup": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TerminationProtected": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "required": [
          "CoreInstanceGroup",
          "MasterInstanceGroup"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig": {
        "title": "Amazon EMR Cluster JobFlowInstancesConfig InstanceGroupConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig.html",
        "type": "object",
        "properties": {
          "BidPrice": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Configurations": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-configuration"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "EbsConfiguration": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-emr-ebsconfiguration"
          },
          "InstanceCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "InstanceType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Market": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "InstanceCount",
          "InstanceType"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-jobflowinstancesconfig-placementtype": {
        "title": "Amazon EMR Cluster JobFlowInstancesConfig PlacementType",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-placementtype.html",
        "type": "object",
        "properties": {
          "AvailabilityZone": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "AvailabilityZone"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-ebsconfiguration": {
        "title": "Amazon EMR EbsConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration.html",
        "type": "object",
        "properties": {
          "EbsBlockDeviceConfigs": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "EbsOptimized": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig": {
        "title": "Amazon EMR EbsConfiguration EbsBlockDeviceConfigs",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig.html",
        "type": "object",
        "properties": {
          "VolumeSpecification": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification"
          },
          "VolumesPerInstance": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "VolumeSpecification"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification": {
        "title": "Amazon EMR EbsConfiguration EbsBlockDeviceConfig VolumeSpecification",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification.html",
        "type": "object",
        "properties": {
          "Iops": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "SizeInGB": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "SizeInGB",
          "VolumeType"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-step-hadoopjarstepconfig": {
        "title": "Amazon EMR Step HadoopJarStepConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig.html",
        "type": "object",
        "properties": {
          "Args": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Jar": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MainClass": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StepProperties": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-emr-step-hadoopjarstepconfig-keyvalue"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          }
        },
        "required": [
          "Jar"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-step-hadoopjarstepconfig-keyvalue": {
        "title": "Amazon EMR Step HadoopJarStepConfig KeyValue",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig-keyvalue.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-gamelift-alias-routingstrategy": {
        "title": "Amazon GameLift Alias RoutingStrategy",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-alias-routingstrategy.html",
        "type": "object",
        "properties": {
          "FleetId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Message": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-gamelift-build-storagelocation": {
        "title": "Amazon GameLift Build StorageLocation",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-build-storagelocation.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Bucket",
          "Key",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-gamelift-fleet-ec2inboundpermission": {
        "title": "Amazon GameLift Fleet EC2InboundPermission",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html",
        "type": "object",
        "properties": {
          "FromPort": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "IpRange": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Protocol": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ToPort": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "FromPort",
          "IpRange",
          "Protocol",
          "ToPort"
        ],
        "additionalProperties": false
      },
      "aws-properties-iam-policy": {
        "title": "IAM Policies",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html",
        "type": "object",
        "properties": {
          "PolicyDocument": {
            "type": "object"
          },
          "PolicyName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "PolicyDocument",
          "PolicyName"
        ],
        "additionalProperties": false
      },
      "aws-properties-iam-user-loginprofile": {
        "title": "IAM User LoginProfile",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html",
        "type": "object",
        "properties": {
          "Password": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PasswordResetRequired": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "required": [
          "Password"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-actions": {
        "title": "AWS IoT Actions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-actions.html",
        "type": "object",
        "properties": {
          "CloudwatchAlarm": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-cloudwatchalarm"
          },
          "CloudwatchMetric": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-cloudwatchmetric"
          },
          "DynamoDB": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-dynamodb"
          },
          "Elasticsearch": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-elasticsearch"
          },
          "Firehose": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-firehose"
          },
          "Kinesis": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-kinesis"
          },
          "Lambda": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-lambda"
          },
          "Republish": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-republish"
          },
          "S3": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-s3"
          },
          "Sns": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-sns"
          },
          "Sqs": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-sqs"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-iot-cloudwatchalarm": {
        "title": "AWS IoT CloudwatchAlarm Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-cloudwatchalarm.html",
        "type": "object",
        "properties": {
          "AlarmName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StateReason": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StateValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "AlarmName",
          "RoleArn",
          "StateReason",
          "StateValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-cloudwatchmetric": {
        "title": "AWS IoT CloudwatchMetric Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-cloudwatchmetric.html",
        "type": "object",
        "properties": {
          "MetricName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MetricNamespace": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MetricTimestamp": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MetricUnit": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MetricValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "MetricName",
          "MetricNamespace",
          "MetricUnit",
          "MetricValue",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-dynamodb": {
        "title": "AWS IoT DynamoDB Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-dynamodb.html",
        "type": "object",
        "properties": {
          "HashKeyField": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "HashKeyValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PayloadField": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RangeKeyField": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RangeKeyValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TableName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "HashKeyField",
          "HashKeyValue",
          "RangeKeyField",
          "RangeKeyValue",
          "RoleArn",
          "TableName"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-elasticsearch": {
        "title": "AWS IoT Elasticsearch Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-elasticsearch.html",
        "type": "object",
        "properties": {
          "Endpoint": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Index": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Endpoint",
          "Id",
          "Index",
          "RoleArn",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-firehose": {
        "title": "AWS IoT Firehose Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-firehose.html",
        "type": "object",
        "properties": {
          "DeliveryStreamName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DeliveryStreamName",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-kinesis": {
        "title": "AWS IoT Kinesis Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-kinesis.html",
        "type": "object",
        "properties": {
          "PartitionKey": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StreamName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "RoleArn",
          "StreamName"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-lambda": {
        "title": "AWS IoT Lambda Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-lambda.html",
        "type": "object",
        "properties": {
          "FunctionArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "FunctionArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-republish": {
        "title": "AWS IoT Republish Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-republish.html",
        "type": "object",
        "properties": {
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Topic": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "RoleArn",
          "Topic"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-s3": {
        "title": "AWS IoT S3 Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-s3.html",
        "type": "object",
        "properties": {
          "BucketName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "BucketName",
          "Key",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-sns": {
        "title": "AWS IoT Sns Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-sns.html",
        "type": "object",
        "properties": {
          "MessageFormat": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TargetArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "RoleArn",
          "TargetArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-sqs": {
        "title": "AWS IoT Sqs Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-sqs.html",
        "type": "object",
        "properties": {
          "QueueUrl": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "UseBase64": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "QueueUrl",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-topicrulepayload": {
        "title": "AWS IoT TopicRulePayload",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrulepayload.html",
        "type": "object",
        "properties": {
          "Actions": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-iot-actions"
          },
          "AwsIotSqlVersion": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Description": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RuleDisabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Sql": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Actions",
          "RuleDisabled",
          "Sql"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions": {
        "title": "Amazon Kinesis Firehose DeliveryStream Destination CloudWatchLoggingOptions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions.html",
        "type": "object",
        "properties": {
          "Enabled": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "LogGroupName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "LogStreamName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration": {
        "title": "Amazon Kinesis Firehose DeliveryStream ElasticsearchDestinationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration.html",
        "type": "object",
        "properties": {
          "BufferingHints": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-bufferinghints"
          },
          "CloudWatchLoggingOptions": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions"
          },
          "DomainARN": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IndexName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IndexRotationPeriod": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RetryOptions": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleARN": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "S3BackupMode": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "S3Configuration": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TypeName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "BufferingHints",
          "DomainARN",
          "IndexName",
          "IndexRotationPeriod",
          "RoleARN",
          "S3BackupMode",
          "TypeName"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-bufferinghints": {
        "title": "Amazon Kinesis Firehose DeliveryStream ElasticsearchDestinationConfiguration BufferingHints",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-bufferinghints.html",
        "type": "object",
        "properties": {
          "IntervalInSeconds": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "SizeInMBs": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "IntervalInSeconds",
          "SizeInMBs"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-retryoptions": {
        "title": "Amazon Kinesis Firehose DeliveryStream ElasticsearchDestinationConfiguration RetryOptions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-retryoptions.html",
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "DurationInSeconds"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration": {
        "title": "Amazon Kinesis Firehose DeliveryStream RedshiftDestinationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration.html",
        "type": "object",
        "properties": {
          "CloudWatchLoggingOptions": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions"
          },
          "ClusterJDBCURL": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "CopyCommand": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration-copycommand"
          },
          "Password": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleARN": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "S3Configuration": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration"
          },
          "Username": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "ClusterJDBCURL",
          "CopyCommand",
          "Password",
          "RoleARN",
          "S3Configuration",
          "Username"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration-copycommand": {
        "title": "Amazon Kinesis Firehose DeliveryStream RedshiftDestinationConfiguration CopyCommand",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration-copycommand.html",
        "type": "object",
        "properties": {
          "CopyOptions": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "DataTableColumns": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "DataTableName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DataTableName"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration": {
        "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration.html",
        "type": "object",
        "properties": {
          "BucketARN": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "BufferingHints": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-bufferinghints"
          },
          "CloudWatchLoggingOptions": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions"
          },
          "CompressionFormat": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "EncryptionConfiguration": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration"
          },
          "Prefix": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RoleARN": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "BucketARN",
          "BufferingHints",
          "CompressionFormat",
          "Prefix",
          "RoleARN"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-bufferinghints": {
        "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration BufferingHints",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-bufferinghints.html",
        "type": "object",
        "properties": {
          "IntervalInSeconds": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "SizeInMBs": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "IntervalInSeconds",
          "SizeInMBs"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration-kmsencryptionconfig": {
        "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration EncryptionConfiguration KMSEncryptionConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration-kmsencryptionconfig.html",
        "type": "object",
        "properties": {
          "AWSKMSKeyARN": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "AWSKMSKeyARN"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration": {
        "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration EncryptionConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration.html",
        "type": "object",
        "properties": {
          "KMSEncryptionConfig": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration-kmsencryptionconfig"
          },
          "NoEncryptionConfig": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-lambda-function-environment": {
        "title": "AWS Lambda Function Environment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html",
        "type": "object",
        "properties": {
          "Variables": {
            "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-lambda-function-code": {
        "title": "AWS Lambda Function Code",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html",
        "type": "object",
        "properties": {
          "S3Bucket": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "S3Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "S3ObjectVersion": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ZipFile": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-lambda-function-vpcconfig": {
        "title": "AWS Lambda Function VPCConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html",
        "type": "object",
        "properties": {
          "SecurityGroupIds": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "SubnetIds": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "required": [
          "SecurityGroupIds",
          "SubnetIds"
        ],
        "additionalProperties": false
      },
      "aws-properties-name": {
        "title": "Name Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds": {
        "title": "AWS OpsWorks AutoScalingThresholds Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds.html",
        "type": "object",
        "properties": {
          "CpuThreshold": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "IgnoreMetricsTime": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "InstanceCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "LoadThreshold": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MemoryThreshold": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ThresholdsWaitTime": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-stack-chefconfiguration": {
        "title": "AWS OpsWorks ChefConfiguration Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-chefconfiguration.html",
        "type": "object",
        "properties": {
          "BerkshelfVersion": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ManageBerkshelf": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-lifecycleeventconfiguration": {
        "title": "AWS OpsWorks Layer LifeCycleConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration.html",
        "type": "object",
        "properties": {
          "ShutdownEventConfiguration": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration": {
        "title": "AWS OpsWorks Layer LifeCycleConfiguration ShutdownEventConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration.html",
        "type": "object",
        "properties": {
          "DelayUntilElbConnectionsDrained": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "ExecutionTimeout": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-loadbasedautoscaling": {
        "title": "AWS OpsWorks LoadBasedAutoScaling Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling.html",
        "type": "object",
        "properties": {
          "DownScaling": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds"
          },
          "Enable": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "UpScaling": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-recipes": {
        "title": "AWS OpsWorks Recipes Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-recipes.html",
        "type": "object",
        "properties": {
          "Configure": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Deploy": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Setup": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Shutdown": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Undeploy": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-stack-source": {
        "title": "AWS OpsWorks Source Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-source.html",
        "type": "object",
        "properties": {
          "Password": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Revision": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SshKey": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Url": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Username": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-app-environment": {
        "title": "AWS OpsWorks App Environment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-environment.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Secure": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-opsworks-app-sslconfiguration": {
        "title": "AWS OpsWorks SslConfiguration Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-sslconfiguration.html",
        "type": "object",
        "properties": {
          "Certificate": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Chain": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "PrivateKey": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Certificate",
          "PrivateKey"
        ],
        "additionalProperties": false
      },
      "aws-properties-opsworks-stack-stackconfigmanager": {
        "title": "AWS OpsWorks StackConfigurationManager Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-stackconfigmanager.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Version": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-instance-timebasedautoscaling": {
        "title": "AWS OpsWorks TimeBasedAutoScaling Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-instance-timebasedautoscaling.html",
        "type": "object",
        "properties": {
          "Friday": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Monday": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Saturday": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Sunday": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Thursday": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Tuesday": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Wednesday": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-volumeconfig": {
        "title": "AWS OpsWorks VolumeConfiguration Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-volumeconfig.html",
        "type": "object",
        "properties": {
          "Iops": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "MountPoint": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "NumberOfDisks": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "RaidLevel": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Size": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "MountPoint",
          "NumberOfDisks",
          "Size"
        ],
        "additionalProperties": false
      },
      "aws-property-redshift-clusterparametergroup-parameter": {
        "title": "Amazon Redshift Parameter Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html",
        "type": "object",
        "properties": {
          "ParameterName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ParameterValue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "ParameterName",
          "ParameterValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-resource-tags": {
        "title": "AWS CloudFormation Resource Tags Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-rds-optiongroup-optionconfigurations": {
        "title": "Amazon RDS OptionGroup OptionConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations.html",
        "type": "object",
        "properties": {
          "DBSecurityGroupMemberships": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "OptionName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "OptionSettings": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-rds-optiongroup-optionconfigurations-optionsettings"
          },
          "Port": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "VpcSecurityGroupMemberships": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          }
        },
        "required": [
          "OptionName"
        ],
        "additionalProperties": false
      },
      "aws-properties-rds-optiongroup-optionconfigurations-optionsettings": {
        "title": "Amazon RDS OptionGroup OptionConfigurations OptionSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations-optionsettings.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-rds-security-group-rule": {
        "title": "Amazon RDS Security Group Rule",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group-rule.html",
        "type": "object",
        "properties": {
          "CIDRIP": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "EC2SecurityGroupId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "EC2SecurityGroupName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "EC2SecurityGroupOwnerId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-route53-aliastarget": {
        "title": "Route 53 AliasTarget Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html",
        "type": "object",
        "properties": {
          "DNSName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "EvaluateTargetHealth": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "HostedZoneId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DNSName",
          "HostedZoneId"
        ],
        "additionalProperties": false
      },
      "aws-properties-route53-recordset-geolocation": {
        "title": "Amazon Route 53 Record Set GeoLocation Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html",
        "type": "object",
        "properties": {
          "ContinentCode": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "CountryCode": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SubdivisionCode": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-route53-healthcheck-healthcheckconfig": {
        "title": "Amazon Route 53 HealthCheckConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html",
        "type": "object",
        "properties": {
          "FailureThreshold": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "FullyQualifiedDomainName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IPAddress": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Port": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "RequestInterval": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "ResourcePath": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "SearchString": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-route53-healthcheck-healthchecktags": {
        "title": "Amazon Route 53 HealthCheckTags",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-route53-hostedzone-hostedzoneconfig": {
        "title": "Amazon Route 53 HostedZoneConfig Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzoneconfig.html",
        "type": "object",
        "properties": {
          "Comment": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-route53-hostedzone-hostedzonetags": {
        "title": "Amazon Route 53 HostedZoneTags",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-resource-route53-hostedzone-hostedzonevpcs": {
        "title": "Amazon Route 53 HostedZoneVPCs",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone-hostedzonevpcs.html",
        "type": "object",
        "properties": {
          "VPCId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "VPCRegion": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "VPCId",
          "VPCRegion"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-cors": {
        "title": "Amazon S3 Cors Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html",
        "type": "object",
        "properties": {
          "CorsRules": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-cors-corsrule"
          }
        },
        "required": [
          "CorsRules"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-cors-corsrule": {
        "title": "Amazon S3 Cors Configuration Rule",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html",
        "type": "object",
        "properties": {
          "AllowedHeaders": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "AllowedMethods": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "AllowedOrigins": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "ExposedHeaders": {
            "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
          },
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "MaxAge": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "AllowedMethods",
          "AllowedOrigins"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-lifecycleconfig": {
        "title": "Amazon S3 Lifecycle Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html",
        "type": "object",
        "properties": {
          "Rules": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule"
          }
        },
        "required": [
          "Rules"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-lifecycleconfig-rule": {
        "title": "Amazon S3 Lifecycle Rule",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html",
        "type": "object",
        "properties": {
          "ExpirationDate": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ExpirationInDays": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "NoncurrentVersionExpirationInDays": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "NoncurrentVersionTransition": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition"
          },
          "NoncurrentVersionTransitions": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          },
          "Prefix": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Status": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Transition": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-transition"
          },
          "Transitions": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-transition"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          }
        },
        "required": [
          "Status"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition": {
        "title": "Amazon S3 Lifecycle Rule NoncurrentVersionTransition",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html",
        "type": "object",
        "properties": {
          "StorageClass": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TransitionInDays": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "StorageClass",
          "TransitionInDays"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-lifecycleconfig-rule-transition": {
        "title": "Amazon S3 Lifecycle Rule Transition",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html",
        "type": "object",
        "properties": {
          "StorageClass": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TransitionDate": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TransitionInDays": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "StorageClass"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-loggingconfig": {
        "title": "Amazon S3 Logging Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html",
        "type": "object",
        "properties": {
          "DestinationBucketName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "LogFilePrefix": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfig": {
        "title": "Amazon S3 NotificationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html",
        "type": "object",
        "properties": {
          "LambdaConfigurations": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfig-lambdaconfig"
          },
          "QueueConfigurations": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfig-queueconfig"
          },
          "TopicConfigurations": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfig-topicconfig"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfiguration-config-filter": {
        "title": "Amazon S3 NotificationConfiguration Config Filter",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html",
        "type": "object",
        "properties": {
          "S3Key": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key"
          }
        },
        "required": [
          "S3Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key": {
        "title": "Amazon S3 NotificationConfiguration Config Filter S3Key",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html",
        "type": "object",
        "properties": {
          "Rules": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          }
        },
        "required": [
          "Rules"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules": {
        "title": "Amazon S3 NotificationConfiguration Config Filter S3Key Rules",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Name",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfig-lambdaconfig": {
        "title": "Amazon Simple Storage Service NotificationConfiguration LambdaConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html",
        "type": "object",
        "properties": {
          "Event": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Filter": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter"
          },
          "Function": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Event",
          "Function"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfig-queueconfig": {
        "title": "Amazon Simple Storage Service NotificationConfiguration QueueConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html",
        "type": "object",
        "properties": {
          "Event": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Filter": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter"
          },
          "Queue": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Event",
          "Queue"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfig-topicconfig": {
        "title": "Amazon S3 NotificationConfiguration TopicConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html",
        "type": "object",
        "properties": {
          "Event": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Filter": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter"
          },
          "Topic": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Event",
          "Topic"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-replicationconfiguration": {
        "title": "Amazon S3 ReplicationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html",
        "type": "object",
        "properties": {
          "Role": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Rules": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-replicationconfiguration-rules"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          }
        },
        "required": [
          "Role",
          "Rules"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-replicationconfiguration-rules": {
        "title": "Amazon S3 ReplicationConfiguration Rules",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html",
        "type": "object",
        "properties": {
          "Destination": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-replicationconfiguration-rules-destination"
          },
          "Id": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Prefix": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Status": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Destination",
          "Prefix",
          "Status"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-replicationconfiguration-rules-destination": {
        "title": "Amazon S3 ReplicationConfiguration Rules Destination",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "StorageClass": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Bucket"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-versioningconfig": {
        "title": "Amazon S3 Versioning Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html",
        "type": "object",
        "properties": {
          "Status": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Status"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration": {
        "title": "Amazon S3 Website Configuration Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html",
        "type": "object",
        "properties": {
          "ErrorDocument": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "IndexDocument": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "RedirectAllRequestsTo": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration-redirectallrequeststo"
          },
          "RoutingRules": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration-routingrules"
                }
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          }
        },
        "required": [
          "IndexDocument"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration-redirectallrequeststo": {
        "title": "Amazon S3 Website Configuration Redirect All Requests To Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html",
        "type": "object",
        "properties": {
          "HostName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Protocol": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "HostName"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration-routingrules": {
        "title": "Amazon S3 Website Configuration Routing Rules Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html",
        "type": "object",
        "properties": {
          "RedirectRule": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration-routingrules-redirectrule"
          },
          "RoutingRuleCondition": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition"
          }
        },
        "required": [
          "RedirectRule"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration-routingrules-redirectrule": {
        "title": "Amazon S3 Website Configuration Routing Rules Redirect Rule Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html",
        "type": "object",
        "properties": {
          "HostName": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "HttpRedirectCode": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Protocol": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ReplaceKeyPrefixWith": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "ReplaceKeyWith": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition": {
        "title": "Amazon S3 Website Configuration Routing Rules Routing Rule Condition Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html",
        "type": "object",
        "properties": {
          "HttpErrorCodeReturnedEquals": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "KeyPrefixEquals": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-sns-subscription": {
        "title": "Amazon SNS Subscription Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html",
        "type": "object",
        "properties": {
          "Endpoint": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Protocol": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Endpoint",
          "Protocol"
        ],
        "additionalProperties": false
      },
      "aws-properties-sqs-queues-redrivepolicy": {
        "title": "Amazon SQS RedrivePolicy",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues-redrivepolicy.html",
        "type": "object",
        "properties": {
          "deadLetterTargetArn": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "maxReceiveCount": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          }
        },
        "required": [
          "deadLetterTargetArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-bytematchset-bytematchtuples": {
        "title": "AWS WAF ByteMatchSet ByteMatchTuples",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples.html",
        "type": "object",
        "properties": {
          "FieldToMatch": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch"
          },
          "PositionalConstraint": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TargetString": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TargetStringBase64": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "TextTransformation": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "FieldToMatch",
          "PositionalConstraint",
          "TextTransformation"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch": {
        "title": "AWS WAF ByteMatchSet ByteMatchTuples FieldToMatch",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch.html",
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-ipset-ipsetdescriptors": {
        "title": "AWS WAF IPSet IPSetDescriptors",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-ipset-ipsetdescriptors.html",
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Value": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-rule-predicates": {
        "title": "AWS WAF Rule Predicates",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-rule-predicates.html",
        "type": "object",
        "properties": {
          "DataId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Negated": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "DataId",
          "Negated",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-sizeconstraintset-sizeconstraint": {
        "title": "AWS WAF SizeConstraintSet SizeConstraint",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint.html",
        "type": "object",
        "properties": {
          "ComparisonOperator": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "FieldToMatch": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch"
          },
          "Size": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "TextTransformation": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "ComparisonOperator",
          "FieldToMatch",
          "Size",
          "TextTransformation"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch": {
        "title": "AWS WAF SizeConstraintSet SizeConstraint FieldToMatch",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch.html",
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples": {
        "title": "AWS WAF SqlInjectionMatchSet SqlInjectionMatchTuples",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples.html",
        "type": "object",
        "properties": {
          "FieldToMatch": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch"
          },
          "TextTransformation": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "FieldToMatch",
          "TextTransformation"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples-fieldtomatch": {
        "title": "AWS WAF SqlInjectionMatchSet SqlInjectionMatchTuples FieldToMatch",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples-fieldtomatch.html",
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-xssmatchset-xssmatchtuple": {
        "title": "AWS WAF XssMatchSet XssMatchTuple",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple.html",
        "type": "object",
        "properties": {
          "FieldToMatch": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch"
          },
          "TextTransformation": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "FieldToMatch",
          "TextTransformation"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch": {
        "title": "AWS WAF XssMatchSet XssMatchTuple FieldToMatch",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch.html",
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          },
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-webacl-action": {
        "title": "AWS WAF WebACL Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-action.html",
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-webacl-rules": {
        "title": "AWS WAF WebACL Rules",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-rules.html",
        "type": "object",
        "properties": {
          "Action": {
            "$ref": "#/definitions/definitions_property_types_aws-properties-waf-webacl-action"
          },
          "Priority": {
            "$ref": "#/definitions/basic_types.json_definitions_integer"
          },
          "RuleId": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        "required": [
          "Action",
          "Priority",
          "RuleId"
        ],
        "additionalProperties": false
      }
    },
    "definitions_resource_types_AWS::ApiGateway::Account": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CloudWatchRoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::Account"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "basic_types.json_definitions_string": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_function"
        }
      ]
    },
    "basic_types.json_definitions_function": {
      "oneOf": [
        {
          "$ref": "#/definitions/basic_types.json_definitions_functions_Fn::Base64"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_functions_Fn::FindInMap"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_functions_Fn::GetAtt"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_functions_Fn::GetAZs"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_functions_Fn::Join"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_condition_function"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_functions_Fn::Select"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_functions_Ref"
        }
      ]
    },
    "basic_types.json_definitions_functions_Fn::Base64": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::Base64": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Fn::Base64"
      ]
    },
    "basic_types.json_definitions_functions_Fn::FindInMap": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::FindInMap": {
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_functions_Fn::FindInMap"
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_functions_Ref"
              }
            ]
          }
        }
      },
      "required": [
        "Fn::FindInMap"
      ]
    },
    "basic_types.json_definitions_functions_Ref": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Ref": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Ref"
      ]
    },
    "basic_types.json_definitions_functions_Fn::GetAtt": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::GetAtt": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "type": "string"
            },
            {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_functions_Ref"
                }
              ]
            }
          ]
        }
      },
      "required": [
        "Fn::GetAtt"
      ]
    },
    "basic_types.json_definitions_functions_Fn::GetAZs": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::GetAZs": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_functions_Ref"
            }
          ]
        }
      },
      "required": [
        "Fn::GetAZs"
      ]
    },
    "basic_types.json_definitions_functions_Fn::Join": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::Join": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "type": "string"
            },
            {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/basic_types.json_definitions_primitive"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          ]
        }
      },
      "required": [
        "Fn::Join"
      ]
    },
    "basic_types.json_definitions_primitive": {
      "anyOf": [
        {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      ]
    },
    "basic_types.json_definitions_integer": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^-?[0-9]+$"
        },
        {
          "type": "integer"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_function"
        }
      ]
    },
    "basic_types.json_definitions_boolean": {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string",
          "enum": [
            "True",
            "False",
            "true",
            "false"
          ]
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_function"
        }
      ]
    },
    "basic_types.json_definitions_condition_function": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/basic_types.json_definitions_condition_functions_Fn::And"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_condition_functions_Fn::Equals"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_condition_functions_Fn::If"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_condition_functions_Fn::Not"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_condition_functions_Fn::Or"
        }
      ]
    },
    "basic_types.json_definitions_condition_functions_Fn::And": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::And": {
          "type": "array",
          "minItems": 2,
          "maxItems": 10,
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/basic_types.json_definitions_condition"
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_condition_function"
              }
            ]
          }
        }
      },
      "required": [
        "Fn::And"
      ]
    },
    "basic_types.json_definitions_condition": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Condition"
      ]
    },
    "basic_types.json_definitions_condition_functions_Fn::Equals": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::Equals": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/basic_types.json_definitions_string"
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_integer"
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_boolean"
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_function"
              }
            ]
          }
        }
      },
      "required": [
        "Fn::Equals"
      ]
    },
    "basic_types.json_definitions_condition_functions_Fn::If": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::If": {
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": [
            {
              "type": "string"
            },
            {},
            {}
          ]
        }
      },
      "required": [
        "Fn::If"
      ]
    },
    "basic_types.json_definitions_condition_functions_Fn::Not": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::Not": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/basic_types.json_definitions_condition"
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_condition_function"
              }
            ]
          }
        }
      },
      "required": [
        "Fn::Not"
      ]
    },
    "basic_types.json_definitions_condition_functions_Fn::Or": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::Or": {
          "type": "array",
          "minItems": 2,
          "maxItems": 10,
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/basic_types.json_definitions_condition"
              },
              {
                "$ref": "#/definitions/basic_types.json_definitions_condition_function"
              }
            ]
          }
        }
      },
      "required": [
        "Fn::Or"
      ]
    },
    "basic_types.json_definitions_functions_Fn::Select": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Fn::Select": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            {}
          ]
        }
      },
      "required": [
        "Fn::Select"
      ]
    },
    "definitions_attributes_DependsOn": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "definitions_attributes_DeletionPolicy": {
      "type": "string",
      "enum": [
        "Delete",
        "Retain",
        "Snapshot"
      ]
    },
    "definitions_resource_types_AWS::ApiGateway::ApiKey": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Enabled": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StageKeys": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-apikey-stagekey"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::ApiKey"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apitgateway-apikey-stagekey": {
      "title": "Amazon API Gateway ApiKey StageKey",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-apikey-stagekey.html",
      "type": "object",
      "properties": {
        "RestApiId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StageName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApiGateway::Authorizer": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AuthorizerCredentials": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AuthorizerResultTtlInSeconds": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "AuthorizerUri": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "IdentitySource": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "IdentityValidationExpression": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ProviderARNs": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "RestApiId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Type": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "IdentitySource",
            "Name",
            "Type"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::Authorizer"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "basic_types.json_definitions_list\u003cstring\u003e": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/basic_types.json_definitions_string"
          }
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_function"
        }
      ]
    },
    "definitions_resource_types_AWS::ApiGateway::BasePathMapping": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "BasePath": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DomainName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RestApiId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Stage": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DomainName",
            "RestApiId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::BasePathMapping"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApiGateway::ClientCertificate": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::ClientCertificate"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApiGateway::Deployment": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RestApiId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StageDescription": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-deployment-stagedescription"
            },
            "StageName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "RestApiId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::Deployment"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apitgateway-deployment-stagedescription": {
      "title": "Amazon API Gateway Deployment StageDescription",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-deployment-stagedescription.html",
      "type": "object",
      "properties": {
        "CacheClusterEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "CacheClusterSize": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "CacheDataEncrypted": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "CacheTtlInSeconds": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "CachingEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "ClientCertificateId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "DataTraceEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Description": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "LoggingLevel": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MethodSettings": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-deployment-stagedescription-methodsetting"
        },
        "MetricsEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "StageName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ThrottlingBurstLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ThrottlingRateLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Variables": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apitgateway-deployment-stagedescription-methodsetting": {
      "title": "Amazon API Gateway Deployment StageDescription MethodSetting",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-deployment-stagedescription-methodsetting.html",
      "type": "object",
      "properties": {
        "CacheDataEncrypted": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "CacheTtlInSeconds": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "CachingEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "DataTraceEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "HttpMethod": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "LoggingLevel": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MetricsEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "ResourcePath": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ThrottlingBurstLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ThrottlingRateLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "additionalProperties": false
    },
    "basic_types.json_definitions_key-value-pairs": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/basic_types.json_definitions_string"
      }
    },
    "definitions_resource_types_AWS::ApiGateway::Method": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ApiKeyRequired": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "AuthorizationType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AuthorizerId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HttpMethod": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Integration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-method-integration"
            },
            "MethodResponses": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-method-methodresponse"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "RequestModels": {
              "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
            },
            "RequestParameters": {
              "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
            },
            "ResourceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RestApiId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "AuthorizationType",
            "HttpMethod",
            "ResourceId",
            "RestApiId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::Method"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apitgateway-method-integration": {
      "title": "Amazon API Gateway Method Integration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html",
      "type": "object",
      "properties": {
        "CacheKeyParameters": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "CacheNamespace": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Credentials": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IntegrationHttpMethod": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IntegrationResponses": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-method-integration-integrationresponse"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "PassthroughBehavior": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RequestParameters": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        },
        "RequestTemplates": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Uri": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apitgateway-method-integration-integrationresponse": {
      "title": "Amazon API Gateway Method Integration IntegrationResponse",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html",
      "type": "object",
      "properties": {
        "ResponseParameters": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        },
        "ResponseTemplates": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        },
        "SelectionPattern": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StatusCode": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apitgateway-method-methodresponse": {
      "title": "Amazon API Gateway Method MethodResponse",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-methodresponse.html",
      "type": "object",
      "properties": {
        "ResponseModels": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        },
        "ResponseParameters": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        },
        "StatusCode": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "StatusCode"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApiGateway::Model": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ContentType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RestApiId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Schema": {
              "type": "object"
            }
          },
          "required": [
            "RestApiId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::Model"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApiGateway::Resource": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ParentId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PathPart": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RestApiId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ParentId",
            "PathPart",
            "RestApiId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::Resource"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApiGateway::RestApi": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Body": {
              "type": "object"
            },
            "BodyS3Location": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-restapi-bodys3location"
            },
            "CloneFrom": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "FailOnWarnings": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Parameters": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::RestApi"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apitgateway-restapi-bodys3location": {
      "title": "Amazon API Gateway RestApi S3Location",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-restapi-bodys3location.html",
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ETag": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Version": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApiGateway::Stage": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CacheClusterEnabled": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "CacheClusterSize": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ClientCertificateId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DeploymentId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MethodSettings": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-apitgateway-stage-methodsetting"
            },
            "RestApiId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StageName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Variables": {
              "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
            }
          },
          "required": [
            "DeploymentId",
            "RestApiId",
            "StageName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::Stage"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apitgateway-stage-methodsetting": {
      "title": "Amazon API Gateway Stage MethodSetting",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html",
      "type": "object",
      "properties": {
        "CacheDataEncrypted": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "CacheTtlInSeconds": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "CachingEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "DataTraceEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "HttpMethod": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "LoggingLevel": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MetricsEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "ResourcePath": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ThrottlingBurstLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ThrottlingRateLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "HttpMethod",
        "ResourcePath"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApiGateway::UsagePlan": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ApiStages": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-apigateway-usageplan-apistage"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Quota": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-apigateway-usageplan-quotasettings"
            },
            "Throttle": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-apigateway-usageplan-throttlesettings"
            },
            "UsagePlanName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApiGateway::UsagePlan"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apigateway-usageplan-apistage": {
      "title": "Amazon API Gateway UsagePlan ApiStage",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html",
      "type": "object",
      "properties": {
        "ApiId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Stage": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apigateway-usageplan-quotasettings": {
      "title": "Amazon API Gateway UsagePlan QuotaSettings",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-quotasettings.html",
      "type": "object",
      "properties": {
        "Limit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Offset": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Period": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-apigateway-usageplan-throttlesettings": {
      "title": "Amazon API Gateway UsagePlan ThrottleSettings",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-throttlesettings.html",
      "type": "object",
      "properties": {
        "BurstLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "RateLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApplicationAutoScaling::ScalableTarget": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "MaxCapacity": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "MinCapacity": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "ResourceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RoleARN": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ScalableDimension": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ServiceNamespace": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "MaxCapacity",
            "MinCapacity",
            "ResourceId",
            "RoleARN",
            "ScalableDimension",
            "ServiceNamespace"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApplicationAutoScaling::ScalableTarget"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ApplicationAutoScaling::ScalingPolicy": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "PolicyName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PolicyType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ResourceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ScalableDimension": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ServiceNamespace": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ScalingTargetId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StepScalingPolicyConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration"
            }
          },
          "required": [
            "PolicyName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ApplicationAutoScaling::ScalingPolicy"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration": {
      "title": "Application Auto Scaling ScalingPolicy StepScalingPolicyConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html",
      "type": "object",
      "properties": {
        "AdjustmentType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Cooldown": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MetricAggregationType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MinAdjustmentMagnitude": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "StepAdjustments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment": {
      "title": "Application Auto Scaling ScalingPolicy StepScalingPolicyConfiguration StepAdjustment",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html",
      "type": "object",
      "properties": {
        "MetricIntervalLowerBound": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MetricIntervalUpperBound": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ScalingAdjustment": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "ScalingAdjustment"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::AutoScaling::AutoScalingGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AvailabilityZones": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Cooldown": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DesiredCapacity": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HealthCheckGracePeriod": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "HealthCheckType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LaunchConfigurationName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LoadBalancerNames": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "MaxSize": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MetricsCollection": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-as-metricscollection"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "MinSize": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NotificationConfigurations": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-as-notificationconfigurations"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "PlacementGroup": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-as-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "TargetGroupARNs": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "TerminationPolicies": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "VPCZoneIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "NotificationConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-as-notificationconfigurations"
            }
          },
          "required": [
            "MaxSize",
            "MinSize"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::AutoScaling::AutoScalingGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        },
        "CreationPolicy": {
          "$ref": "#/definitions/definitions_attributes_CreationPolicy"
        },
        "UpdatePolicy": {
          "$ref": "#/definitions/definitions_attributes_UpdatePolicy"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-as-metricscollection": {
      "title": "Auto Scaling MetricsCollection",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html",
      "type": "object",
      "properties": {
        "Granularity": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Metrics": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "required": [
        "Granularity"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-as-notificationconfigurations": {
      "title": "Auto Scaling NotificationConfigurations",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html",
      "type": "object",
      "properties": {
        "NotificationTypes": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "TopicARN": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "NotificationTypes",
        "TopicARN"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-as-tags": {
      "title": "Auto Scaling Tags Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PropagateAtLaunch": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "required": [
        "Key",
        "Value",
        "PropagateAtLaunch"
      ],
      "additionalProperties": false
    },
    "definitions_attributes_CreationPolicy": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ResourceSignal"
      ],
      "properties": {
        "ResourceSignal": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Count": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Timeout": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        }
      }
    },
    "definitions_attributes_UpdatePolicy": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AutoScalingRollingUpdate": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "MaxBatchSize": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "MinInstancesInService": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "MinSuccessfulInstancesPercent": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "PauseTime": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SuspendProcesses": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "WaitOnResourceSignals": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            }
          }
        },
        "AutoScalingScheduledAction": {
          "type": "object",
          "additionalProperties": false,
          "IgnoreUnmodifiedGroupSizeProperties": {
            "$ref": "#/definitions/basic_types.json_definitions_boolean"
          }
        }
      }
    },
    "definitions_resource_types_AWS::AutoScaling::LaunchConfiguration": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AssociatePublicIpAddress": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "BlockDeviceMappings": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-as-launchconfig-blockdev-mapping"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "ClassicLinkVPCId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ClassicLinkVPCSecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "EbsOptimized": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "IamInstanceProfile": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ImageId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceMonitoring": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "InstanceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "KernelId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "KeyName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PlacementTenancy": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RamDiskId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SpotPrice": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "UserData": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ImageId",
            "InstanceType"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::AutoScaling::LaunchConfiguration"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-as-launchconfig-blockdev-mapping": {
      "title": "AWS CloudFormation AutoScaling Block Device Mapping Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html",
      "type": "object",
      "properties": {
        "DeviceName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Ebs": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-as-launchconfig-blockdev-template"
        },
        "NoDevice": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "VirtualName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DeviceName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-as-launchconfig-blockdev-template": {
      "title": "AWS CloudFormation AutoScaling EBS Block Device Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html",
      "type": "object",
      "properties": {
        "DeleteOnTermination": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Encrypted": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Iops": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "SnapshotId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "VolumeSize": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "VolumeType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::AutoScaling::LifecycleHook": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AutoScalingGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DefaultResult": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HeartbeatTimeout": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "LifecycleTransition": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NotificationMetadata": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NotificationTargetARN": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RoleARN": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "AutoScalingGroupName",
            "LifecycleTransition"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::AutoScaling::LifecycleHook"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::AutoScaling::ScalingPolicy": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AdjustmentType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AutoScalingGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Cooldown": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EstimatedInstanceWarmup": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "MetricAggregationType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MinAdjustmentMagnitude": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "PolicyType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ScalingAdjustment": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "StepAdjustments": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-autoscaling-scalingpolicy-stepadjustments"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "AdjustmentType",
            "AutoScalingGroupName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::AutoScaling::ScalingPolicy"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-autoscaling-scalingpolicy-stepadjustments": {
      "title": "Auto Scaling ScalingPolicy StepAdjustments",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html",
      "type": "object",
      "properties": {
        "MetricIntervalLowerBound": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MetricIntervalUpperBound": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ScalingAdjustment": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "ScalingAdjustment"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::AutoScaling::ScheduledAction": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AutoScalingGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DesiredCapacity": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "EndTime": {
              "$ref": "#/definitions/basic_types.json_definitions_timestamp"
            },
            "MaxSize": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "MinSize": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Recurrence": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StartTime": {
              "$ref": "#/definitions/basic_types.json_definitions_timestamp"
            }
          },
          "required": [
            "AutoScalingGroupName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::AutoScaling::ScheduledAction"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "basic_types.json_definitions_timestamp": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        {
          "type": "string",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        {
          "type": "string",
          "format": "date-time"
        },
        {
          "$ref": "#/definitions/basic_types.json_definitions_function"
        }
      ]
    },
    "definitions_resource_types_AWS::CertificateManager::Certificate": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DomainName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DomainValidationOptions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-certificatemanager-certificate-domainvalidationoption"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "SubjectAlternativeNames": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "DomainName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CertificateManager::Certificate"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-certificatemanager-certificate-domainvalidationoption": {
      "title": "AWS Certificate Manager Certificate DomainValidationOption",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html",
      "type": "object",
      "properties": {
        "DomainName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ValidationDomain": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DomainName",
        "ValidationDomain"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-resource-tags": {
      "title": "AWS CloudFormation Resource Tags Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudFormation::Authentication": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "accessKeyId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "buckets": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "password": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "secretKey": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "type": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "uris": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "username": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "roleName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "type"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CloudFormation::Authentication"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudFormation::CustomResource": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "ServiceToken": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ServiceToken"
          ]
        },
        "Type": {
          "oneOf": [
            {
              "enum": [
                "AWS::CloudFormation::CustomResource"
              ]
            },
            {
              "pattern": "^Custom::.*"
            }
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudFormation::Init": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {}
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CloudFormation::Init"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudFormation::Interface": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ParameterGroups": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-cloudformation-interface-parametergroup"
            },
            "ParameterLabels": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-cloudformation-interface-parameterlabel"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CloudFormation::Interface"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudformation-interface-parametergroup": {
      "title": "AWS CloudFormation Interface ParameterGroup",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parametergroup.html",
      "type": "object",
      "properties": {
        "Label": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudformation-interface-label"
        },
        "Parameters": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudformation-interface-label": {
      "title": "AWS CloudFormation Interface Label",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-label.html",
      "type": "object",
      "properties": {
        "default": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudformation-interface-parameterlabel": {
      "title": "AWS CloudFormation Interface ParameterLabel",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parameterlabel.html",
      "type": "object",
      "properties": {
        "ParameterLogicalID": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudformation-interface-label"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudFormation::Stack": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "NotificationARNs": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Parameters": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-stack-parameters"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "TemplateURL": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TimeoutInMinutes": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "TemplateURL"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CloudFormation::Stack"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-stack-parameters": {
      "title": "CloudFormation Stack Parameters Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack-parameters.html",
      "type": "object",
      "properties": {},
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudFormation::WaitCondition": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Count": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Handle": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Timeout": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Handle",
            "Timeout"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CloudFormation::WaitCondition"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        },
        "CreationPolicy": {
          "$ref": "#/definitions/definitions_attributes_CreationPolicy"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudFormation::WaitConditionHandle": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {}
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CloudFormation::WaitConditionHandle"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudFront::Distribution": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DistributionConfig": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig"
            }
          },
          "required": [
            "DistributionConfig"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CloudFront::Distribution"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-distributionconfig": {
      "title": "CloudFront DistributionConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig.html",
      "type": "object",
      "properties": {
        "Aliases": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "CacheBehaviors": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-cachebehavior"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Comment": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "CustomErrorResponses": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig-customerrorresponse"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "DefaultCacheBehavior": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-defaultcachebehavior"
        },
        "DefaultRootObject": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Enabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "HttpVersion": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Logging": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-logging"
        },
        "Origins": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-origin"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "PriceClass": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Restrictions": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig-restrictions"
        },
        "ViewerCertificate": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig-viewercertificate"
        },
        "WebACLId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DefaultCacheBehavior",
        "Enabled",
        "Origins"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-cachebehavior": {
      "title": "CloudFront DistributionConfig CacheBehavior",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachebehavior.html",
      "type": "object",
      "properties": {
        "AllowedMethods": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "CachedMethods": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Compress": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "DefaultTTL": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ForwardedValues": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-forwardedvalues"
        },
        "MaxTTL": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MinTTL": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "PathPattern": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SmoothStreaming": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "TargetOriginId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TrustedSigners": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "ViewerProtocolPolicy": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "ForwardedValues",
        "PathPattern",
        "TargetOriginId",
        "ViewerProtocolPolicy"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-forwardedvalues": {
      "title": "CloudFront ForwardedValues",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues.html",
      "type": "object",
      "properties": {
        "Cookies": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-forwardedvalues-cookies"
        },
        "Headers": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "QueryString": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "QueryStringCacheKeys": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "required": [
        "QueryString"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-forwardedvalues-cookies": {
      "title": "CloudFront ForwardedValues Cookies",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues-cookies.html",
      "type": "object",
      "properties": {
        "Forward": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "WhitelistedNames": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "required": [
        "Forward"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-distributionconfig-customerrorresponse": {
      "title": "CloudFront DistributionConfig CustomErrorResponse",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-customerrorresponse.html",
      "type": "object",
      "properties": {
        "ErrorCachingMinTTL": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ErrorCode": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ResponseCode": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ResponsePagePath": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "ErrorCode"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-defaultcachebehavior": {
      "title": "CloudFront DefaultCacheBehavior",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-defaultcachebehavior.html",
      "type": "object",
      "properties": {
        "AllowedMethods": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "CachedMethods": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Compress": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "DefaultTTL": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ForwardedValues": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-forwardedvalues"
        },
        "MaxTTL": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MinTTL": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SmoothStreaming": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "TargetOriginId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TrustedSigners": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "ViewerProtocolPolicy": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "ForwardedValues",
        "TargetOriginId",
        "ViewerProtocolPolicy"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-logging": {
      "title": "CloudFront Logging",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-logging.html",
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IncludeCookies": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Prefix": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Bucket"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-origin": {
      "title": "CloudFront DistributionConfig Origin",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-origin.html",
      "type": "object",
      "properties": {
        "CustomOriginConfig": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-customorigin"
        },
        "DomainName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "OriginCustomHeaders": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-origin-origincustomheader"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "OriginPath": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "S3OriginConfig": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-s3origin"
        }
      },
      "required": [
        "DomainName",
        "Id"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-customorigin": {
      "title": "CloudFront DistributionConfig Origin CustomOrigin",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-customorigin.html",
      "type": "object",
      "properties": {
        "HTTPPort": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "HTTPSPort": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "OriginProtocolPolicy": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "OriginSSLProtocols": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "required": [
        "OriginProtocolPolicy"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-origin-origincustomheader": {
      "title": "CloudFront DistributionConfig Origin OriginCustomHeader",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-origin-origincustomheader.html",
      "type": "object",
      "properties": {
        "HeaderName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "HeaderValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "HeaderName",
        "HeaderValue"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-s3origin": {
      "title": "CloudFront DistributionConfig Origin S3Origin",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-s3origin.html",
      "type": "object",
      "properties": {
        "OriginAccessIdentity": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-distributionconfig-restrictions": {
      "title": "CloudFront DistributionConfiguration Restrictions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions.html",
      "type": "object",
      "properties": {
        "GeoRestriction": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-cloudfront-distributionconfig-restrictions-georestriction"
        }
      },
      "required": [
        "GeoRestriction"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-distributionconfig-restrictions-georestriction": {
      "title": "CloudFront DistributionConfig Restrictions GeoRestriction",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions-georestriction.html",
      "type": "object",
      "properties": {
        "Locations": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "RestrictionType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "RestrictionType"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cloudfront-distributionconfig-viewercertificate": {
      "title": "CloudFront DistributionConfiguration ViewerCertificate",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-viewercertificate.html",
      "type": "object",
      "properties": {
        "AcmCertificateArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "CloudFrontDefaultCertificate": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "IamCertificateId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MinimumProtocolVersion": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SslSupportMethod": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudTrail::Trail": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CloudWatchLogsLogGroupArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CloudWatchLogsRoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EnableLogFileValidation": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "IncludeGlobalServiceEvents": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "IsLogging": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "IsMultiRegionTrail": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "KMSKeyId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "S3BucketName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "S3KeyPrefix": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SnsTopicName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "IsLogging",
            "S3BucketName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CloudTrail::Trail"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CloudWatch::Alarm": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ActionsEnabled": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "AlarmActions": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "AlarmDescription": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AlarmName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ComparisonOperator": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Dimensions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-cw-dimension"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "EvaluationPeriods": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InsufficientDataActions": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "MetricName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Namespace": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "OKActions": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Period": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Statistic": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Threshold": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Unit": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ComparisonOperator",
            "EvaluationPeriods",
            "MetricName",
            "Namespace",
            "Period",
            "Statistic",
            "Threshold"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CloudWatch::Alarm"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-cw-dimension": {
      "title": "CloudWatch Metric Dimension Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Name",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CodeCommit::Repository": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "RepositoryDescription": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RepositoryName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Triggers": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-codecommit-repository-triggers"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "RepositoryName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CodeCommit::Repository"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codecommit-repository-triggers": {
      "title": "AWS CodeCommit Repository Trigger",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-triggers.html",
      "type": "object",
      "properties": {
        "Branches": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "CustomData": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "DestinationArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Events": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CodeDeploy::Application": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ApplicationName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CodeDeploy::Application"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CodeDeploy::DeploymentConfig": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DeploymentConfigName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MinimumHealthyHosts": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CodeDeploy::DeploymentConfig"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts": {
      "title": "AWS CodeDeploy DeploymentConfig MinimumHealthyHosts",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html",
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CodeDeploy::DeploymentGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ApplicationName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AutoScalingGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Deployment": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment"
            },
            "DeploymentConfigName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DeploymentGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Ec2TagFilters": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-ec2tagfilters"
            },
            "OnPremisesInstanceTagFilters": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters"
            },
            "ServiceRoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ApplicationName",
            "ServiceRoleArn"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CodeDeploy::DeploymentGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment": {
      "title": "AWS CodeDeploy DeploymentGroup Deployment",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html",
      "type": "object",
      "properties": {
        "Description": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IgnoreApplicationStopFailures": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Revision": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment-revision"
        }
      },
      "required": [
        "Revision"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment-revision": {
      "title": "AWS CodeDeploy DeploymentGroup Deployment Revision",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html",
      "type": "object",
      "properties": {
        "GitHubLocation": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation"
        },
        "RevisionType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "S3Location": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation": {
      "title": "AWS CodeDeploy DeploymentGroup Deployment Revision GitHubLocation",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html",
      "type": "object",
      "properties": {
        "CommitId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Repository": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "CommitId",
        "Repository"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location": {
      "title": "AWS CodeDeploy DeploymentGroup Deployment Revision S3Location",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html",
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "BundleType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ETag": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Version": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Bucket",
        "BundleType",
        "Key"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codedeploy-deploymentgroup-ec2tagfilters": {
      "title": "AWS CodeDeploy DeploymentGroup Ec2TagFilters",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilters.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters": {
      "title": "AWS CodeDeploy DeploymentGroup OnPremisesInstanceTagFilters",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CodePipeline::CustomActionType": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Category": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ConfigurationProperties": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-resource-codepipeline-customactiontype-configurationproperties"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "InputArtifactDetails": {
              "$ref": "#/definitions/definitions_property_types_aws-resource-codepipeline-customactiontype-artifactdetails"
            },
            "OutputArtifactDetails": {
              "$ref": "#/definitions/definitions_property_types_aws-resource-codepipeline-customactiontype-artifactdetails"
            },
            "Provider": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Settings": {
              "$ref": "#/definitions/definitions_property_types_aws-resource-codepipeline-customactiontype-settings"
            },
            "Version": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Category",
            "InputArtifactDetails",
            "OutputArtifactDetails",
            "Provider"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CodePipeline::CustomActionType"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-resource-codepipeline-customactiontype-configurationproperties": {
      "title": "AWS CodePipeline CustomActionType ConfigurationProperties",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-configurationproperties.html",
      "type": "object",
      "properties": {
        "Description": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Queryable": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Required": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Secret": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Key",
        "Name",
        "Required",
        "Secret"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-resource-codepipeline-customactiontype-artifactdetails": {
      "title": "AWS CodePipeline CustomActionType ArtifactDetails",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-artifactdetails.html",
      "type": "object",
      "properties": {
        "MaximumCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MinimumCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "MaximumCount",
        "MinimumCount"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-resource-codepipeline-customactiontype-settings": {
      "title": "AWS CodePipeline CustomActionType Settings",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-settings.html",
      "type": "object",
      "properties": {
        "EntityUrlTemplate": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ExecutionUrlTemplate": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RevisionUrlTemplate": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ThirdPartyConfigurationUrl": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::CodePipeline::Pipeline": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ArtifactStore": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-artifactstore"
            },
            "DisableInboundStageTransitions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-disableinboundstagetransitions"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RestartExecutionOnUpdate": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "RoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Stages": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "ArtifactStore",
            "RoleArn",
            "Stages"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::CodePipeline::Pipeline"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codepipeline-pipeline-artifactstore": {
      "title": "AWS CodePipeline Pipeline ArtifactStore",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html",
      "type": "object",
      "properties": {
        "EncryptionKey": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-artifactstore-encryptionkey"
        },
        "Location": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Location",
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codepipeline-pipeline-artifactstore-encryptionkey": {
      "title": "AWS CodePipeline Pipeline ArtifactStore EncryptionKey",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore-encryptionkey.html",
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Id",
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codepipeline-pipeline-disableinboundstagetransitions": {
      "title": "AWS CodePipeline Pipeline DisableInboundStageTransitions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-disableinboundstagetransitions.html",
      "type": "object",
      "properties": {
        "Reason": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StageName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Reason",
        "StageName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codepipeline-pipeline-stages": {
      "title": "AWS CodePipeline Pipeline Stages",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html",
      "type": "object",
      "properties": {
        "Actions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Blockers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-blockers"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Actions",
        "Name"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions": {
      "title": "AWS CodePipeline Pipeline Stages Actions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html",
      "type": "object",
      "properties": {
        "ActionTypeId": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions-actiontypeid"
        },
        "Configuration": {
          "type": "object"
        },
        "InputArtifacts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions-inputartifacts"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "OutputArtifacts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions-outputartifacts"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RunOrder": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "ActionTypeId",
        "Name"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions-actiontypeid": {
      "title": "AWS CodePipeline Pipeline Stages Actions ActionTypeId",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html",
      "type": "object",
      "properties": {
        "Category": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Owner": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Provider": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Version": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Category",
        "Owner",
        "Provider",
        "Version"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions-inputartifacts": {
      "title": "AWS CodePipeline Pipeline Stages Actions InputArtifacts",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-inputartifacts.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Name"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codepipeline-pipeline-stages-actions-outputartifacts": {
      "title": "AWS CodePipeline Pipeline Stages Actions OutputArtifacts",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-outputartifacts.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Name"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-codepipeline-pipeline-stages-blockers": {
      "title": "AWS CodePipeline Pipeline Stages Blockers",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-blockers.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Name",
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Config::ConfigRule": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ConfigRuleName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InputParameters": {
              "type": "object"
            },
            "MaximumExecutionFrequency": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Scope": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-config-configrule-scope"
            },
            "Source": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-config-configrule-source"
            }
          },
          "required": [
            "Source"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Config::ConfigRule"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-config-configrule-scope": {
      "title": "AWS Config ConfigRule Scope",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html",
      "type": "object",
      "properties": {
        "ComplianceResourceId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ComplianceResourceTypes": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "TagKey": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TagValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-config-configrule-source": {
      "title": "AWS Config ConfigRule Source",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html",
      "type": "object",
      "properties": {
        "Owner": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SourceDetails": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-config-configrule-source-sourcedetails"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "SourceIdentifier": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Owner",
        "SourceIdentifier"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-config-configrule-source-sourcedetails": {
      "title": "AWS Config ConfigRule Source SourceDetails",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source-sourcedetails.html",
      "type": "object",
      "properties": {
        "EventSource": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MessageType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "EventSource",
        "MessageType"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Config::ConfigurationRecorder": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RecordingGroup": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-config-configurationrecorder-recordinggroup"
            },
            "RoleARN": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "RoleARN"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Config::ConfigurationRecorder"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-config-configurationrecorder-recordinggroup": {
      "title": "AWS Config ConfigurationRecorder RecordingGroup",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html",
      "type": "object",
      "properties": {
        "AllSupported": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "IncludeGlobalResourceTypes": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "ResourceTypes": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Config::DeliveryChannel": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ConfigSnapshotDeliveryProperties": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-config-deliverychannel-configsnapshotdeliveryproperties"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "S3BucketName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "S3KeyPrefix": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SnsTopicARN": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "S3BucketName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Config::DeliveryChannel"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-config-deliverychannel-configsnapshotdeliveryproperties": {
      "title": "AWS Config DeliveryChannel ConfigSnapshotDeliveryProperties",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties.html",
      "type": "object",
      "properties": {
        "DeliveryFrequency": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::DataPipeline::Pipeline": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Activate": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ParameterObjects": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-parameterobjects"
            },
            "ParameterValues": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-parametervalues"
            },
            "PipelineObjects": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-pipelineobjects"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "PipelineTags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-pipelinetags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Name",
            "PipelineObjects"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::DataPipeline::Pipeline"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-datapipeline-pipeline-parameterobjects": {
      "title": "AWS Data Pipeline Pipeline ParameterObjects",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects.html",
      "type": "object",
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-parameterobjects-attributes"
        },
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Attributes",
        "Id"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-datapipeline-pipeline-parameterobjects-attributes": {
      "title": "AWS Data Pipeline Parameter Objects Attributes",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects-attributes.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StringValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Key"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-datapipeline-pipeline-parametervalues": {
      "title": "AWS Data Pipeline Pipeline ParameterValues",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parametervalues.html",
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StringValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Id",
        "StringValue"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-datapipeline-pipeline-pipelineobjects": {
      "title": "AWS Data Pipeline PipelineObjects",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects.html",
      "type": "object",
      "properties": {
        "Fields": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-datapipeline-pipeline-pipelineobjects-fields"
        },
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Fields",
        "Id",
        "Name"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-datapipeline-pipeline-pipelineobjects-fields": {
      "title": "AWS Data Pipeline Data Pipeline Object Fields",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects-fields.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RefValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StringValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Key"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-datapipeline-pipeline-pipelinetags": {
      "title": "AWS Data Pipeline Pipeline PipelineTags",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelinetags.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::DirectoryService::MicrosoftAD": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CreateAlias": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "EnableSso": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Password": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ShortName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VpcSettings": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-directoryservice-microsoftad-vpcsettings"
            }
          },
          "required": [
            "Name",
            "Password",
            "VpcSettings"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::DirectoryService::MicrosoftAD"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-directoryservice-microsoftad-vpcsettings": {
      "title": "AWS Directory Service MicrosoftAD VpcSettings",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-microsoftad-vpcsettings.html",
      "type": "object",
      "properties": {
        "SubnetIds": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "VpcId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "SubnetIds",
        "VpcId"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::DirectoryService::SimpleAD": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CreateAlias": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EnableSso": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Password": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ShortName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Size": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VpcSettings": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-directoryservice-simplead-vpcsettings"
            }
          },
          "required": [
            "Name",
            "Password",
            "Size",
            "VpcSettings"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::DirectoryService::SimpleAD"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-directoryservice-simplead-vpcsettings": {
      "title": "AWS Directory Service SimpleAD VpcSettings",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-simplead-vpcsettings.html",
      "type": "object",
      "properties": {
        "SubnetIds": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "VpcId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "SubnetIds",
        "VpcId"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::DynamoDB::Table": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AttributeDefinitions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-attributedef"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "GlobalSecondaryIndexes": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-gsi"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "KeySchema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-keyschema"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "LocalSecondaryIndexes": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-lsi"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "ProvisionedThroughput": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-provisionedthroughput"
            },
            "StreamSpecification": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-streamspecification"
            },
            "TableName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "AttributeDefinitions",
            "KeySchema",
            "ProvisionedThroughput"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::DynamoDB::Table"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-dynamodb-attributedef": {
      "title": "DynamoDB Attribute Definitions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-attributedef.html",
      "type": "object",
      "properties": {
        "AttributeName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "AttributeType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "AttributeName",
        "AttributeType"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-dynamodb-gsi": {
      "title": "DynamoDB Global Secondary Indexes",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-gsi.html",
      "type": "object",
      "properties": {
        "IndexName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "KeySchema": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-keyschema"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Projection": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-projectionobject"
        },
        "ProvisionedThroughput": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-provisionedthroughput"
        }
      },
      "required": [
        "IndexName",
        "KeySchema",
        "Projection",
        "ProvisionedThroughput"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-dynamodb-keyschema": {
      "title": "DynamoDB Key Schema",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-keyschema.html",
      "type": "object",
      "properties": {
        "AttributeName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "KeyType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "AttributeName",
        "KeyType"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-dynamodb-projectionobject": {
      "title": "DynamoDB Projection Object",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-projectionobject.html",
      "type": "object",
      "properties": {
        "NonKeyAttributes": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "ProjectionType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-dynamodb-provisionedthroughput": {
      "title": "DynamoDB Provisioned Throughput",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html",
      "type": "object",
      "properties": {
        "ReadCapacityUnits": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "WriteCapacityUnits": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "ReadCapacityUnits",
        "WriteCapacityUnits"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-dynamodb-lsi": {
      "title": "DynamoDB Local Secondary Indexes",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-lsi.html",
      "type": "object",
      "properties": {
        "IndexName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "KeySchema": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-keyschema"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Projection": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-dynamodb-projectionobject"
        }
      },
      "required": [
        "IndexName",
        "KeySchema",
        "Projection"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-dynamodb-streamspecification": {
      "title": "DynamoDB Table StreamSpecification",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-streamspecification.html",
      "type": "object",
      "properties": {
        "StreamViewType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "StreamViewType"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::CustomerGateway": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "BgpAsn": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "IpAddress": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Type": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "BgpAsn",
            "IpAddress",
            "Type"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::CustomerGateway"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::DHCPOptions": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DomainName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DomainNameServers": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "NetbiosNameServers": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "NetbiosNodeType": {
              "description": "\u003cp\u003eAn integer value indicating the NetBIOS node type:\u003c/p\u003e\u003cdiv class\u003d\"itemizedlist\"\u003e\u003cul class\u003d\"itemizedlist\" type\u003d\"disc\"\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003e\u003cspan class\u003d\"strong\"\u003e\u003cstrong\u003e1\u003c/strong\u003e\u003c/span\u003e: Broadcast (\"B\")\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003e\u003cspan class\u003d\"strong\"\u003e\u003cstrong\u003e2\u003c/strong\u003e\u003c/span\u003e: Point-to-point (\"P\")\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003e\u003cspan class\u003d\"strong\"\u003e\u003cstrong\u003e4\u003c/strong\u003e\u003c/span\u003e: Mixed mode (\"M\")\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003e\u003cspan class\u003d\"strong\"\u003e\u003cstrong\u003e8\u003c/strong\u003e\u003c/span\u003e: Hybrid (\"H\")\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cp\u003eFor more information about these values and about NetBIOS node types, see\n                     \u003ca class\u003d\"ulink\" href\u003d\"http://www.ietf.org/rfc/rfc2132.txt\" target\u003d\"_blank\"\u003eRFC 2132\u003c/a\u003e, \u003ca class\u003d\"ulink\" href\u003d\"http://tools.ietf.org/rfc/rfc1001.txt\" target\u003d\"_blank\"\u003eRFC 1001\u003c/a\u003e, and \u003ca class\u003d\"ulink\" href\u003d\"http://tools.ietf.org/rfc/rfc1002.txt\" target\u003d\"_blank\"\u003eRFC 1002\u003c/a\u003e. We recommend that\n                  you use only the value \u003ccode class\u003d\"code\"\u003e2\u003c/code\u003e at this time (broadcast and multicast are\n                  not currently supported).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Required if \u003ccode class\u003d\"code\"\u003eNetBiosNameServers\u003c/code\u003e is specified;\n                  optional otherwise.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of numbers\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eExample\u003c/em\u003e\u003c/span\u003e: \u003ccode class\u003d\"code\"\u003e\"NetbiosNodeType\" : 2\u003c/code\u003e\u003c/p\u003e"
            },
            "NtpServers": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::DHCPOptions"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::EIP": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "InstanceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Domain": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::EIP"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::EIPAssociation": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AllocationId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EIP": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NetworkInterfaceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PrivateIpAddress": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::EIPAssociation"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::FlowLog": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DeliverLogsPermissionArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LogGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ResourceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ResourceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TrafficType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DeliverLogsPermissionArn",
            "LogGroupName",
            "ResourceId",
            "ResourceType",
            "TrafficType"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::FlowLog"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::Host": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AutoPlacement": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AvailabilityZone": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "AvailabilityZone",
            "InstanceType"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::Host"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::Instance": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Affinity": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AvailabilityZone": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "BlockDeviceMappings": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-blockdev-mapping"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "DisableApiTermination": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "EbsOptimized": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "HostId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "IamInstanceProfile": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ImageId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceInitiatedShutdownBehavior": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "KernelId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "KeyName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Monitoring": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "NetworkInterfaces": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-network-iface-embedded"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "PlacementGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PrivateIpAddress": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RamdiskId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SecurityGroupIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SourceDestCheck": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "SsmAssociations": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-instance-ssmassociations"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "SubnetId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Tenancy": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "UserData": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Volumes": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-mount-point"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "AdditionalInfo": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ImageId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::Instance"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        },
        "CreationPolicy": {
          "$ref": "#/definitions/definitions_attributes_CreationPolicy"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-blockdev-mapping": {
      "title": "Amazon EC2 Block Device Mapping Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html",
      "type": "object",
      "properties": {
        "DeviceName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Ebs": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-blockdev-template"
        },
        "NoDevice": {
          "description": "\u003cp\u003eThis property can be used to unmap a defined device.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: an empty map: {}.\u003c/p\u003e"
        },
        "VirtualName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DeviceName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-blockdev-template": {
      "title": "Amazon Elastic Block Store Block Device Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html",
      "type": "object",
      "properties": {
        "DeleteOnTermination": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Encrypted": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Iops": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "SnapshotId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "VolumeSize": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "VolumeType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-network-iface-embedded": {
      "title": "EC2 NetworkInterface Embedded Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html",
      "type": "object",
      "properties": {
        "AssociatePublicIpAddress": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Description": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "DeviceIndex": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "GroupSet": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PrivateIpAddresses": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-network-interface-privateipspec"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "SecondaryPrivateIpAddressCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "SubnetId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DeviceIndex"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-network-interface-privateipspec": {
      "title": "EC2 Network Interface Private IP Specification",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html",
      "type": "object",
      "properties": {
        "PrivateIpAddress": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Primary": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "required": [
        "PrivateIpAddress",
        "Primary"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-instance-ssmassociations": {
      "title": "Amazon EC2 Instance SsmAssociations",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html",
      "type": "object",
      "properties": {
        "AssociationParameters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-instance-ssmassociations-associationparameters"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "DocumentName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DocumentName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-instance-ssmassociations-associationparameters": {
      "title": "Amazon EC2 Instance SsmAssociations AssociationParameters",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-mount-point": {
      "title": "EC2 MountPoint Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html",
      "type": "object",
      "properties": {
        "Device": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "VolumeId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Device",
        "VolumeId"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::InternetGateway": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::InternetGateway"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::NatGateway": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AllocationId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SubnetId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "AllocationId",
            "SubnetId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::NatGateway"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::NetworkAcl": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "VpcId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::NetworkAcl"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::NetworkAclEntry": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CidrBlock": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Egress": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Icmp": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-networkaclentry-icmp"
            },
            "NetworkAclId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PortRange": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-networkaclentry-portrange"
            },
            "Protocol": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "RuleAction": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RuleNumber": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            }
          },
          "required": [
            "CidrBlock",
            "NetworkAclId",
            "Protocol",
            "RuleAction",
            "RuleNumber"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::NetworkAclEntry"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-networkaclentry-icmp": {
      "title": "EC2 NetworkAclEntry Icmp",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html",
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-networkaclentry-portrange": {
      "title": "EC2 NetworkAclEntry PortRange",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html",
      "type": "object",
      "properties": {
        "From": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "To": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::NetworkInterface": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "GroupSet": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "PrivateIpAddress": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PrivateIpAddresses": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-network-interface-privateipspec"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "SecondaryPrivateIpAddressCount": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "SourceDestCheck": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "SubnetId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "SubnetId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::NetworkInterface"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::NetworkInterfaceAttachment": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DeleteOnTermination": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "DeviceIndex": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NetworkInterfaceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DeviceIndex",
            "InstanceId",
            "NetworkInterfaceId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::NetworkInterfaceAttachment"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::PlacementGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Strategy": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::PlacementGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::Route": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DestinationCidrBlock": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "GatewayId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NatGatewayId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NetworkInterfaceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RouteTableId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VpcPeeringConnectionId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DestinationCidrBlock",
            "RouteTableId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::Route"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::RouteTable": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "VpcId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::RouteTable"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::SecurityGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "GroupDescription": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SecurityGroupEgress": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-security-group-rule"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "SecurityGroupIngress": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-security-group-rule"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "GroupDescription"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::SecurityGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-security-group-rule": {
      "title": "EC2 Security Group Rule Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html",
      "type": "object",
      "properties": {
        "CidrIp": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "DestinationPrefixListId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "DestinationSecurityGroupId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "FromPort": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "IpProtocol": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SourceSecurityGroupId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SourceSecurityGroupName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SourceSecurityGroupOwnerId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ToPort": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "IpProtocol"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::SecurityGroupEgress": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CidrIp": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DestinationPrefixListId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DestinationSecurityGroupId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "FromPort": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "GroupId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "IpProtocol": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ToPort": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            }
          },
          "required": [
            "FromPort",
            "GroupId",
            "IpProtocol",
            "ToPort"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::SecurityGroupEgress"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::SecurityGroupIngress": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CidrIp": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "FromPort": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "GroupId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "GroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "IpProtocol": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SourceSecurityGroupId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SourceSecurityGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SourceSecurityGroupOwnerId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ToPort": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            }
          },
          "required": [
            "FromPort",
            "IpProtocol",
            "ToPort"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::SecurityGroupIngress"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::SpotFleet": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "SpotFleetRequestConfigData": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata"
            }
          },
          "required": [
            "SpotFleetRequestConfigData"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::SpotFleet"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata": {
      "title": "Amazon EC2 SpotFleet SpotFleetRequestConfigData",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html",
      "type": "object",
      "properties": {
        "AllocationStrategy": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ExcessCapacityTerminationPolicy": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IamFleetRole": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "LaunchSpecifications": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "SpotPrice": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TargetCapacity": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "TerminateInstancesWithExpiration": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "ValidFrom": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ValidUntil": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "IamFleetRole",
        "LaunchSpecifications",
        "SpotPrice",
        "TargetCapacity"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications": {
      "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html",
      "type": "object",
      "properties": {
        "BlockDeviceMappings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "EbsOptimized": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "IamInstanceProfile": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile"
        },
        "ImageId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "InstanceType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "KernelId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "KeyName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Monitoring": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring"
        },
        "NetworkInterfaces": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Placement": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement"
        },
        "RamdiskId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SecurityGroups": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "SpotPrice": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SubnetId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "UserData": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "WeightedCapacity": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "ImageId",
        "InstanceType"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings": {
      "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html",
      "type": "object",
      "properties": {
        "DeviceName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Ebs": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs"
        },
        "NoDevice": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "VirtualName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DeviceName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs": {
      "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings Ebs",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html",
      "type": "object",
      "properties": {
        "DeleteOnTermination": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Encrypted": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Iops": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "SnapshotId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "VolumeSize": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "VolumeType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile": {
      "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications IamInstanceProfile",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html",
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring": {
      "title": "Amazon EC2 SpotFleet SpotFleetRequestConfigData LaunchSpecifications Monitoring",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html",
      "type": "object",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces": {
      "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html",
      "type": "object",
      "properties": {
        "AssociatePublicIpAddress": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Description": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "DeviceIndex": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Groups": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PrivateIpAddresses": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "SecondaryPrivateIpAddressCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "SubnetId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DeviceIndex"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses": {
      "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces PrivateIpAddresses",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html",
      "type": "object",
      "properties": {
        "Primary": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "PrivateIpAddress"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement": {
      "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications Placement",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html",
      "type": "object",
      "properties": {
        "AvailabilityZone": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "GroupName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups": {
      "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications SecurityGroups",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html",
      "type": "object",
      "properties": {
        "GroupId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::Subnet": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AvailabilityZone": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CidrBlock": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MapPublicIpOnLaunch": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "CidrBlock",
            "VpcId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::Subnet"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::SubnetNetworkAclAssociation": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "SubnetId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NetworkAclId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "SubnetId",
            "NetworkAclId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::SubnetNetworkAclAssociation"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::SubnetRouteTableAssociation": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "RouteTableId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SubnetId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "RouteTableId",
            "SubnetId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::SubnetRouteTableAssociation"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::Volume": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AutoEnableIO": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "AvailabilityZone": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Encrypted": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Iops": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "KmsKeyId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Size": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SnapshotId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VolumeType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "AvailabilityZone"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::Volume"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VolumeAttachment": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Device": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VolumeId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Device",
            "InstanceId",
            "VolumeId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VolumeAttachment"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VPC": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CidrBlock": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EnableDnsSupport": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "EnableDnsHostnames": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "InstanceTenancy": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "CidrBlock"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VPC"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VPCDHCPOptionsAssociation": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DhcpOptionsId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DhcpOptionsId",
            "VpcId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VPCDHCPOptionsAssociation"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VPCEndpoint": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "PolicyDocument": {
              "type": "object"
            },
            "RouteTableIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "ServiceName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ServiceName",
            "VpcId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VPCEndpoint"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VPCGatewayAttachment": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "InternetGatewayId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VpnGatewayId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "VpcId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VPCGatewayAttachment"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VPCPeeringConnection": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "PeerVpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "PeerVpcId",
            "VpcId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VPCPeeringConnection"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VPNConnection": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Type": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CustomerGatewayId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StaticRoutesOnly": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VpnGatewayId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Type",
            "CustomerGatewayId",
            "VpnGatewayId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VPNConnection"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VPNConnectionRoute": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DestinationCidrBlock": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VpnConnectionId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DestinationCidrBlock",
            "VpnConnectionId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VPNConnectionRoute"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VPNGateway": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Type": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Type"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VPNGateway"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EC2::VPNGatewayRoutePropagation": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "RouteTableIds": {
              "description": "\u003cp class\u003d\"simpara\"\u003eA list of routing table IDs that are associated with a VPC. The routing\n                  tables must be associated with the same VPC that the virtual private gateway is\n                  attached to.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of route table IDs\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e"
            },
            "VpnGatewayId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "RouteTableIds",
            "VpnGatewayId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EC2::VPNGatewayRoutePropagation"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ECR::Repository": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "RepositoryName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RepositoryPolicyText": {
              "type": "object"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ECR::Repository"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ECS::Cluster": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ClusterName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ECS::Cluster"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ECS::Service": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Cluster": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DeploymentConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-service-deploymentconfiguration"
            },
            "DesiredCount": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "LoadBalancers": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-service-loadbalancers"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Role": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TaskDefinition": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DesiredCount",
            "TaskDefinition"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ECS::Service"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-service-deploymentconfiguration": {
      "title": "Amazon EC2 Container Service Service DeploymentConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html",
      "type": "object",
      "properties": {
        "MaximumPercent": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MinimumHealthyPercent": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-service-loadbalancers": {
      "title": "Amazon EC2 Container Service Service LoadBalancers",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html",
      "type": "object",
      "properties": {
        "ContainerName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ContainerPort": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "LoadBalancerName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TargetGroupArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "ContainerName",
        "ContainerPort"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ECS::TaskDefinition": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ContainerDefinitions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Family": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TaskRoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Volumes": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-volumes"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "ContainerDefinitions",
            "Volumes"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ECS::TaskDefinition"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions": {
      "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html",
      "type": "object",
      "properties": {
        "Command": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Cpu": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "DisableNetworking": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "DnsSearchDomains": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "DnsServers": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "DockerLabels": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        },
        "DockerSecurityOptions": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "EntryPoint": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Environment": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-environment"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Essential": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "ExtraHosts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-hostentry"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Hostname": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Image": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Links": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "LogConfiguration": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration"
        },
        "Memory": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MountPoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PortMappings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-portmappings"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Privileged": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "ReadonlyRootFilesystem": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Ulimits": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-ulimit"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "User": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "VolumesFrom": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "WorkingDirectory": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Image",
        "Memory",
        "Name"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-environment": {
      "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions Environment",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Name",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-hostentry": {
      "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions HostEntry",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html",
      "type": "object",
      "properties": {
        "Hostname": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IpAddress": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Hostname",
        "IpAddress"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration": {
      "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions LogConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html",
      "type": "object",
      "properties": {
        "LogDriver": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Options": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        }
      },
      "required": [
        "LogDriver"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints": {
      "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions MountPoints",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html",
      "type": "object",
      "properties": {
        "ContainerPath": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SourceVolume": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ReadOnly": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "required": [
        "ContainerPath",
        "SourceVolume"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-portmappings": {
      "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions PortMappings",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html",
      "type": "object",
      "properties": {
        "ContainerPort": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "HostPort": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Protocol": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "ContainerPort"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-ulimit": {
      "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions Ulimit",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html",
      "type": "object",
      "properties": {
        "HardLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SoftLimit": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "HardLimit",
        "SoftLimit"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom": {
      "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions VolumesFrom",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html",
      "type": "object",
      "properties": {
        "SourceContainer": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ReadOnly": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "required": [
        "SourceContainer"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-volumes": {
      "title": "Amazon EC2 Container Service TaskDefinition Volumes",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Host": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-ecs-taskdefinition-volumes-host"
        }
      },
      "required": [
        "Name"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ecs-taskdefinition-volumes-host": {
      "title": "Amazon EC2 Container Service TaskDefinition Volumes Host",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html",
      "type": "object",
      "properties": {
        "SourcePath": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EFS::FileSystem": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "FileSystemTags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-efs-filesystem-filesystemtags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "PerformanceMode": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EFS::FileSystem"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-efs-filesystem-filesystemtags": {
      "title": "Amazon Elastic File System FileSystem FileSystemTags",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-efs-filesystem-filesystemtags.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EFS::MountTarget": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "FileSystemId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "IpAddress": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SubnetId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "FileSystemId",
            "SecurityGroups",
            "SubnetId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EFS::MountTarget"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElastiCache::CacheCluster": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AutoMinorVersionUpgrade": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "AZMode": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CacheNodeType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CacheParameterGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CacheSecurityGroupNames": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "CacheSubnetGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ClusterName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Engine": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EngineVersion": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NotificationTopicArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NumCacheNodes": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Port": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "PreferredAvailabilityZone": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PreferredAvailabilityZones": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "PreferredMaintenanceWindow": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SnapshotArns": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SnapshotName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SnapshotRetentionLimit": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "SnapshotWindow": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VpcSecurityGroupIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          },
          "required": [
            "CacheNodeType",
            "Engine",
            "NumCacheNodes"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElastiCache::CacheCluster"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElastiCache::ParameterGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CacheParameterGroupFamily": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Properties": {
              "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
            }
          },
          "required": [
            "CacheParameterGroupFamily",
            "Description"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElastiCache::ParameterGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElastiCache::ReplicationGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AutomaticFailoverEnabled": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "AutoMinorVersionUpgrade": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "CacheNodeType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CacheParameterGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CacheSecurityGroupNames": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "CacheSubnetGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Engine": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EngineVersion": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NodeGroupConfiguration": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-elasticache-replicationgroup-nodegroupconfiguration"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "NotificationTopicArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NumCacheClusters": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "NumNodeGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Port": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "PreferredCacheClusterAZs": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "PreferredMaintenanceWindow": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PrimaryClusterId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ReplicasPerNodeGroup": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "ReplicationGroupDescription": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ReplicationGroupId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SecurityGroupIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SnapshotArns": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SnapshotName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SnapshotRetentionLimit": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "SnapshottingClusterId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SnapshotWindow": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Engine",
            "ReplicationGroupDescription"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElastiCache::ReplicationGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticache-replicationgroup-nodegroupconfiguration": {
      "title": "Amazon ElastiCache ReplicationGroup NodeGroupConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html",
      "type": "object",
      "properties": {
        "PrimaryAvailabilityZone": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ReplicaAvailabilityZones": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "ReplicaCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Slots": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElastiCache::SecurityGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElastiCache::SecurityGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElastiCache::SecurityGroupIngress": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CacheSecurityGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EC2SecurityGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EC2SecurityGroupOwnerId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "CacheSecurityGroupName",
            "EC2SecurityGroupName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElastiCache::SecurityGroupIngress"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElastiCache::SubnetGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CacheSubnetGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SubnetIds": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Description",
            "SubnetIds"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElastiCache::SubnetGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElasticBeanstalk::Application": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ApplicationName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElasticBeanstalk::Application"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElasticBeanstalk::ApplicationVersion": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ApplicationName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SourceBundle": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-sourcebundle"
            }
          },
          "required": [
            "ApplicationName",
            "SourceBundle"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElasticBeanstalk::ApplicationVersion"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-beanstalk-sourcebundle": {
      "title": "Elastic Beanstalk SourceBundle Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-sourcebundle.html",
      "type": "object",
      "properties": {
        "S3Bucket": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "S3Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "S3Bucket",
        "S3Key"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElasticBeanstalk::ConfigurationTemplate": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ApplicationName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EnvironmentId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "OptionSettings": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-option-settings"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "SolutionStackName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SourceConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-configurationtemplate-sourceconfiguration"
            }
          },
          "required": [
            "ApplicationName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElasticBeanstalk::ConfigurationTemplate"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-beanstalk-option-settings": {
      "title": "Elastic Beanstalk OptionSettings Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html",
      "type": "object",
      "properties": {
        "Namespace": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "OptionName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Namespace",
        "OptionName",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-beanstalk-configurationtemplate-sourceconfiguration": {
      "title": "Elastic Beanstalk SourceConfiguration Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-configurationtemplate-sourceconfiguration.html",
      "type": "object",
      "properties": {
        "ApplicationName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TemplateName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "ApplicationName",
        "TemplateName"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElasticBeanstalk::Environment": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ApplicationName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CNAMEPrefix": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EnvironmentName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "OptionSettings": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-option-settings"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "SolutionStackName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "TemplateName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tier": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-beanstalk-environment-tier"
            },
            "VersionLabel": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ApplicationName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElasticBeanstalk::Environment"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-beanstalk-environment-tier": {
      "title": "Elastic Beanstalk Environment Tier Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment-tier.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Version": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElasticLoadBalancing::LoadBalancer": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AccessLoggingPolicy": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-accessloggingpolicy"
            },
            "AppCookieStickinessPolicy": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-AppCookieStickinessPolicy"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "AvailabilityZones": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "ConnectionDrainingPolicy": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-connectiondrainingpolicy"
            },
            "ConnectionSettings": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-connectionsettings"
            },
            "CrossZone": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "HealthCheck": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-health-check"
            },
            "Instances": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "LBCookieStickinessPolicy": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-LBCookieStickinessPolicy"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "LoadBalancerName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Listeners": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-listener"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Policies": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-ec2-elb-policy"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Scheme": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Subnets": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Listeners"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElasticLoadBalancing::LoadBalancer"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-elb-accessloggingpolicy": {
      "title": "Elastic Load Balancing AccessLoggingPolicy",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html",
      "type": "object",
      "properties": {
        "EmitInterval": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Enabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "S3BucketName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "S3BucketPrefix": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Enabled",
        "S3BucketName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-elb-AppCookieStickinessPolicy": {
      "title": "ElasticLoadBalancing AppCookieStickinessPolicy Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-AppCookieStickinessPolicy.html",
      "type": "object",
      "properties": {
        "CookieName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PolicyName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "CookieName",
        "PolicyName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-elb-connectiondrainingpolicy": {
      "title": "Elastic Load Balancing ConnectionDrainingPolicy",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectiondrainingpolicy.html",
      "type": "object",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Timeout": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "Enabled"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-elb-connectionsettings": {
      "title": "Elastic Load Balancing ConnectionSettings",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectionsettings.html",
      "type": "object",
      "properties": {
        "IdleTimeout": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "IdleTimeout"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-elb-health-check": {
      "title": "ElasticLoadBalancing HealthCheck Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html",
      "type": "object",
      "properties": {
        "HealthyThreshold": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Interval": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Target": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Timeout": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "UnhealthyThreshold": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "HealthyThreshold",
        "Interval",
        "Target",
        "Timeout",
        "UnhealthyThreshold"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-elb-LBCookieStickinessPolicy": {
      "title": "ElasticLoadBalancing LBCookieStickinessPolicy Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-LBCookieStickinessPolicy.html",
      "type": "object",
      "properties": {
        "CookieExpirationPeriod": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PolicyName": {
          "description": "\u003cp\u003eThe name of the policy being created. The name must be unique within the set of\n                  policies for this load balancer.\u003c/p\u003e\u003cdiv class\u003d\"aws-note\"\u003e\u003cp class\u003d\"aws-note\"\u003eNote\u003c/p\u003e\u003cp\u003eTo associate this policy with a listener, include the policy name in the\n                     listener\u0027s \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html\" title\u003d\"ElasticLoadBalancing Listener Property Type\"\u003ePolicyNames\u003c/a\u003e\n                     property.\u003c/p\u003e\u003c/div\u003e"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-elb-listener": {
      "title": "ElasticLoadBalancing Listener Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html",
      "type": "object",
      "properties": {
        "InstancePort": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "InstanceProtocol": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "LoadBalancerPort": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PolicyNames": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Protocol": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SSLCertificateId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "InstancePort",
        "LoadBalancerPort",
        "Protocol"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-ec2-elb-policy": {
      "title": "ElasticLoadBalancing Policy Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html",
      "type": "object",
      "properties": {
        "Attributes": {
          "description": "\u003cp\u003eA list of arbitrary attributes for this policy. If you don\u0027t need to specify\n                  any policy attributes, specify an empty list (\u003ccode class\u003d\"code\"\u003e[]\u003c/code\u003e).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of JSON name-value pairs.\u003c/p\u003e"
        },
        "InstancePorts": {
          "description": "\u003cp\u003eA list of instance ports for the policy. These are the ports associated with the back-end\n                  server.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of String\u003c/p\u003e"
        },
        "LoadBalancerPorts": {
          "description": "\u003cp\u003eA list of external load balancer ports for the policy.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Only for some policies. For more information,\n                  see the \u003cem class\u003d\"citetitle\"\u003e\u003ca class\u003d\"ulink\" href\u003d\"http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/Welcome.html\" target\u003d\"_blank\"\u003eElastic Load Balancing\n                        Developer Guide\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of String\u003c/p\u003e"
        },
        "PolicyName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PolicyType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Attributes",
        "PolicyName",
        "PolicyType"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElasticLoadBalancingV2::Listener": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Certificates": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-listener-certificates"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "DefaultActions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-listener-defaultactions"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "LoadBalancerArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Port": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Protocol": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SslPolicy": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DefaultActions",
            "LoadBalancerArn",
            "Port",
            "Protocol"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElasticLoadBalancingV2::Listener"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticloadbalancingv2-listener-certificates": {
      "title": "Elastic Load Balancing Listener Certificates",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificates.html",
      "type": "object",
      "properties": {
        "CertificateArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticloadbalancingv2-listener-defaultactions": {
      "title": "Elastic Load Balancing Listener DefaultActions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-defaultactions.html",
      "type": "object",
      "properties": {
        "TargetGroupArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "TargetGroupArn",
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElasticLoadBalancingV2::ListenerRule": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Actions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-listenerrule-actions"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Conditions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-listenerrule-conditions"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "ListenerArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Priority": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            }
          },
          "required": [
            "Actions",
            "Conditions",
            "ListenerArn",
            "Priority"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElasticLoadBalancingV2::ListenerRule"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticloadbalancingv2-listenerrule-actions": {
      "title": "Elastic Load Balancing ListenerRule Actions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-actions.html",
      "type": "object",
      "properties": {
        "TargetGroupArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "TargetGroupArn",
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticloadbalancingv2-listenerrule-conditions": {
      "title": "Elastic Load Balancing ListenerRule Conditions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-conditions.html",
      "type": "object",
      "properties": {
        "Field": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Values": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElasticLoadBalancingV2::LoadBalancer": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "LoadBalancerAttributes": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Scheme": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Subnets": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Subnets"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElasticLoadBalancingV2::LoadBalancer"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes": {
      "title": "Elastic Load Balancing LoadBalancer LoadBalancerAttributes",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::ElasticLoadBalancingV2::TargetGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "HealthCheckIntervalSeconds": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "HealthCheckPath": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HealthCheckPort": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HealthCheckProtocol": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HealthCheckTimeoutSeconds": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "HealthyThresholdCount": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Matcher": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-targetgroup-matcher"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Port": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Protocol": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "TargetGroupAttributes": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Targets": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-elasticloadbalancingv2-targetgroup-targetdescription"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "UnhealthyThresholdCount": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Port",
            "Protocol",
            "VpcId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::ElasticLoadBalancingV2::TargetGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticloadbalancingv2-targetgroup-matcher": {
      "title": "Elastic Load Balancing TargetGroup Matcher",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-matcher.html",
      "type": "object",
      "properties": {
        "HttpCode": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes": {
      "title": "Elastic Load Balancing TargetGroup TargetGroupAttributes",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticloadbalancingv2-targetgroup-targetdescription": {
      "title": "Elastic Load Balancing TargetGroup TargetDescription",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html",
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Port": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "Id"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Elasticsearch::Domain": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AccessPolicies": {
              "type": "object"
            },
            "AdvancedOptions": {
              "description": "\u003cp\u003eAdditional options to specify for the Amazon ES domain. For more information, see\n              \u003ca class\u003d\"ulink\" href\u003d\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target\u003d\"_blank\"\u003eConfiguring Advanced Options\u003c/a\u003e in the\n            \u003cem class\u003d\"citetitle\"\u003eAmazon Elasticsearch Service Developer Guide\u003c/em\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: A JSON object consisting of a string key-value pair, such\n            as:\u003c/p\u003e\u003cpre class\u003d\"programlisting\"\u003e\u003ccode class\u003d\"nohighlight\"\u003e{\n  \"rest.action.multi.allow_explicit_index\": \"true\"\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e"
            },
            "DomainName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EBSOptions": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-elasticsearch-domain-ebsoptions"
            },
            "ElasticsearchClusterConfig": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-elasticsearch-domain-elasticsearchclusterconfig"
            },
            "ElasticsearchVersion": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SnapshotOptions": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-elasticsearch-domain-snapshotoptions"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Elasticsearch::Domain"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticsearch-domain-ebsoptions": {
      "title": "Amazon Elasticsearch Service Domain EBSOptions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-ebsoptions.html",
      "type": "object",
      "properties": {
        "EBSEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Iops": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "VolumeSize": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "VolumeType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticsearch-domain-elasticsearchclusterconfig": {
      "title": "Amazon Elasticsearch Service Domain ElasticsearchClusterConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-elasticsearchclusterconfig.html",
      "type": "object",
      "properties": {
        "DedicatedMasterCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "DedicatedMasterEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "DedicatedMasterType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "InstanceCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "InstanceType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ZoneAwarenessEnabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-elasticsearch-domain-snapshotoptions": {
      "title": "Amazon Elasticsearch Service Domain SnapshotOptions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-snapshotoptions.html",
      "type": "object",
      "properties": {
        "AutomatedSnapshotStartHour": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EMR::Cluster": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AdditionalInfo": {
              "type": "object"
            },
            "Applications": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-application"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "BootstrapActions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-bootstrapactionconfig"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Configurations": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-configuration"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Instances": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig"
            },
            "JobFlowRole": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LogUri": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ReleaseLabel": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ServiceRole": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VisibleToAllUsers": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            }
          },
          "required": [
            "Instances",
            "JobFlowRole",
            "Name",
            "ServiceRole"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EMR::Cluster"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-cluster-application": {
      "title": "Amazon EMR Cluster Application",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-application.html",
      "type": "object",
      "properties": {
        "AdditionalInfo": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Args": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Version": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-cluster-bootstrapactionconfig": {
      "title": "Amazon EMR Cluster BootstrapActionConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ScriptBootstrapAction": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig"
        }
      },
      "required": [
        "Name",
        "ScriptBootstrapAction"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig": {
      "title": "Amazon EMR Cluster BootstrapActionConfig ScriptBootstrapActionConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig.html",
      "type": "object",
      "properties": {
        "Args": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Path": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Path"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-cluster-configuration": {
      "title": "Amazon EMR Cluster Configuration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-configuration.html",
      "type": "object",
      "properties": {
        "Classification": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ConfigurationProperties": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Configurations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-configuration"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig": {
      "title": "Amazon EMR Cluster JobFlowInstancesConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html",
      "type": "object",
      "properties": {
        "AdditionalMasterSecurityGroups": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "AdditionalSlaveSecurityGroups": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "CoreInstanceGroup": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig"
        },
        "Ec2KeyName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Ec2SubnetId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "EmrManagedMasterSecurityGroup": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "EmrManagedSlaveSecurityGroup": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "HadoopVersion": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MasterInstanceGroup": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig"
        },
        "Placement": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig-placementtype"
        },
        "ServiceAccessSecurityGroup": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TerminationProtected": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "required": [
        "CoreInstanceGroup",
        "MasterInstanceGroup"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig": {
      "title": "Amazon EMR Cluster JobFlowInstancesConfig InstanceGroupConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig.html",
      "type": "object",
      "properties": {
        "BidPrice": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Configurations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-configuration"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "EbsConfiguration": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-emr-ebsconfiguration"
        },
        "InstanceCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "InstanceType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Market": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "InstanceCount",
        "InstanceType"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-ebsconfiguration": {
      "title": "Amazon EMR EbsConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration.html",
      "type": "object",
      "properties": {
        "EbsBlockDeviceConfigs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "EbsOptimized": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig": {
      "title": "Amazon EMR EbsConfiguration EbsBlockDeviceConfigs",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig.html",
      "type": "object",
      "properties": {
        "VolumeSpecification": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification"
        },
        "VolumesPerInstance": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "VolumeSpecification"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification": {
      "title": "Amazon EMR EbsConfiguration EbsBlockDeviceConfig VolumeSpecification",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification.html",
      "type": "object",
      "properties": {
        "Iops": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "SizeInGB": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "VolumeType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "SizeInGB",
        "VolumeType"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-cluster-jobflowinstancesconfig-placementtype": {
      "title": "Amazon EMR Cluster JobFlowInstancesConfig PlacementType",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-placementtype.html",
      "type": "object",
      "properties": {
        "AvailabilityZone": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "AvailabilityZone"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EMR::InstanceGroupConfig": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "BidPrice": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Configurations": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-emr-cluster-configuration"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "EbsConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-emr-ebsconfiguration"
            },
            "InstanceCount": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "InstanceRole": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "InstanceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "JobFlowId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Market": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "InstanceCount",
            "InstanceRole",
            "InstanceType",
            "JobFlowId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EMR::InstanceGroupConfig"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::EMR::Step": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ActionOnFailure": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HadoopJarStep": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-emr-step-hadoopjarstepconfig"
            },
            "JobFlowId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ActionOnFailure",
            "HadoopJarStep",
            "JobFlowId",
            "Name"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::EMR::Step"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-step-hadoopjarstepconfig": {
      "title": "Amazon EMR Step HadoopJarStepConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig.html",
      "type": "object",
      "properties": {
        "Args": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Jar": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MainClass": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StepProperties": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-emr-step-hadoopjarstepconfig-keyvalue"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        }
      },
      "required": [
        "Jar"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-emr-step-hadoopjarstepconfig-keyvalue": {
      "title": "Amazon EMR Step HadoopJarStepConfig KeyValue",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig-keyvalue.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Events::Rule": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EventPattern": {
              "type": "object"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ScheduleExpression": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "State": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Targets": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-events-rule-target"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Events::Rule"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-events-rule-target": {
      "title": "Amazon CloudWatch Events Rule Target",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html",
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Input": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "InputPath": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Arn",
        "Id"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::GameLift::Alias": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RoutingStrategy": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-gamelift-alias-routingstrategy"
            }
          },
          "required": [
            "Name",
            "RoutingStrategy"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::GameLift::Alias"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-gamelift-alias-routingstrategy": {
      "title": "Amazon GameLift Alias RoutingStrategy",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-alias-routingstrategy.html",
      "type": "object",
      "properties": {
        "FleetId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Message": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::GameLift::Build": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StorageLocation": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-gamelift-build-storagelocation"
            },
            "Version": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::GameLift::Build"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-gamelift-build-storagelocation": {
      "title": "Amazon GameLift Build StorageLocation",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-build-storagelocation.html",
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Bucket",
        "Key",
        "RoleArn"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::GameLift::Fleet": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "BuildId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DesiredEC2Instances": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "EC2InboundPermissions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-gamelift-fleet-ec2inboundpermission"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "EC2InstanceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LogPaths": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "MaxSize": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "MinSize": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ServerLaunchParameters": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ServerLaunchPath": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "BuildId",
            "DesiredEC2Instances",
            "EC2InstanceType",
            "Name",
            "ServerLaunchPath"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::GameLift::Fleet"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-gamelift-fleet-ec2inboundpermission": {
      "title": "Amazon GameLift Fleet EC2InboundPermission",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html",
      "type": "object",
      "properties": {
        "FromPort": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "IpRange": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Protocol": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ToPort": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "FromPort",
        "IpRange",
        "Protocol",
        "ToPort"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IAM::AccessKey": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Serial": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Status": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "UserName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "UserName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IAM::AccessKey"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IAM::Group": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "GroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ManagedPolicyArns": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Path": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Policies": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-iam-policy"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IAM::Group"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iam-policy": {
      "title": "IAM Policies",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html",
      "type": "object",
      "properties": {
        "PolicyDocument": {
          "type": "object"
        },
        "PolicyName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "PolicyDocument",
        "PolicyName"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IAM::InstanceProfile": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Path": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Roles": {
              "description": "\u003cp\u003eThe roles associated with this IAM instance profile.\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of references to \u003cspan class\u003d\"type\"\u003eAWS::IAM::Role\u003c/span\u003es. Currently, a\n                  maximum of one role can be assigned to an instance profile.\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e"
            }
          },
          "required": [
            "Path",
            "Roles"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IAM::InstanceProfile"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IAM::ManagedPolicy": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Groups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Path": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PolicyDocument": {
              "type": "object"
            },
            "Roles": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Users": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          },
          "required": [
            "PolicyDocument"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IAM::ManagedPolicy"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IAM::Policy": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Groups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "PolicyDocument": {
              "type": "object"
            },
            "PolicyName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Roles": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Users": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          },
          "required": [
            "PolicyDocument",
            "PolicyName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IAM::Policy"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IAM::Role": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AssumeRolePolicyDocument": {
              "description": "\u003cp\u003eThe trust policy that is associated with this role.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: A JSON policy document\u003c/p\u003e\u003cdiv class\u003d\"aws-note\"\u003e\u003cp class\u003d\"aws-note\"\u003eNote\u003c/p\u003e\u003cp\u003eAWS Identity and Access Management (IAM) requires that policies be in JSON format.\nHowever, for templates formatted in YAML, you can create an IAM policy in either JSON or YAML format. AWS CloudFormation always converts a policy to JSON format before submitting it to IAM.\u003c/p\u003e\u003c/div\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e\u003cdiv class\u003d\"aws-note\"\u003e\u003cp class\u003d\"aws-note\"\u003eNote\u003c/p\u003e\u003cp\u003eYou can associate only one assume role policy with a role. For an example of\n                     an assume role policy, see \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-templateexamples\" title\u003d\"Template Examples\"\u003eTemplate Examples\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e"
            },
            "ManagedPolicyArns": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Path": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Policies": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-iam-policy"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "RoleName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "AssumeRolePolicyDocument"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IAM::Role"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IAM::User": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Groups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "LoginProfile": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-iam-user-loginprofile"
            },
            "ManagedPolicyArns": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Path": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Policies": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-iam-policy"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "UserName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IAM::User"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iam-user-loginprofile": {
      "title": "IAM User LoginProfile",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html",
      "type": "object",
      "properties": {
        "Password": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PasswordResetRequired": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "required": [
        "Password"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IAM::UserToGroupAddition": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "GroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Users": {
              "description": "\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType\u003c/em\u003e\u003c/span\u003e: List of users\u003c/p\u003e\u003cp class\u003d\"simpara\"\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e"
            }
          },
          "required": [
            "GroupName",
            "Users"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IAM::UserToGroupAddition"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IoT::Certificate": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CertificateSigningRequest": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Status": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "CertificateSigningRequest",
            "Status"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IoT::Certificate"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IoT::Policy": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "PolicyDocument": {
              "type": "object"
            },
            "PolicyName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "PolicyDocument"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IoT::Policy"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IoT::PolicyPrincipalAttachment": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "PolicyName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Principal": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "PolicyName",
            "Principal"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IoT::PolicyPrincipalAttachment"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IoT::Thing": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AttributePayload": {
              "description": "\u003cp\u003eA JSON string that contains up to three key-value pairs, for example: \u003ccode class\u003d\"code\"\u003e{\n                     \"attributes\": { \"string1\":\"string2\" } }\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String to string map\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\"\u003eNo interruption\u003c/a\u003e\u003c/p\u003e"
            },
            "ThingName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IoT::Thing"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IoT::ThingPrincipalAttachment": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Principal": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ThingName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Principal",
            "ThingName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IoT::ThingPrincipalAttachment"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::IoT::TopicRule": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "RuleName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TopicRulePayload": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-iot-topicrulepayload"
            }
          },
          "required": [
            "TopicRulePayload"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::IoT::TopicRule"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-topicrulepayload": {
      "title": "AWS IoT TopicRulePayload",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrulepayload.html",
      "type": "object",
      "properties": {
        "Actions": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-actions"
        },
        "AwsIotSqlVersion": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Description": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RuleDisabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Sql": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Actions",
        "RuleDisabled",
        "Sql"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-actions": {
      "title": "AWS IoT Actions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-actions.html",
      "type": "object",
      "properties": {
        "CloudwatchAlarm": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-cloudwatchalarm"
        },
        "CloudwatchMetric": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-cloudwatchmetric"
        },
        "DynamoDB": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-dynamodb"
        },
        "Elasticsearch": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-elasticsearch"
        },
        "Firehose": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-firehose"
        },
        "Kinesis": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-kinesis"
        },
        "Lambda": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-lambda"
        },
        "Republish": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-republish"
        },
        "S3": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-s3"
        },
        "Sns": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-sns"
        },
        "Sqs": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-iot-sqs"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-cloudwatchalarm": {
      "title": "AWS IoT CloudwatchAlarm Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-cloudwatchalarm.html",
      "type": "object",
      "properties": {
        "AlarmName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StateReason": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StateValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "AlarmName",
        "RoleArn",
        "StateReason",
        "StateValue"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-cloudwatchmetric": {
      "title": "AWS IoT CloudwatchMetric Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-cloudwatchmetric.html",
      "type": "object",
      "properties": {
        "MetricName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MetricNamespace": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MetricTimestamp": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MetricUnit": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MetricValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "MetricName",
        "MetricNamespace",
        "MetricUnit",
        "MetricValue",
        "RoleArn"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-dynamodb": {
      "title": "AWS IoT DynamoDB Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-dynamodb.html",
      "type": "object",
      "properties": {
        "HashKeyField": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "HashKeyValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PayloadField": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RangeKeyField": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RangeKeyValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TableName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "HashKeyField",
        "HashKeyValue",
        "RangeKeyField",
        "RangeKeyValue",
        "RoleArn",
        "TableName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-elasticsearch": {
      "title": "AWS IoT Elasticsearch Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-elasticsearch.html",
      "type": "object",
      "properties": {
        "Endpoint": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Index": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Endpoint",
        "Id",
        "Index",
        "RoleArn",
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-firehose": {
      "title": "AWS IoT Firehose Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-firehose.html",
      "type": "object",
      "properties": {
        "DeliveryStreamName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DeliveryStreamName",
        "RoleArn"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-kinesis": {
      "title": "AWS IoT Kinesis Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-kinesis.html",
      "type": "object",
      "properties": {
        "PartitionKey": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StreamName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "RoleArn",
        "StreamName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-lambda": {
      "title": "AWS IoT Lambda Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-lambda.html",
      "type": "object",
      "properties": {
        "FunctionArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "FunctionArn"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-republish": {
      "title": "AWS IoT Republish Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-republish.html",
      "type": "object",
      "properties": {
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Topic": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "RoleArn",
        "Topic"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-s3": {
      "title": "AWS IoT S3 Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-s3.html",
      "type": "object",
      "properties": {
        "BucketName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "BucketName",
        "Key",
        "RoleArn"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-sns": {
      "title": "AWS IoT Sns Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-sns.html",
      "type": "object",
      "properties": {
        "MessageFormat": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TargetArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "RoleArn",
        "TargetArn"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-iot-sqs": {
      "title": "AWS IoT Sqs Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-sqs.html",
      "type": "object",
      "properties": {
        "QueueUrl": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "UseBase64": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "QueueUrl",
        "RoleArn"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Kinesis::Stream": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ShardCount": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "ShardCount"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Kinesis::Stream"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::KinesisFirehose::DeliveryStream": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DeliveryStreamName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ElasticsearchDestinationConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration"
            },
            "RedshiftDestinationConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration"
            },
            "S3DestinationConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::KinesisFirehose::DeliveryStream"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration": {
      "title": "Amazon Kinesis Firehose DeliveryStream ElasticsearchDestinationConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration.html",
      "type": "object",
      "properties": {
        "BufferingHints": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-bufferinghints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions"
        },
        "DomainARN": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IndexName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IndexRotationPeriod": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RetryOptions": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleARN": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "S3BackupMode": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "S3Configuration": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TypeName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "BufferingHints",
        "DomainARN",
        "IndexName",
        "IndexRotationPeriod",
        "RoleARN",
        "S3BackupMode",
        "TypeName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-bufferinghints": {
      "title": "Amazon Kinesis Firehose DeliveryStream ElasticsearchDestinationConfiguration BufferingHints",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-bufferinghints.html",
      "type": "object",
      "properties": {
        "IntervalInSeconds": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "SizeInMBs": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "IntervalInSeconds",
        "SizeInMBs"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions": {
      "title": "Amazon Kinesis Firehose DeliveryStream Destination CloudWatchLoggingOptions",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions.html",
      "type": "object",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "LogGroupName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "LogStreamName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration": {
      "title": "Amazon Kinesis Firehose DeliveryStream RedshiftDestinationConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration.html",
      "type": "object",
      "properties": {
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions"
        },
        "ClusterJDBCURL": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "CopyCommand": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration-copycommand"
        },
        "Password": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleARN": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "S3Configuration": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration"
        },
        "Username": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "ClusterJDBCURL",
        "CopyCommand",
        "Password",
        "RoleARN",
        "S3Configuration",
        "Username"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration-copycommand": {
      "title": "Amazon Kinesis Firehose DeliveryStream RedshiftDestinationConfiguration CopyCommand",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration-copycommand.html",
      "type": "object",
      "properties": {
        "CopyOptions": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "DataTableColumns": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "DataTableName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DataTableName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration": {
      "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration.html",
      "type": "object",
      "properties": {
        "BucketARN": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "BufferingHints": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-bufferinghints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions"
        },
        "CompressionFormat": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "EncryptionConfiguration": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration"
        },
        "Prefix": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RoleARN": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "BucketARN",
        "BufferingHints",
        "CompressionFormat",
        "Prefix",
        "RoleARN"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-bufferinghints": {
      "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration BufferingHints",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-bufferinghints.html",
      "type": "object",
      "properties": {
        "IntervalInSeconds": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "SizeInMBs": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "IntervalInSeconds",
        "SizeInMBs"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration": {
      "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration EncryptionConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration.html",
      "type": "object",
      "properties": {
        "KMSEncryptionConfig": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration-kmsencryptionconfig"
        },
        "NoEncryptionConfig": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration-kmsencryptionconfig": {
      "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration EncryptionConfiguration KMSEncryptionConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration-kmsencryptionconfig.html",
      "type": "object",
      "properties": {
        "AWSKMSKeyARN": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "AWSKMSKeyARN"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::KMS::Alias": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AliasName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TargetKeyId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "AliasName",
            "TargetKeyId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::KMS::Alias"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::KMS::Key": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Enabled": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "EnableKeyRotation": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "KeyPolicy": {
              "type": "object"
            }
          },
          "required": [
            "KeyPolicy"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::KMS::Key"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Lambda::EventSourceMapping": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "BatchSize": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Enabled": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "EventSourceArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "FunctionName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StartingPosition": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "EventSourceArn",
            "FunctionName",
            "StartingPosition"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Lambda::EventSourceMapping"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Lambda::Alias": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "FunctionName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "FunctionVersion": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "FunctionName",
            "FunctionVersion",
            "Name"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Lambda::Alias"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Lambda::Function": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Code": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-lambda-function-code"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Environment": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-lambda-function-environment"
            },
            "FunctionName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Handler": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "KmsKeyArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MemorySize": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "Role": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Runtime": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Timeout": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "VpcConfig": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-lambda-function-vpcconfig"
            }
          },
          "required": [
            "Code",
            "Handler",
            "Role",
            "Runtime"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Lambda::Function"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-lambda-function-code": {
      "title": "AWS Lambda Function Code",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html",
      "type": "object",
      "properties": {
        "S3Bucket": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "S3Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "S3ObjectVersion": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ZipFile": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-lambda-function-environment": {
      "title": "AWS Lambda Function Environment",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html",
      "type": "object",
      "properties": {
        "Variables": {
          "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-lambda-function-vpcconfig": {
      "title": "AWS Lambda Function VPCConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html",
      "type": "object",
      "properties": {
        "SecurityGroupIds": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "SubnetIds": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "required": [
        "SecurityGroupIds",
        "SubnetIds"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Lambda::Permission": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Action": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "FunctionName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Principal": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SourceAccount": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SourceArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Action",
            "FunctionName",
            "Principal"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Lambda::Permission"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Lambda::Version": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CodeSha256": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "FunctionName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "FunctionName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Lambda::Version"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Logs::Destination": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DestinationName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DestinationPolicy": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TargetArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DestinationName",
            "DestinationPolicy",
            "RoleArn",
            "TargetArn"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Logs::Destination"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Logs::LogGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "LogGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RetentionInDays": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Logs::LogGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Logs::LogStream": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "LogGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LogStreamName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "LogGroupName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Logs::LogStream"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Logs::MetricFilter": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "FilterPattern": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LogGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MetricTransformations": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-logs-metricfilter-metrictransformation"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "FilterPattern",
            "LogGroupName",
            "MetricTransformations"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Logs::MetricFilter"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-logs-metricfilter-metrictransformation": {
      "title": "CloudWatch Logs MetricFilter MetricTransformation Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html",
      "type": "object",
      "properties": {
        "MetricName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MetricNamespace": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MetricValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "MetricName",
        "MetricNamespace",
        "MetricValue"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Logs::SubscriptionFilter": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DestinationArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "FilterPattern": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LogGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DestinationArn",
            "FilterPattern",
            "LogGroupName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Logs::SubscriptionFilter"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::OpsWorks::App": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AppSource": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-stack-source"
            },
            "Attributes": {
              "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
            },
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Domains": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "EnableSsl": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Environment": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-app-environment"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Shortname": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SslConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-app-sslconfiguration"
            },
            "StackId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Type": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Name",
            "StackId",
            "Type"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::OpsWorks::App"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-stack-source": {
      "title": "AWS OpsWorks Source Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-source.html",
      "type": "object",
      "properties": {
        "Password": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Revision": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SshKey": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Url": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Username": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-app-environment": {
      "title": "AWS OpsWorks App Environment",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-environment.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Secure": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-app-sslconfiguration": {
      "title": "AWS OpsWorks SslConfiguration Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-sslconfiguration.html",
      "type": "object",
      "properties": {
        "Certificate": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Chain": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "PrivateKey": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Certificate",
        "PrivateKey"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::OpsWorks::ElasticLoadBalancerAttachment": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ElasticLoadBalancerName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LayerId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ElasticLoadBalancerName",
            "LayerId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::OpsWorks::ElasticLoadBalancerAttachment"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::OpsWorks::Instance": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AmiId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Architecture": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AutoScalingType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AvailabilityZone": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EbsOptimized": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "InstallUpdatesOnBoot": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "InstanceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LayerIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Os": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RootDeviceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SshKeyName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StackId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SubnetId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TimeBasedAutoScaling": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-instance-timebasedautoscaling"
            }
          },
          "required": [
            "InstanceType",
            "LayerIds",
            "StackId"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::OpsWorks::Instance"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-instance-timebasedautoscaling": {
      "title": "AWS OpsWorks TimeBasedAutoScaling Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-instance-timebasedautoscaling.html",
      "type": "object",
      "properties": {
        "Friday": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Monday": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Saturday": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Sunday": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Thursday": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Tuesday": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Wednesday": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::OpsWorks::Layer": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Attributes": {
              "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
            },
            "AutoAssignElasticIps": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "AutoAssignPublicIps": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "CustomInstanceProfileArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CustomRecipes": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-recipes"
            },
            "CustomSecurityGroupIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "EnableAutoHealing": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "InstallUpdatesOnBoot": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "LifecycleEventConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-lifecycleeventconfiguration"
            },
            "LoadBasedAutoScaling": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-loadbasedautoscaling"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Packages": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Shortname": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StackId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Type": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VolumeConfigurations": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-volumeconfig"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "AutoAssignElasticIps",
            "AutoAssignPublicIps",
            "EnableAutoHealing",
            "Name",
            "Shortname",
            "StackId",
            "Type"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::OpsWorks::Layer"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-layer-recipes": {
      "title": "AWS OpsWorks Recipes Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-recipes.html",
      "type": "object",
      "properties": {
        "Configure": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Deploy": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Setup": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Shutdown": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Undeploy": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-layer-lifecycleeventconfiguration": {
      "title": "AWS OpsWorks Layer LifeCycleConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration.html",
      "type": "object",
      "properties": {
        "ShutdownEventConfiguration": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration": {
      "title": "AWS OpsWorks Layer LifeCycleConfiguration ShutdownEventConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration.html",
      "type": "object",
      "properties": {
        "DelayUntilElbConnectionsDrained": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "ExecutionTimeout": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-layer-loadbasedautoscaling": {
      "title": "AWS OpsWorks LoadBasedAutoScaling Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling.html",
      "type": "object",
      "properties": {
        "DownScaling": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds"
        },
        "Enable": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "UpScaling": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds": {
      "title": "AWS OpsWorks AutoScalingThresholds Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds.html",
      "type": "object",
      "properties": {
        "CpuThreshold": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "IgnoreMetricsTime": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "InstanceCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "LoadThreshold": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MemoryThreshold": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ThresholdsWaitTime": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-layer-volumeconfig": {
      "title": "AWS OpsWorks VolumeConfiguration Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-volumeconfig.html",
      "type": "object",
      "properties": {
        "Iops": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "MountPoint": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "NumberOfDisks": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "RaidLevel": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Size": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "VolumeType": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "MountPoint",
        "NumberOfDisks",
        "Size"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::OpsWorks::Stack": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AgentVersion": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Attributes": {
              "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
            },
            "ChefConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-stack-chefconfiguration"
            },
            "ConfigurationManager": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-stack-stackconfigmanager"
            },
            "CustomCookbooksSource": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-opsworks-stack-source"
            },
            "CustomJson": {
              "type": "object"
            },
            "DefaultAvailabilityZone": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DefaultInstanceProfileArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DefaultOs": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DefaultRootDeviceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DefaultSshKeyName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DefaultSubnetId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HostnameTheme": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ServiceRoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "UseCustomCookbooks": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "UseOpsworksSecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DefaultInstanceProfileArn",
            "Name",
            "ServiceRoleArn"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::OpsWorks::Stack"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-stack-chefconfiguration": {
      "title": "AWS OpsWorks ChefConfiguration Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-chefconfiguration.html",
      "type": "object",
      "properties": {
        "BerkshelfVersion": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ManageBerkshelf": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-opsworks-stack-stackconfigmanager": {
      "title": "AWS OpsWorks StackConfigurationManager Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-stackconfigmanager.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Version": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::RDS::DBCluster": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AvailabilityZones": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "BackupRetentionPeriod": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "DatabaseName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBClusterParameterGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBSubnetGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Engine": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EngineVersion": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "KmsKeyId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MasterUsername": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MasterUserPassword": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Port": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "PreferredBackupWindow": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PreferredMaintenanceWindow": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SnapshotIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StorageEncrypted": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VpcSecurityGroupIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          },
          "required": [
            "Engine"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::RDS::DBCluster"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::RDS::DBClusterParameterGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "description": "\u003cp\u003eA friendly description for this DB cluster parameter group.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e"
            },
            "Family": {
              "description": "\u003cp\u003eThe database family of this DB cluster parameter group, such as\n                     \u003ccode class\u003d\"code\"\u003eaurora5.6\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e"
            },
            "Parameters": {
              "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Description",
            "Family",
            "Parameters"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::RDS::DBClusterParameterGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::RDS::DBInstance": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AllocatedStorage": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "AllowMajorVersionUpgrade": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "AutoMinorVersionUpgrade": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "AvailabilityZone": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "BackupRetentionPeriod": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CharacterSetName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBClusterIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBInstanceClass": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBInstanceIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBParameterGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBSecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "DBSnapshotIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBSubnetGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Domain": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DomainIAMRoleName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Engine": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EngineVersion": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Iops": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "KmsKeyId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "LicenseModel": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MasterUsername": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MasterUserPassword": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MonitoringInterval": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "MonitoringRoleArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MultiAZ": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "OptionGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Port": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PreferredBackupWindow": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PreferredMaintenanceWindow": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PubliclyAccessible": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "SourceDBInstanceIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "StorageEncrypted": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "StorageType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VPCSecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          },
          "required": [
            "DBInstanceClass"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::RDS::DBInstance"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::RDS::DBParameterGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "description": "\u003cp\u003eA friendly description of the RDS parameter group. For example, \u003ccode class\u003d\"code\"\u003e\"My Parameter Group\"\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: Updates are not supported.\u003c/p\u003e"
            },
            "Family": {
              "description": "\u003cp\u003eThe database family of this RDS parameter group. For example, \u003ccode class\u003d\"code\"\u003e\"MySQL5.1\"\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Yes\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eType:\u003c/em\u003e\u003c/span\u003e String\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: Updates are not supported.\u003c/p\u003e"
            },
            "Parameters": {
              "$ref": "#/definitions/basic_types.json_definitions_key-value-pairs"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Description",
            "Family"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::RDS::DBParameterGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::RDS::DBSecurityGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "EC2VpcId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBSecurityGroupIngress": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-rds-security-group-rule"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                },
                {
                  "$ref": "#/definitions/definitions_property_types_aws-properties-rds-security-group-rule"
                }
              ]
            },
            "GroupDescription": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "DBSecurityGroupIngress",
            "GroupDescription"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::RDS::DBSecurityGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-rds-security-group-rule": {
      "title": "Amazon RDS Security Group Rule",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group-rule.html",
      "type": "object",
      "properties": {
        "CIDRIP": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "EC2SecurityGroupId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "EC2SecurityGroupName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "EC2SecurityGroupOwnerId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::RDS::DBSecurityGroupIngress": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "CIDRIP": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBSecurityGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EC2SecurityGroupId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EC2SecurityGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EC2SecurityGroupOwnerId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "DBSecurityGroupName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::RDS::DBSecurityGroupIngress"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::RDS::DBSubnetGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DBSubnetGroupDescription": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SubnetIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "DBSubnetGroupDescription",
            "SubnetIds"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::RDS::DBSubnetGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::RDS::EventSubscription": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Enabled": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "EventCategories": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SnsTopicArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SourceIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SourceType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "SnsTopicArn"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::RDS::EventSubscription"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::RDS::OptionGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "EngineName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MajorEngineVersion": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "OptionGroupDescription": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "OptionConfigurations": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-rds-optiongroup-optionconfigurations"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "EngineName",
            "MajorEngineVersion",
            "OptionGroupDescription",
            "OptionConfigurations"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::RDS::OptionGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-rds-optiongroup-optionconfigurations": {
      "title": "Amazon RDS OptionGroup OptionConfigurations",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations.html",
      "type": "object",
      "properties": {
        "DBSecurityGroupMemberships": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "OptionName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "OptionSettings": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-rds-optiongroup-optionconfigurations-optionsettings"
        },
        "Port": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "VpcSecurityGroupMemberships": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        }
      },
      "required": [
        "OptionName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-rds-optiongroup-optionconfigurations-optionsettings": {
      "title": "Amazon RDS OptionGroup OptionConfigurations OptionSettings",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations-optionsettings.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Redshift::Cluster": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AllowVersionUpgrade": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "AutomatedSnapshotRetentionPeriod": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "AvailabilityZone": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ClusterParameterGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ClusterSecurityGroups": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "ClusterSubnetGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ClusterType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ClusterVersion": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DBName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ElasticIp": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Encrypted": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "HsmClientCertificateIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HsmConfigurationIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "KmsKeyId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MasterUsername": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "MasterUserPassword": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NodeType": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "NumberOfNodes": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "OwnerAccount": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Port": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "PreferredMaintenanceWindow": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PubliclyAccessible": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "SnapshotClusterIdentifier": {
              "description": "\u003cp\u003eThe name of the cluster the source snapshot was created from. For more information about restoring from a snapshot, see the \u003ca class\u003d\"ulink\" href\u003d\"http://docs.aws.amazon.com/redshift/latest/APIReference/API_RestoreFromClusterSnapshot.html\" target\u003d\"_blank\"\u003eRestoreFromClusterSnapshot\u003c/a\u003e action in the \u003cem class\u003d\"citetitle\"\u003eAmazon Redshift API Reference\u003c/em\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: No\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eRequired\u003c/em\u003e\u003c/span\u003e: Conditional. This property is required if your IAM policy includes\n                  a restriction on the cluster name, where the resource element specifies anything\n                  other than the wildcard character (\u003ccode class\u003d\"code\"\u003e*\u003c/code\u003e) for the cluster name.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"emphasis\"\u003e\u003cem\u003eUpdate requires\u003c/em\u003e\u003c/span\u003e: \u003ca class\u003d\"link\" href\u003d\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\"\u003eReplacement\u003c/a\u003e\u003c/p\u003e"
            },
            "SnapshotIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VpcSecurityGroupIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          },
          "required": [
            "ClusterType",
            "DBName",
            "MasterUsername",
            "MasterUserPassword",
            "NodeType"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Redshift::Cluster"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Redshift::ClusterParameterGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ParameterGroupFamily": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Parameters": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-property-redshift-clusterparametergroup-parameter"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Description",
            "ParameterGroupFamily"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Redshift::ClusterParameterGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-property-redshift-clusterparametergroup-parameter": {
      "title": "Amazon Redshift Parameter Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html",
      "type": "object",
      "properties": {
        "ParameterName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ParameterValue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "ParameterName",
        "ParameterValue"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Redshift::ClusterSecurityGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Description"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Redshift::ClusterSecurityGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Redshift::ClusterSecurityGroupIngress": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ClusterSecurityGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CIDRIP": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EC2SecurityGroupName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "EC2SecurityGroupOwnerId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "ClusterSecurityGroupName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Redshift::ClusterSecurityGroupIngress"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Redshift::ClusterSubnetGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SubnetIds": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          },
          "required": [
            "Description",
            "SubnetIds"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Redshift::ClusterSubnetGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Route53::HealthCheck": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "HealthCheckConfig": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-route53-healthcheck-healthcheckconfig"
            },
            "HealthCheckTags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-route53-healthcheck-healthchecktags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "HealthCheckConfig"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Route53::HealthCheck"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-route53-healthcheck-healthcheckconfig": {
      "title": "Amazon Route 53 HealthCheckConfig",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html",
      "type": "object",
      "properties": {
        "FailureThreshold": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "FullyQualifiedDomainName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IPAddress": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Port": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "RequestInterval": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "ResourcePath": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SearchString": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-route53-healthcheck-healthchecktags": {
      "title": "Amazon Route 53 HealthCheckTags",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktags.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Route53::HostedZone": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "HostedZoneConfig": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-route53-hostedzone-hostedzoneconfig"
            },
            "HostedZoneTags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-route53-hostedzone-hostedzonetags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "VPCs": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-resource-route53-hostedzone-hostedzonevpcs"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Name"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Route53::HostedZone"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-route53-hostedzone-hostedzoneconfig": {
      "title": "Amazon Route 53 HostedZoneConfig Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzoneconfig.html",
      "type": "object",
      "properties": {
        "Comment": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-route53-hostedzone-hostedzonetags": {
      "title": "Amazon Route 53 HostedZoneTags",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetags.html",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-resource-route53-hostedzone-hostedzonevpcs": {
      "title": "Amazon Route 53 HostedZoneVPCs",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone-hostedzonevpcs.html",
      "type": "object",
      "properties": {
        "VPCId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "VPCRegion": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "VPCId",
        "VPCRegion"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Route53::RecordSet": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AliasTarget": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-route53-aliastarget"
            },
            "Comment": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Failover": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "GeoLocation": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-route53-recordset-geolocation"
            },
            "HealthCheckId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HostedZoneId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HostedZoneName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Region": {
              "description": "\u003cp\u003eLatency resource record sets only: The Amazon EC2 region where the resource that is\n                  specified in this resource record set resides. The resource typically is an AWS\n                  resource, for example, Amazon EC2 instance or an Elastic Load Balancing load balancer, and is referred\n                  to by an IP address or a DNS domain name, depending on the record type.\u003c/p\u003e\u003cp\u003eWhen Amazon Route 53 receives a DNS query for a domain name and type for which you have\n                  created latency resource record sets, Amazon Route 53 selects the latency resource record\n                  set that has the lowest latency between the end user and the associated Amazon EC2\n                  region. Amazon Route 53 then returns the value that is associated with the selected resource\n                  record set.\u003c/p\u003e\u003cp\u003eThe following restrictions must be followed:\u003c/p\u003e\u003cdiv class\u003d\"itemizedlist\"\u003e\u003cul class\u003d\"itemizedlist\" type\u003d\"disc\"\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou can only specify one resource record per latency resource record\n                        set.\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou can only create one latency resource record set for each Amazon EC2\n                        region.\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou are not required to create latency resource record sets for all Amazon EC2\n                        regions. Amazon Route 53 will choose the region with the best latency from among the\n                        regions for which you create latency resource record sets.\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou cannot create both weighted and latency resource record sets that\n                        have the same values for the Name and Type elements.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cp\u003eTo see a list of regions by service, see \u003ca class\u003d\"ulink\" href\u003d\"http://docs.aws.amazon.com/general/latest/gr/rande.html\" target\u003d\"_blank\"\u003eRegions and Endpoints\u003c/a\u003e in the\n                  \u003cem class\u003d\"citetitle\"\u003eAWS General Reference\u003c/em\u003e.\u003c/p\u003e"
            },
            "ResourceRecords": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            },
            "SetIdentifier": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TTL": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Type": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Weight": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            }
          },
          "required": [
            "Name",
            "Type"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Route53::RecordSet"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-route53-aliastarget": {
      "title": "Route 53 AliasTarget Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html",
      "type": "object",
      "properties": {
        "DNSName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "EvaluateTargetHealth": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "HostedZoneId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DNSName",
        "HostedZoneId"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-route53-recordset-geolocation": {
      "title": "Amazon Route 53 Record Set GeoLocation Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html",
      "type": "object",
      "properties": {
        "ContinentCode": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "CountryCode": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "SubdivisionCode": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Route53::RecordSetGroup": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Comment": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HostedZoneId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "HostedZoneName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RecordSets": {
              "items": {
                "$ref": "#/definitions/definitions_resource_types_AWS::Route53::RecordSet_properties_Properties"
              },
              "type": "array"
            }
          },
          "required": [
            "RecordSets"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::Route53::RecordSetGroup"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::Route53::RecordSet_properties_Properties": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AliasTarget": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-route53-aliastarget"
        },
        "Comment": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Failover": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "GeoLocation": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-route53-recordset-geolocation"
        },
        "HealthCheckId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "HostedZoneId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "HostedZoneName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Region": {
          "description": "\u003cp\u003eLatency resource record sets only: The Amazon EC2 region where the resource that is\n                  specified in this resource record set resides. The resource typically is an AWS\n                  resource, for example, Amazon EC2 instance or an Elastic Load Balancing load balancer, and is referred\n                  to by an IP address or a DNS domain name, depending on the record type.\u003c/p\u003e\u003cp\u003eWhen Amazon Route 53 receives a DNS query for a domain name and type for which you have\n                  created latency resource record sets, Amazon Route 53 selects the latency resource record\n                  set that has the lowest latency between the end user and the associated Amazon EC2\n                  region. Amazon Route 53 then returns the value that is associated with the selected resource\n                  record set.\u003c/p\u003e\u003cp\u003eThe following restrictions must be followed:\u003c/p\u003e\u003cdiv class\u003d\"itemizedlist\"\u003e\u003cul class\u003d\"itemizedlist\" type\u003d\"disc\"\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou can only specify one resource record per latency resource record\n                        set.\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou can only create one latency resource record set for each Amazon EC2\n                        region.\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou are not required to create latency resource record sets for all Amazon EC2\n                        regions. Amazon Route 53 will choose the region with the best latency from among the\n                        regions for which you create latency resource record sets.\u003c/p\u003e\u003c/li\u003e\u003cli class\u003d\"listitem\"\u003e\u003cp\u003eYou cannot create both weighted and latency resource record sets that\n                        have the same values for the Name and Type elements.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cp\u003eTo see a list of regions by service, see \u003ca class\u003d\"ulink\" href\u003d\"http://docs.aws.amazon.com/general/latest/gr/rande.html\" target\u003d\"_blank\"\u003eRegions and Endpoints\u003c/a\u003e in the\n                  \u003cem class\u003d\"citetitle\"\u003eAWS General Reference\u003c/em\u003e.\u003c/p\u003e"
        },
        "ResourceRecords": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "SetIdentifier": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TTL": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Weight": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "Name",
        "Type"
      ]
    },
    "definitions_resource_types_AWS::S3::Bucket": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AccessControl": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "BucketName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "CorsConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-cors"
            },
            "LifecycleConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig"
            },
            "LoggingConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-loggingconfig"
            },
            "NotificationConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfig"
            },
            "ReplicationConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-replicationconfiguration"
            },
            "Tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-resource-tags"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "VersioningConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-versioningconfig"
            },
            "WebsiteConfiguration": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::S3::Bucket"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-cors": {
      "title": "Amazon S3 Cors Configuration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html",
      "type": "object",
      "properties": {
        "CorsRules": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-cors-corsrule"
        }
      },
      "required": [
        "CorsRules"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-cors-corsrule": {
      "title": "Amazon S3 Cors Configuration Rule",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html",
      "type": "object",
      "properties": {
        "AllowedHeaders": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "AllowedMethods": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "AllowedOrigins": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "ExposedHeaders": {
          "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
        },
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "MaxAge": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "AllowedMethods",
        "AllowedOrigins"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-lifecycleconfig": {
      "title": "Amazon S3 Lifecycle Configuration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html",
      "type": "object",
      "properties": {
        "Rules": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule"
        }
      },
      "required": [
        "Rules"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule": {
      "title": "Amazon S3 Lifecycle Rule",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html",
      "type": "object",
      "properties": {
        "ExpirationDate": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ExpirationInDays": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "NoncurrentVersionExpirationInDays": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "NoncurrentVersionTransition": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition"
        },
        "NoncurrentVersionTransitions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        },
        "Prefix": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Status": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Transition": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-transition"
        },
        "Transitions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-transition"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        }
      },
      "required": [
        "Status"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition": {
      "title": "Amazon S3 Lifecycle Rule NoncurrentVersionTransition",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html",
      "type": "object",
      "properties": {
        "StorageClass": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TransitionInDays": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "StorageClass",
        "TransitionInDays"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-lifecycleconfig-rule-transition": {
      "title": "Amazon S3 Lifecycle Rule Transition",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html",
      "type": "object",
      "properties": {
        "StorageClass": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TransitionDate": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TransitionInDays": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "StorageClass"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-loggingconfig": {
      "title": "Amazon S3 Logging Configuration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html",
      "type": "object",
      "properties": {
        "DestinationBucketName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "LogFilePrefix": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-notificationconfig": {
      "title": "Amazon S3 NotificationConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html",
      "type": "object",
      "properties": {
        "LambdaConfigurations": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfig-lambdaconfig"
        },
        "QueueConfigurations": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfig-queueconfig"
        },
        "TopicConfigurations": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfig-topicconfig"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-notificationconfig-lambdaconfig": {
      "title": "Amazon Simple Storage Service NotificationConfiguration LambdaConfigurations",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html",
      "type": "object",
      "properties": {
        "Event": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Filter": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter"
        },
        "Function": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Event",
        "Function"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter": {
      "title": "Amazon S3 NotificationConfiguration Config Filter",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html",
      "type": "object",
      "properties": {
        "S3Key": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key"
        }
      },
      "required": [
        "S3Key"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key": {
      "title": "Amazon S3 NotificationConfiguration Config Filter S3Key",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html",
      "type": "object",
      "properties": {
        "Rules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        }
      },
      "required": [
        "Rules"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules": {
      "title": "Amazon S3 NotificationConfiguration Config Filter S3Key Rules",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Name",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-notificationconfig-queueconfig": {
      "title": "Amazon Simple Storage Service NotificationConfiguration QueueConfigurations",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html",
      "type": "object",
      "properties": {
        "Event": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Filter": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter"
        },
        "Queue": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Event",
        "Queue"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-notificationconfig-topicconfig": {
      "title": "Amazon S3 NotificationConfiguration TopicConfigurations",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html",
      "type": "object",
      "properties": {
        "Event": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Filter": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-notificationconfiguration-config-filter"
        },
        "Topic": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Event",
        "Topic"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-replicationconfiguration": {
      "title": "Amazon S3 ReplicationConfiguration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html",
      "type": "object",
      "properties": {
        "Role": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Rules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-replicationconfiguration-rules"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        }
      },
      "required": [
        "Role",
        "Rules"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-replicationconfiguration-rules": {
      "title": "Amazon S3 ReplicationConfiguration Rules",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html",
      "type": "object",
      "properties": {
        "Destination": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-bucket-replicationconfiguration-rules-destination"
        },
        "Id": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Prefix": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Status": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Destination",
        "Prefix",
        "Status"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-replicationconfiguration-rules-destination": {
      "title": "Amazon S3 ReplicationConfiguration Rules Destination",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html",
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "StorageClass": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Bucket"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-bucket-versioningconfig": {
      "title": "Amazon S3 Versioning Configuration",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html",
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Status"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-websiteconfiguration": {
      "title": "Amazon S3 Website Configuration Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html",
      "type": "object",
      "properties": {
        "ErrorDocument": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "IndexDocument": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "RedirectAllRequestsTo": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration-redirectallrequeststo"
        },
        "RoutingRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration-routingrules"
              }
            },
            {
              "$ref": "#/definitions/basic_types.json_definitions_function"
            }
          ]
        }
      },
      "required": [
        "IndexDocument"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-websiteconfiguration-redirectallrequeststo": {
      "title": "Amazon S3 Website Configuration Redirect All Requests To Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html",
      "type": "object",
      "properties": {
        "HostName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Protocol": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "HostName"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-websiteconfiguration-routingrules": {
      "title": "Amazon S3 Website Configuration Routing Rules Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html",
      "type": "object",
      "properties": {
        "RedirectRule": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration-routingrules-redirectrule"
        },
        "RoutingRuleCondition": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition"
        }
      },
      "required": [
        "RedirectRule"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-websiteconfiguration-routingrules-redirectrule": {
      "title": "Amazon S3 Website Configuration Routing Rules Redirect Rule Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html",
      "type": "object",
      "properties": {
        "HostName": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "HttpRedirectCode": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Protocol": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ReplaceKeyPrefixWith": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "ReplaceKeyWith": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition": {
      "title": "Amazon S3 Website Configuration Routing Rules Routing Rule Condition Property",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html",
      "type": "object",
      "properties": {
        "HttpErrorCodeReturnedEquals": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "KeyPrefixEquals": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::S3::BucketPolicy": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Bucket": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "PolicyDocument": {
              "type": "object"
            }
          },
          "required": [
            "Bucket",
            "PolicyDocument"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::S3::BucketPolicy"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::SDB::Domain": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Description": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::SDB::Domain"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::SNS::Subscription": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Endpoint": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Protocol": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "TopicArn": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::SNS::Subscription"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::SNS::Topic": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DisplayName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Subscription": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-sns-subscription"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "TopicName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::SNS::Topic"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-sns-subscription": {
      "title": "Amazon SNS Subscription Property Type",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html",
      "type": "object",
      "properties": {
        "Endpoint": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Protocol": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Endpoint",
        "Protocol"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::SNS::TopicPolicy": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "PolicyDocument": {
              "type": "object"
            },
            "Topics": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          },
          "required": [
            "PolicyDocument",
            "Topics"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::SNS::TopicPolicy"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::SQS::Queue": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DelaySeconds": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "MaximumMessageSize": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "MessageRetentionPeriod": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "QueueName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "ReceiveMessageWaitTimeSeconds": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            },
            "RedrivePolicy": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-sqs-queues-redrivepolicy"
            },
            "VisibilityTimeout": {
              "$ref": "#/definitions/basic_types.json_definitions_integer"
            }
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::SQS::Queue"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-sqs-queues-redrivepolicy": {
      "title": "Amazon SQS RedrivePolicy",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues-redrivepolicy.html",
      "type": "object",
      "properties": {
        "deadLetterTargetArn": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "maxReceiveCount": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        }
      },
      "required": [
        "deadLetterTargetArn"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::SQS::QueuePolicy": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "PolicyDocument": {
              "type": "object"
            },
            "Queues": {
              "$ref": "#/definitions/basic_types.json_definitions_list\u003cstring\u003e"
            }
          },
          "required": [
            "PolicyDocument",
            "Queues"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::SQS::QueuePolicy"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::SSM::Document": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Content": {
              "type": "object"
            }
          },
          "required": [
            "Content"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::SSM::Document"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::WAF::ByteMatchSet": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ByteMatchTuples": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-waf-bytematchset-bytematchtuples"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Name"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::WAF::ByteMatchSet"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-bytematchset-bytematchtuples": {
      "title": "AWS WAF ByteMatchSet ByteMatchTuples",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples.html",
      "type": "object",
      "properties": {
        "FieldToMatch": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch"
        },
        "PositionalConstraint": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TargetString": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TargetStringBase64": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "TextTransformation": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "FieldToMatch",
        "PositionalConstraint",
        "TextTransformation"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch": {
      "title": "AWS WAF ByteMatchSet ByteMatchTuples FieldToMatch",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch.html",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::WAF::IPSet": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "IPSetDescriptors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-waf-ipset-ipsetdescriptors"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "Name"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::WAF::IPSet"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-ipset-ipsetdescriptors": {
      "title": "AWS WAF IPSet IPSetDescriptors",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-ipset-ipsetdescriptors.html",
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Value": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Type",
        "Value"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::WAF::Rule": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "MetricName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Predicates": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-waf-rule-predicates"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "MetricName",
            "Name"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::WAF::Rule"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-rule-predicates": {
      "title": "AWS WAF Rule Predicates",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-rule-predicates.html",
      "type": "object",
      "properties": {
        "DataId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Negated": {
          "$ref": "#/definitions/basic_types.json_definitions_boolean"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "DataId",
        "Negated",
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::WAF::SizeConstraintSet": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SizeConstraints": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-waf-sizeconstraintset-sizeconstraint"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Name",
            "SizeConstraints"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::WAF::SizeConstraintSet"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-sizeconstraintset-sizeconstraint": {
      "title": "AWS WAF SizeConstraintSet SizeConstraint",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint.html",
      "type": "object",
      "properties": {
        "ComparisonOperator": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "FieldToMatch": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch"
        },
        "Size": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "TextTransformation": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "ComparisonOperator",
        "FieldToMatch",
        "Size",
        "TextTransformation"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch": {
      "title": "AWS WAF SizeConstraintSet SizeConstraint FieldToMatch",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch.html",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::WAF::SqlInjectionMatchSet": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "SqlInjectionMatchTuples": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Name"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::WAF::SqlInjectionMatchSet"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples": {
      "title": "AWS WAF SqlInjectionMatchSet SqlInjectionMatchTuples",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples.html",
      "type": "object",
      "properties": {
        "FieldToMatch": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch"
        },
        "TextTransformation": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "FieldToMatch",
        "TextTransformation"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::WAF::WebACL": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DefaultAction": {
              "$ref": "#/definitions/definitions_property_types_aws-properties-waf-webacl-action"
            },
            "MetricName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "Rules": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-waf-webacl-rules"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "DefaultAction",
            "MetricName",
            "Name"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::WAF::WebACL"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-webacl-action": {
      "title": "AWS WAF WebACL Action",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-action.html",
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-webacl-rules": {
      "title": "AWS WAF WebACL Rules",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-rules.html",
      "type": "object",
      "properties": {
        "Action": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-waf-webacl-action"
        },
        "Priority": {
          "$ref": "#/definitions/basic_types.json_definitions_integer"
        },
        "RuleId": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Action",
        "Priority",
        "RuleId"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::WAF::XssMatchSet": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Name": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "XssMatchTuples": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/definitions_property_types_aws-properties-waf-xssmatchset-xssmatchtuple"
                  }
                },
                {
                  "$ref": "#/definitions/basic_types.json_definitions_function"
                }
              ]
            }
          },
          "required": [
            "Name"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::WAF::XssMatchSet"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-xssmatchset-xssmatchtuple": {
      "title": "AWS WAF XssMatchSet XssMatchTuple",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple.html",
      "type": "object",
      "properties": {
        "FieldToMatch": {
          "$ref": "#/definitions/definitions_property_types_aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch"
        },
        "TextTransformation": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "FieldToMatch",
        "TextTransformation"
      ],
      "additionalProperties": false
    },
    "definitions_property_types_aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch": {
      "title": "AWS WAF XssMatchSet XssMatchTuple FieldToMatch",
      "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch.html",
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        },
        "Type": {
          "$ref": "#/definitions/basic_types.json_definitions_string"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "definitions_resource_types_AWS::WorkSpaces::Workspace": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "BundleId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "DirectoryId": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "UserName": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            },
            "RootVolumeEncryptionEnabled": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "UserVolumeEncryptionEnabled": {
              "$ref": "#/definitions/basic_types.json_definitions_boolean"
            },
            "VolumeEncryptionKey": {
              "$ref": "#/definitions/basic_types.json_definitions_string"
            }
          },
          "required": [
            "BundleId",
            "DirectoryId",
            "UserName"
          ]
        },
        "Type": {
          "type": "string",
          "enum": [
            "AWS::WorkSpaces::Workspace"
          ]
        },
        "DependsOn": {
          "$ref": "#/definitions/definitions_attributes_DependsOn"
        },
        "Metadata": {
          "type": "object"
        },
        "DeletionPolicy": {
          "$ref": "#/definitions/definitions_attributes_DeletionPolicy"
        },
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    }
  }
}