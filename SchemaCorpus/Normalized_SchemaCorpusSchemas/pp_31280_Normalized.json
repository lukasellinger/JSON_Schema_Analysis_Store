{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "title": "Replay Data Version 1.",
  "description": "Represents the state of replay objects as stored in IndexedDB v1/2 and exported replays.",
  "definitions": {
    "bombInstance": {
      "type": "object",
      "description": "Instance of an explosion.",
      "properties": {
        "time": {
          "$ref": "#/definitions/stringTime"
        },
        "type": {
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ]
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "bombAnimation": {
          "description": "Unnecessary property added by rendering."
        }
      },
      "required": [
        "time",
        "type",
        "x",
        "y"
      ],
      "additionalProperties": false
    },
    "chatInstance": {
      "title": "Chat Message.",
      "description": "Information about a message sent to the player via chat.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "c": {
              "description": "Optional text color as hex code. Formatted like /#\\d{6}/.",
              "type": "string"
            },
            "from": {
              "type": [
                "string",
                "integer",
                "null"
              ]
            },
            "idInGroup": {
              "type": [
                "string",
                "null"
              ]
            },
            "message": {
              "description": "The message text, or a number which should be interpreted as text.",
              "type": [
                "string",
                "integer"
              ]
            },
            "mod": {
              "description": "Optional mod parameter.",
              "type": "boolean"
            },
            "removeAt": {
              "description": "The time at which to remove the chat, 30s after it was sent. May not be present if replay was made while 3.0 bug was present.",
              "$ref": "#/definitions/epochTime"
            },
            "shake": {
              "type": "boolean"
            },
            "to": {
              "description": "The recipients of the chat, may be omitted in some cases (for events)",
              "type": "string",
              "enum": [
                "all",
                "team",
                "group"
              ]
            }
          },
          "required": [
            "from",
            "message"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "description": "New chat format introduced to fix #104",
          "properties": {
            "auth": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "c": {
              "description": "Optional text color.",
              "type": "string"
            },
            "from": {
              "type": [
                "string",
                "integer",
                "null"
              ]
            },
            "idInGroup": {
              "type": [
                "string",
                "null"
              ]
            },
            "message": {
              "type": "string"
            },
            "mod": {
              "description": "Optional mod parameter.",
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "removeAt": {
              "description": "The time at which to remove the chat, 30s after it was sent. May not be present if replay was made while 3.0 bug was present.",
              "$ref": "#/definitions/epochTime"
            },
            "shake": {
              "type": "boolean"
            },
            "team": {
              "$ref": "#/definitions/definitions.json_team"
            },
            "to": {
              "type": "string",
              "enum": [
                "all",
                "team",
                "group"
              ]
            }
          },
          "required": [
            "auth",
            "from",
            "message",
            "name",
            "team",
            "to"
          ],
          "additionalProperties": false
        },
        {
          "description": "Extraneous sound packet seen in some old replays.",
          "type": "object",
          "properties": {
            "s": {
              "type": "string"
            },
            "v": {
              "type": "number"
            },
            "removeAt": {
              "type": "integer"
            }
          },
          "required": [
            "s",
            "v",
            "removeAt"
          ],
          "additionalProperties": false
        }
      ]
    },
    "spawn": {
      "type": "object",
      "title": "Spawn Event.",
      "description": "Information about a player spawning.",
      "properties": {
        "t": {
          "$ref": "#/definitions/definitions.json_team"
        },
        "w": {
          "title": "Wait Time.",
          "description": "Time before player spawns after spawn position appears.",
          "type": "integer"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "time": {
          "$ref": "#/definitions/stringTime"
        },
        "diedAt": {
          "description": "Additional property seen on some replays, origin unknown.",
          "type": "number"
        }
      },
      "required": [
        "t",
        "w",
        "x",
        "y",
        "time"
      ],
      "additionalProperties": false
    },
    "score": {
      "title": "Score Object.",
      "description": "Represents the score at a point in time.",
      "type": "object",
      "properties": {
        "b": {
          "type": "integer"
        },
        "r": {
          "type": "integer"
        }
      },
      "required": [
        "b",
        "r"
      ],
      "additionalProperties": false
    },
    "splat": {
      "title": "Splat.",
      "description": "Information about a splat that has occurred.",
      "type": "object",
      "properties": {
        "t": {
          "$ref": "#/definitions/definitions.json_team"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "time": {
          "$ref": "#/definitions/stringTime"
        },
        "temp": {
          "type": "boolean"
        },
        "img": {
          "description": "Extra property added in earlier version of replays. Not used.",
          "type": "integer"
        }
      },
      "required": [
        "t",
        "x",
        "y",
        "time"
      ],
      "additionalProperties": false
    },
    "floorTile": {
      "title": "Dynamic Floor Tile.",
      "description": "Object holding the information about the state of a tile throughout the replay.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": [
              "number",
              "string"
            ]
          }
        },
        "x": {
          "description": "The X position of the tile in the map array.",
          "type": [
            "number",
            "string"
          ]
        },
        "y": {
          "description": "The Y position of the tile in the map array.",
          "type": [
            "number",
            "string"
          ]
        }
      },
      "required": [
        "value",
        "x",
        "y"
      ],
      "additionalProperties": false
    },
    "stringTime": {
      "description": "String result of JSON parsing date objects.",
      "type": "string"
    },
    "epochTime": {
      "type": "integer",
      "title": "Epoch Time (ms).",
      "description": "Time of an event in ms."
    },
    "time": {
      "type": "object",
      "description": "Message sent to initialize wait period and game start.",
      "properties": {
        "time": {
          "description": "The time left in the game, in ms.",
          "type": "integer"
        },
        "state": {
          "description": "The state to change to."
        },
        "startTime": {
          "$ref": "#/definitions/stringTime"
        }
      }
    },
    "object": {
      "description": "A non-player object that exists in the game, e.g. mars ball or egg",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "type": {
          "description": "The type of the object, should be marsball or egg",
          "type": "string"
        },
        "draw": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_bool"
          }
        },
        "x": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_number"
          }
        },
        "y": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_number"
          }
        }
      }
    },
    "playerId": {
      "type": "integer"
    },
    "trimmableItem": {
      "description": "An item in an array that is usually trimmed on import but which may have leading zeros. Other validation should ensure only leading zeroes are present.",
      "type": "integer",
      "enum": [
        0
      ]
    },
    "definitions.json_team": {
      "type": "integer",
      "title": "Team.",
      "description": "Specifies team relevant to object, 1 for red or 2 for blue",
      "enum": [
        1,
        2
      ]
    },
    "definitions.json_frameArrayItem_bool": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions.json_frameArrayItem"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "definitions.json_frameArrayItem": {
      "description": "Array that tracks the state of properties of a player/object over time. Initially 0 (prior to player start), but if a player or object is removed then values are null.",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "description": "Just 0 allowed otherwise.",
          "type": "integer",
          "enum": [
            0
          ]
        }
      ],
      "bool": {
        "anyOf": [
          {
            "$ref": "#/definitions/definitions.json_frameArrayItem"
          },
          {
            "type": "boolean"
          }
        ]
      },
      "number": {
        "anyOf": [
          {
            "$ref": "#/definitions/definitions.json_frameArrayItem"
          },
          {
            "type": "number"
          }
        ]
      },
      "integer": {
        "anyOf": [
          {
            "$ref": "#/definitions/definitions.json_frameArrayItem"
          },
          {
            "type": "integer"
          }
        ]
      }
    },
    "definitions.json_frameArrayItem_number": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions.json_frameArrayItem"
        },
        {
          "type": "number"
        }
      ]
    },
    "player.json": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "definitions": {
        "flair": {
          "type": "object",
          "description": "Describes the flair a player is showing.",
          "properties": {
            "x": {
              "description": "The x position of the flair on the flair sprite. Type may change but will be convertible to int.",
              "type": [
                "integer",
                "string"
              ]
            },
            "y": {
              "description": "The y position of the flair on the flair sprite. Type may change but will be convertible to int.",
              "type": [
                "integer",
                "string"
              ]
            },
            "description": {
              "type": "string"
            },
            "degree": {
              "description": "The visible degree for the player, or omitted entirely if not present.",
              "type": "integer"
            }
          },
          "required": [
            "x",
            "y",
            "description"
          ]
        }
      },
      "properties": {
        "angle": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_number"
          }
        },
        "auth": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_bool"
          }
        },
        "bomb": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/definitions.json_frameArrayItem_bool"
              },
              {
                "description": "New format powerup value, see #77.",
                "type": "integer"
              }
            ]
          }
        },
        "dead": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_bool"
          }
        },
        "degree": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_integer"
          }
        },
        "draw": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_bool"
          }
        },
        "flag": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "title": "Flag Value.",
                "description": "The type of flag held by a player in a specific frame, or null if there was no flag held.",
                "type": [
                  "number",
                  "string"
                ]
              },
              {
                "$ref": "#/definitions/definitions.json_frameArrayItem"
              }
            ]
          }
        },
        "flair": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/player.json_definitions_flair"
              },
              {
                "$ref": "#/definitions/definitions.json_frameArrayItem"
              }
            ]
          }
        },
        "fps": {
          "description": "The FPS that the replay was recorded at.",
          "type": "integer"
        },
        "grip": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_bool"
          }
        },
        "map": {
          "description": "The name of the map played on in the replay.",
          "type": "string"
        },
        "me": {
          "description": "\u0027me\u0027 if this player was the player recording, \u0027other\u0027 otherwise. Used for determining world center for replay rendering.",
          "type": "string",
          "enum": [
            "other",
            "me"
          ]
        },
        "name": {
          "anyOf": [
            {
              "description": "old format that didn\u0027t have an array",
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/definitions/definitions.json_frameArrayItem"
                  }
                ]
              }
            }
          ]
        },
        "popAnimation": {
          "description": "Property seen on replays processed/saved with old version of renderer.",
          "type": "object"
        },
        "tagpro": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/definitions.json_frameArrayItem_bool"
              },
              {
                "description": "New format powerup value. See #77.",
                "type": "integer"
              }
            ]
          }
        },
        "team": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/definitions.json_team"
              },
              {
                "$ref": "#/definitions/definitions.json_frameArrayItem"
              }
            ]
          }
        },
        "x": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_number"
          }
        },
        "y": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/definitions.json_frameArrayItem_number"
          }
        }
      },
      "required": [
        "auth",
        "bomb",
        "dead",
        "degree",
        "draw",
        "flag",
        "flair",
        "grip",
        "me",
        "map",
        "fps",
        "name",
        "tagpro",
        "team",
        "x",
        "y"
      ],
      "additionalProperties": false
    },
    "definitions.json_frameArrayItem_integer": {
      "anyOf": [
        {
          "$ref": "#/definitions/definitions.json_frameArrayItem"
        },
        {
          "type": "integer"
        }
      ]
    },
    "player.json_definitions_flair": {
      "type": "object",
      "description": "Describes the flair a player is showing.",
      "properties": {
        "x": {
          "description": "The x position of the flair on the flair sprite. Type may change but will be convertible to int.",
          "type": [
            "integer",
            "string"
          ]
        },
        "y": {
          "description": "The y position of the flair on the flair sprite. Type may change but will be convertible to int.",
          "type": [
            "integer",
            "string"
          ]
        },
        "description": {
          "type": "string"
        },
        "degree": {
          "description": "The visible degree for the player, or omitted entirely if not present.",
          "type": "integer"
        }
      },
      "required": [
        "x",
        "y",
        "description"
      ]
    }
  },
  "properties": {
    "bombs": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/bombInstance"
      }
    },
    "chat": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/chatInstance"
      }
    },
    "clock": {
      "type": "array",
      "description": "The time corresponding to each frame.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/stringTime"
          },
          {
            "$ref": "#/definitions/trimmableItem"
          }
        ]
      }
    },
    "event": {
      "description": "Special event descriptor, has name and optional data",
      "oneOf": [
        {
          "type": "object",
          "description": "Egg ball event spring 2017.",
          "properties": {
            "name": {
              "enum": [
                "spring-2017"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "egg_holder": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/playerId"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              },
              "additionalItems": false
            }
          },
          "additionalItems": false
        }
      ]
    },
    "gameEndsAt": {
      "title": "Game End Info.",
      "description": "Holds information about the end of the game, if it occurred in the replay.",
      "oneOf": [
        {
          "type": "array",
          "items": [
            {
              "description": "The initial value of tagpro.gameEndsAt as of initialization of the replay recording script.",
              "$ref": "#/definitions/epochTime"
            },
            {
              "description": "The time message sent when the game starts, or the initial time message, depending on when recording started.",
              "$ref": "#/definitions/time"
            },
            {
              "description": "The time message send when the game starts, if we got another time messages.",
              "$ref": "#/definitions/time"
            }
          ],
          "minItems": 1,
          "maxItems": 3
        },
        {
          "type": "integer",
          "description": "Old version that only held the gameEndsAt value from the start of the recording initialization."
        }
      ]
    },
    "end": {
      "type": "object",
      "properties": {
        "time": {
          "$ref": "#/definitions/stringTime"
        },
        "groupId": {
          "type": [
            "string",
            "null"
          ],
          "description": "Not used but may be present."
        },
        "winner": {
          "type": "string"
        }
      },
      "required": [
        "time",
        "winner"
      ],
      "additionalProperties": false
    },
    "floorTiles": {
      "title": "Floor Tiles.",
      "description": "Track information about the state of dynamic tiles on the map.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/floorTile"
      }
    },
    "map": {
      "description": "The 2d map array copied from tagpro.map.",
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "type": [
            "number",
            "string"
          ]
        }
      }
    },
    "objects": {
      "description": "List of objects that appear in the replay, e.g. eggs or mars balls",
      "type": "object",
      "patternProperties": {
        "^-?\\d+$": {
          "$ref": "#/definitions/object"
        }
      },
      "additionalProperties": false
    },
    "score": {
      "title": "Scores.",
      "description": "Holds the scores for each team at each frame of the replay.",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/score"
          },
          {
            "$ref": "#/definitions/trimmableItem"
          }
        ]
      }
    },
    "spawns": {
      "title": "Spawns.",
      "description": "Information about the spawns that occurred over the replay.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/spawn"
      }
    },
    "splats": {
      "title": "Splats.",
      "description": "Information about the splats that have occurred over the replay.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/splat"
      }
    },
    "tiles": {
      "title": "Tile Information.",
      "description": "Converted tile information to use in reconstructing the replay."
    },
    "wallMap": {
      "description": "As copied from tagpro.wallMap.",
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": [
              "number",
              "string"
            ]
          },
          "minItems": 4,
          "maxItems": 4
        }
      }
    },
    "tagproVersion": {
      "title": "TagPro Version",
      "description": "Version of the TagPro client code for the recording, for forward compatibility in case of changes. Default should be assumed 3.2.1 (the value when this was implemented)",
      "type": "string"
    }
  },
  "patternProperties": {
    "^player[0-9]+$": {
      "$ref": "#/definitions/player.json"
    }
  },
  "required": [
    "bombs",
    "chat",
    "clock",
    "floorTiles",
    "map",
    "score",
    "spawns",
    "splats",
    "wallMap"
  ],
  "additionalProperties": false
}