{
  "title": "A JSON Schema for Swagger 2.0 API.",
  "id": "https://raw.githubusercontent.com/Azure/autorest/master/schema/swagger-extensions.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "required": [
    "swagger",
    "info",
    "paths"
  ],
  "additionalProperties": false,
  "patternProperties": {
    "^x-(?!ms-).*$": {
      "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_vendorExtension"
    }
  },
  "properties": {
    "swagger": {
      "type": "string",
      "enum": [
        "2.0"
      ],
      "description": "The Swagger version of this document."
    },
    "info": {
      "$ref": "#/definitions/info"
    },
    "host": {
      "type": "string",
      "pattern": "^[^{}/ :\\\\]+(?::\\d+)?$",
      "description": "The host (name or ip) of the API. Example: \u0027swagger.io"
    },
    "basePath": {
      "type": "string",
      "pattern": "^/",
      "description": "The base path to the API. Example: \u0027/api\u0027."
    },
    "schemes": {
      "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_schemesList"
    },
    "consumes": {
      "description": "A list of MIME types accepted by the API.",
      "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_mediaTypeList"
    },
    "produces": {
      "description": "A list of MIME types the API can produce.",
      "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_mediaTypeList"
    },
    "paths": {
      "$ref": "#/definitions/paths"
    },
    "x-ms-paths": {
      "$ref": "#/definitions/xmsPaths"
    },
    "x-ms-parameterized-host": {
      "$ref": "#/definitions/xmsParameterizedHost"
    },
    "definitions": {
      "$ref": "#/definitions/definitions"
    },
    "parameters": {
      "$ref": "#/definitions/parameterDefinitions"
    },
    "responses": {
      "$ref": "#/definitions/responseDefinitions"
    },
    "security": {
      "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_security"
    },
    "securityDefinitions": {
      "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_securityDefinitions"
    },
    "tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/tag"
      },
      "uniqueItems": true
    },
    "externalDocs": {
      "$ref": "#/definitions/externalDocs"
    }
  },
  "definitions": {
    "info": {
      "type": "object",
      "description": "General information about the API.",
      "required": [
        "version",
        "title"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "title": {
          "type": "string",
          "description": "A unique and precise title of the API."
        },
        "version": {
          "type": "string",
          "description": "A semantic version number of the API."
        },
        "description": {
          "type": "string",
          "description": "A longer description of the API. Should be different from the title.  GitHub Flavored Markdown is allowed."
        },
        "termsOfService": {
          "type": "string",
          "description": "The terms of service for the API."
        },
        "contact": {
          "$ref": "#/definitions/contact"
        },
        "license": {
          "$ref": "#/definitions/license"
        },
        "x-ms-code-generation-settings": {
          "$ref": "#/definitions/xmsCodeGenerationSettings"
        }
      }
    },
    "contact": {
      "type": "object",
      "description": "Contact information for the owners of the API.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The identifying name of the contact person/organization."
        },
        "url": {
          "type": "string",
          "description": "The URL pointing to the contact information.",
          "format": "uri"
        },
        "email": {
          "type": "string",
          "description": "The email address of the contact person/organization.",
          "format": "email"
        }
      },
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "license": {
      "type": "object",
      "required": [
        "name"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the license type. It\u0027s encouraged to use an OSI compatible license."
        },
        "url": {
          "type": "string",
          "description": "The URL pointing to the license.",
          "format": "uri"
        }
      },
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "paths": {
      "type": "object",
      "description": "Relative paths to the individual endpoints. They must be relative to the \u0027basePath\u0027.",
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        },
        "^/": {
          "$ref": "#/definitions/pathItem"
        }
      },
      "additionalProperties": false
    },
    "definitions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/schema"
      },
      "description": "One or more JSON objects describing the schemas being consumed and produced by the API."
    },
    "parameterDefinitions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/parameter"
      },
      "description": "One or more JSON representations for parameters"
    },
    "responseDefinitions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/response"
      },
      "description": "One or more JSON representations for parameters"
    },
    "externalDocs": {
      "type": "object",
      "additionalProperties": false,
      "description": "information about external documentation",
      "required": [
        "url"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      },
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "examples": {
      "type": "object",
      "additionalProperties": true
    },
    "mimeType": {
      "type": "string",
      "description": "The MIME type of the HTTP message."
    },
    "operation": {
      "type": "object",
      "required": [
        "responses"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "summary": {
          "type": "string",
          "description": "A brief summary of the operation."
        },
        "description": {
          "type": "string",
          "description": "A longer description of the operation, GitHub Flavored Markdown is allowed."
        },
        "externalDocs": {
          "$ref": "#/definitions/externalDocs"
        },
        "operationId": {
          "type": "string",
          "description": "A unique identifier of the operation."
        },
        "produces": {
          "description": "A list of MIME types the API can produce.",
          "$ref": "#/definitions/mediaTypeList"
        },
        "consumes": {
          "description": "A list of MIME types the API can consume.",
          "$ref": "#/definitions/mediaTypeList"
        },
        "parameters": {
          "$ref": "#/definitions/parametersList"
        },
        "responses": {
          "$ref": "#/definitions/responses"
        },
        "schemes": {
          "$ref": "#/definitions/schemesList"
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "security": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_security"
        },
        "x-ms-odata": {
          "$ref": "#/definitions/xmsOData"
        },
        "x-ms-pageable": {
          "$ref": "#/definitions/xmsPageable"
        },
        "x-ms-long-running-operation": {
          "$ref": "#/definitions/xmsLongRunningOperation"
        },
        "x-ms-request-id": {
          "$ref": "#/definitions/xmsRequestId"
        }
      }
    },
    "pathItem": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "$ref": {
          "type": "string"
        },
        "get": {
          "$ref": "#/definitions/operation"
        },
        "put": {
          "$ref": "#/definitions/operation"
        },
        "post": {
          "$ref": "#/definitions/operation"
        },
        "delete": {
          "$ref": "#/definitions/operation"
        },
        "options": {
          "$ref": "#/definitions/operation"
        },
        "head": {
          "$ref": "#/definitions/operation"
        },
        "patch": {
          "$ref": "#/definitions/operation"
        },
        "parameters": {
          "$ref": "#/definitions/parametersList"
        }
      }
    },
    "responses": {
      "type": "object",
      "description": "Response objects names can either be any valid HTTP status code or \u0027default\u0027.",
      "minProperties": 1,
      "additionalProperties": false,
      "patternProperties": {
        "^([0-9]{3})$|^(default)$": {
          "$ref": "#/definitions/responseValue"
        },
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "not": {
        "type": "object",
        "additionalProperties": false,
        "patternProperties": {
          "^x-(?!ms-).*$": {
            "$ref": "#/definitions/vendorExtension"
          }
        }
      }
    },
    "responseValue": {
      "oneOf": [
        {
          "$ref": "#/definitions/response"
        },
        {
          "$ref": "#/definitions/jsonReference"
        }
      ]
    },
    "response": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/fileSchema"
            }
          ]
        },
        "headers": {
          "$ref": "#/definitions/headers"
        },
        "examples": {
          "$ref": "#/definitions/examples"
        }
      },
      "additionalProperties": false,
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "headers": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/header"
      }
    },
    "header": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "integer",
            "boolean",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormat"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "x-ms-enum": {
          "$ref": "#/definitions/xmsEnum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "vendorExtension": {
      "description": "Any property starting with x- is valid.",
      "additionalProperties": true,
      "additionalItems": true
    },
    "bodyParameter": {
      "type": "object",
      "required": [
        "name",
        "in",
        "schema"
      ],
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "body"
          ]
        },
        "required": {
          "type": "boolean",
          "description": "Determines whether or not this parameter is required or optional.",
          "default": false
        },
        "x-ms-parameter-grouping": {
          "$ref": "#/definitions/xmsParameterGrouping"
        },
        "x-ms-client-name": {
          "type": "string",
          "description": "A code-generator-friendly name for the parameter."
        },
        "schema": {
          "$ref": "#/definitions/schema"
        },
        "x-ms-client-flatten": {
          "$ref": "#/definitions/xmsClientFlatten"
        }
      },
      "additionalProperties": false
    },
    "headerParameterSubSchema": {
      "additionalProperties": false,
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Determines whether or not this parameter is required or optional.",
          "default": false
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "header"
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "integer",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormat"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "x-ms-enum": {
          "$ref": "#/definitions/xmsEnum"
        },
        "x-ms-parameter-grouping": {
          "$ref": "#/definitions/xmsParameterGrouping"
        },
        "x-ms-client-name": {
          "type": "string",
          "description": "A code-generator-friendly name for the parameter."
        },
        "x-ms-client-request-id": {
          "$ref": "#/definitions/xmsClientRequestId"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        }
      }
    },
    "queryParameterSubSchema": {
      "additionalProperties": false,
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Determines whether or not this parameter is required or optional.",
          "default": false
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "query"
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "allowEmptyValue": {
          "type": "boolean",
          "default": false,
          "description": "allows sending a parameter by name only or with an empty value."
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "integer",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormatWithMulti"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "x-ms-parameter-grouping": {
          "$ref": "#/definitions/xmsParameterGrouping"
        },
        "x-ms-client-name": {
          "type": "string",
          "description": "A code-generator-friendly name for the parameter."
        },
        "x-ms-enum": {
          "$ref": "#/definitions/xmsEnum"
        },
        "x-ms-skip-url-encoding": {
          "$ref": "#/definitions/xmsSkipUrlEncoding"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        }
      }
    },
    "formDataParameterSubSchema": {
      "additionalProperties": false,
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Determines whether or not this parameter is required or optional.",
          "default": false
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "formData"
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "allowEmptyValue": {
          "type": "boolean",
          "default": false,
          "description": "allows sending a parameter by name only or with an empty value."
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "integer",
            "array",
            "file"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormatWithMulti"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "x-ms-parameter-grouping": {
          "$ref": "#/definitions/xmsParameterGrouping"
        },
        "x-ms-client-name": {
          "type": "string",
          "description": "A code-generator-friendly name for the parameter."
        },
        "x-ms-enum": {
          "$ref": "#/definitions/xmsEnum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        }
      }
    },
    "pathParameterSubSchema": {
      "additionalProperties": false,
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "required": [
        "required"
      ],
      "properties": {
        "required": {
          "type": "boolean",
          "enum": [
            true
          ],
          "description": "Determines whether or not this parameter is required or optional."
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "path"
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "integer",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormat"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "x-ms-parameter-grouping": {
          "$ref": "#/definitions/xmsParameterGrouping"
        },
        "x-ms-client-name": {
          "type": "string",
          "description": "A code-generator-friendly name for the parameter."
        },
        "x-ms-enum": {
          "$ref": "#/definitions/xmsEnum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        },
        "x-ms-skip-url-encoding": {
          "$ref": "#/definitions/xmsSkipUrlEncoding"
        }
      }
    },
    "nonBodyParameter": {
      "type": "object",
      "required": [
        "name",
        "in",
        "type"
      ],
      "oneOf": [
        {
          "$ref": "#/definitions/headerParameterSubSchema"
        },
        {
          "$ref": "#/definitions/formDataParameterSubSchema"
        },
        {
          "$ref": "#/definitions/queryParameterSubSchema"
        },
        {
          "$ref": "#/definitions/pathParameterSubSchema"
        }
      ]
    },
    "parameter": {
      "oneOf": [
        {
          "$ref": "#/definitions/bodyParameter"
        },
        {
          "$ref": "#/definitions/nonBodyParameter"
        }
      ],
      "properties": {
        "x-ms-client-flatten": {
          "$ref": "#/definitions/xmsClientFlatten"
        }
      }
    },
    "schema": {
      "type": "object",
      "description": "A deterministic version of a JSON Schema object.",
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "$ref": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "title": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_title"
        },
        "description": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_description"
        },
        "default": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_default"
        },
        "multipleOf": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_multipleOf"
        },
        "maximum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
        },
        "minLength": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0"
        },
        "pattern": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
        },
        "minItems": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0"
        },
        "uniqueItems": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_uniqueItems"
        },
        "maxProperties": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
        },
        "minProperties": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0"
        },
        "required": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_stringArray"
        },
        "enum": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_enum"
        },
        "x-ms-enum": {
          "$ref": "#/definitions/xmsEnum"
        },
        "additionalProperties": {
          "anyOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "type": "boolean"
            }
          ],
          "default": {}
        },
        "type": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_type"
        },
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/schema"
              }
            }
          ],
          "default": {}
        },
        "allOf": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/schema"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/schema"
          },
          "default": {}
        },
        "discriminator": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean",
          "default": false
        },
        "x-ms-discriminator-value": {
          "$ref": "#/definitions/xmsDiscriminatorValue"
        },
        "x-ms-azure-resource": {
          "$ref": "#/definitions/xmsAzureResource"
        },
        "x-ms-external": {
          "$ref": "#/definitions/xmsExternal"
        },
        "xml": {
          "$ref": "#/definitions/xml"
        },
        "externalDocs": {
          "$ref": "#/definitions/externalDocs"
        },
        "example": {},
        "x-ms-client-flatten": {
          "$ref": "#/definitions/xmsClientFlatten"
        },
        "x-ms-client-name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "fileSchema": {
      "type": "object",
      "description": "A deterministic version of a JSON Schema object.",
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "required": [
        "type"
      ],
      "properties": {
        "format": {
          "type": "string"
        },
        "title": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_title"
        },
        "description": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_description"
        },
        "default": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_default"
        },
        "required": {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_stringArray"
        },
        "type": {
          "type": "string",
          "enum": [
            "file"
          ]
        },
        "readOnly": {
          "type": "boolean",
          "default": false
        },
        "externalDocs": {
          "$ref": "#/definitions/externalDocs"
        },
        "example": {}
      },
      "additionalProperties": false
    },
    "primitivesItems": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "integer",
            "boolean",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormat"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "x-ms-enum": {
          "$ref": "#/definitions/xmsEnum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        }
      },
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "xml": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "attribute": {
          "type": "boolean",
          "default": false
        },
        "wrapped": {
          "type": "boolean",
          "default": false
        }
      },
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "tag": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "externalDocs": {
          "$ref": "#/definitions/externalDocs"
        }
      },
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "mediaTypeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/mimeType"
      },
      "uniqueItems": true
    },
    "parametersList": {
      "type": "array",
      "description": "The parameters needed to send a valid API call.",
      "additionalItems": false,
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/parameter"
          },
          {
            "$ref": "#/definitions/jsonReference"
          }
        ]
      },
      "uniqueItems": true
    },
    "schemesList": {
      "type": "array",
      "description": "The transfer protocol of the API.",
      "items": {
        "type": "string",
        "enum": [
          "http",
          "https",
          "ws",
          "wss"
        ]
      },
      "uniqueItems": true
    },
    "collectionFormat": {
      "type": "string",
      "enum": [
        "csv",
        "ssv",
        "tsv",
        "pipes"
      ],
      "default": "csv"
    },
    "collectionFormatWithMulti": {
      "type": "string",
      "enum": [
        "csv",
        "ssv",
        "tsv",
        "pipes",
        "multi"
      ],
      "default": "csv"
    },
    "title": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_title"
    },
    "description": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_description"
    },
    "default": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_default"
    },
    "multipleOf": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_multipleOf"
    },
    "maximum": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_maximum"
    },
    "exclusiveMaximum": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_exclusiveMaximum"
    },
    "minimum": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_minimum"
    },
    "exclusiveMinimum": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_exclusiveMinimum"
    },
    "maxLength": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
    },
    "minLength": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0"
    },
    "pattern": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_pattern"
    },
    "maxItems": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
    },
    "minItems": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0"
    },
    "uniqueItems": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_uniqueItems"
    },
    "enum": {
      "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_properties_enum"
    },
    "jsonReference": {
      "type": "object",
      "required": [
        "$ref"
      ],
      "additionalProperties": false,
      "properties": {
        "$ref": {
          "type": "string"
        }
      }
    },
    "xmsSkipUrlEncoding": {
      "type": "boolean"
    },
    "xmsEnum": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "modelAsString": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "xmsParameterGrouping": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "postfix": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "xmsPaths": {
      "$ref": "#/definitions/paths"
    },
    "xmsExternal": {
      "type": "boolean"
    },
    "xmsDiscriminatorValue": {
      "type": "string"
    },
    "xmsOData": {
      "type": "string"
    },
    "xmsPageable": {
      "type": "object",
      "properties": {
        "nextLinkName": {
          "type": [
            "string",
            "null"
          ]
        },
        "itemName": {
          "type": [
            "string",
            "null"
          ]
        },
        "operationName": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "xmsLongRunningOperation": {
      "type": "boolean"
    },
    "xmsAzureResource": {
      "type": "boolean"
    },
    "xmsRequestId": {
      "type": "string"
    },
    "xmsClientRequestId": {
      "type": "boolean"
    },
    "xmsCodeGenerationSettings": {
      "additionalProperties": true
    },
    "xmsHostParametersList": {
      "type": "array",
      "description": "The parameters used in conjunction with x-ms-parameterized-host.",
      "additionalItems": false,
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/nonBodyParameter"
          },
          {
            "$ref": "#/definitions/jsonReference"
          }
        ]
      },
      "uniqueItems": true
    },
    "xmsParameterizedHost": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^x-(?!ms-).*$": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "hostTemplate": {
          "type": "string"
        },
        "useSchemePrefix": {
          "type": "boolean",
          "default": true
        },
        "positionInOperation": {
          "type": "string",
          "default": "first",
          "pattern": "^(fir|la)st$"
        },
        "parameters": {
          "$ref": "#/definitions/xmsHostParametersList"
        }
      }
    },
    "xmsClientFlatten": {
      "type": "boolean"
    },
    "http:__swagger.io_v2_schema.json_definitions_vendorExtension": {
      "description": "Any property starting with x- is valid.",
      "additionalProperties": true,
      "additionalItems": true
    },
    "http:__swagger.io_v2_schema.json_definitions_schemesList": {
      "type": "array",
      "description": "The transfer protocol of the API.",
      "items": {
        "type": "string",
        "enum": [
          "http",
          "https",
          "ws",
          "wss"
        ]
      },
      "uniqueItems": true
    },
    "http:__swagger.io_v2_schema.json_definitions_mediaTypeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_mimeType"
      },
      "uniqueItems": true
    },
    "http:__swagger.io_v2_schema.json_definitions_mimeType": {
      "type": "string",
      "description": "The MIME type of the HTTP message."
    },
    "http:__swagger.io_v2_schema.json_definitions_security": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_securityRequirement"
      },
      "uniqueItems": true
    },
    "http:__swagger.io_v2_schema.json_definitions_securityRequirement": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "uniqueItems": true
      }
    },
    "http:__swagger.io_v2_schema.json_definitions_securityDefinitions": {
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_basicAuthenticationSecurity"
          },
          {
            "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_apiKeySecurity"
          },
          {
            "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_oauth2ImplicitSecurity"
          },
          {
            "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_oauth2PasswordSecurity"
          },
          {
            "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_oauth2ApplicationSecurity"
          },
          {
            "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_oauth2AccessCodeSecurity"
          }
        ]
      }
    },
    "http:__swagger.io_v2_schema.json_definitions_basicAuthenticationSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "basic"
          ]
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_vendorExtension"
        }
      }
    },
    "http:__swagger.io_v2_schema.json_definitions_apiKeySecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "name",
        "in"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "apiKey"
          ]
        },
        "name": {
          "type": "string"
        },
        "in": {
          "type": "string",
          "enum": [
            "header",
            "query"
          ]
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_vendorExtension"
        }
      }
    },
    "http:__swagger.io_v2_schema.json_definitions_oauth2ImplicitSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "authorizationUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "implicit"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_oauth2Scopes"
        },
        "authorizationUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_vendorExtension"
        }
      }
    },
    "http:__swagger.io_v2_schema.json_definitions_oauth2Scopes": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "http:__swagger.io_v2_schema.json_definitions_oauth2PasswordSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "tokenUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "password"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_oauth2Scopes"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_vendorExtension"
        }
      }
    },
    "http:__swagger.io_v2_schema.json_definitions_oauth2ApplicationSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "tokenUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "application"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_oauth2Scopes"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_vendorExtension"
        }
      }
    },
    "http:__swagger.io_v2_schema.json_definitions_oauth2AccessCodeSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "authorizationUrl",
        "tokenUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "accessCode"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_oauth2Scopes"
        },
        "authorizationUrl": {
          "type": "string",
          "format": "uri"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/http:__swagger.io_v2_schema.json_definitions_vendorExtension"
        }
      }
    },
    "http:__json-schema.org_draft-04_schema_properties_title": {
      "type": "string"
    },
    "http:__json-schema.org_draft-04_schema_properties_description": {
      "type": "string"
    },
    "http:__json-schema.org_draft-04_schema_properties_default": {},
    "http:__json-schema.org_draft-04_schema_properties_multipleOf": {
      "type": "number",
      "minimum": 0,
      "exclusiveMinimum": true
    },
    "http:__json-schema.org_draft-04_schema_properties_maximum": {
      "type": "number"
    },
    "http:__json-schema.org_draft-04_schema_properties_exclusiveMaximum": {
      "type": "boolean",
      "default": false
    },
    "http:__json-schema.org_draft-04_schema_properties_minimum": {
      "type": "number"
    },
    "http:__json-schema.org_draft-04_schema_properties_exclusiveMinimum": {
      "type": "boolean",
      "default": false
    },
    "http:__json-schema.org_draft-04_schema_definitions_positiveInteger": {
      "type": "integer",
      "minimum": 0
    },
    "http:__json-schema.org_draft-04_schema_definitions_positiveIntegerDefault0": {
      "allOf": [
        {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_positiveInteger"
        },
        {
          "default": 0
        }
      ]
    },
    "http:__json-schema.org_draft-04_schema_properties_pattern": {
      "type": "string",
      "format": "regex"
    },
    "http:__json-schema.org_draft-04_schema_properties_uniqueItems": {
      "type": "boolean",
      "default": false
    },
    "http:__json-schema.org_draft-04_schema_definitions_stringArray": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "http:__json-schema.org_draft-04_schema_properties_enum": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true
    },
    "http:__json-schema.org_draft-04_schema_properties_type": {
      "anyOf": [
        {
          "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_simpleTypes"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/http:__json-schema.org_draft-04_schema_definitions_simpleTypes"
          },
          "minItems": 1,
          "uniqueItems": true
        }
      ]
    },
    "http:__json-schema.org_draft-04_schema_definitions_simpleTypes": {
      "enum": [
        "array",
        "boolean",
        "integer",
        "null",
        "number",
        "object",
        "string"
      ]
    }
  }
}