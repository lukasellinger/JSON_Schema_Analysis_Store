{
  "$schema": "http://json-schema.org/schema#",
  "id": "widget.json",
  "definitions": {
    "state_type": {
      "type": "object",
      "anyOf": [
        {
          "scene_object": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        },
        {
          "material": {
            "type": "object",
            "oneOf": [
              {
                "id": {
                  "type": "string"
                }
              },
              {
                "$ref": "../common/material.json"
              }
            ]
          }
        },
        {
          "animation": {
            "type": "object",
            "oneOf": [
              {
                "properties": {
                  "id": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer",
                        "minimum": 0
                      }
                    ]
                  }
                },
                "required": [
                  "id"
                ]
              },
              {
                "$ref": "../common/animation.json"
              }
            ]
          }
        }
      ]
    },
    "states_type": {
      "type": "object",
      "anyOf": [
        {
          "normal": {
            "$ref": "#/definitions/state_type"
          }
        },
        {
          "focused": {
            "$ref": "#/definitions/state_type"
          }
        },
        {
          "active": {
            "$ref": "#/definitions/state_type"
          }
        },
        {
          "disabled": {
            "$ref": "#/definitions/state_type"
          }
        }
      ]
    },
    "level_type": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/state_type"
        },
        {
          "$ref": "#/definitions/states_type"
        }
      ]
    },
    "level_not": {
      "type": "object",
      "properties": {
        "level": {
          "type": [
            "number",
            "array",
            "string",
            "object",
            "boolean",
            "null"
          ]
        }
      },
      "required": [
        "level"
      ]
    },
    "levels_not": {
      "type": "object",
      "properties": {
        "levels": {
          "type": [
            "number",
            "array",
            "string",
            "object",
            "boolean"
          ]
        }
      },
      "required": [
        "levels"
      ]
    },
    "states_not": {
      "type": "object",
      "properties": {
        "states": {
          "type": [
            "number",
            "array",
            "string",
            "object",
            "boolean"
          ]
        }
      },
      "required": [
        "states"
      ]
    }
  },
  "type": "object",
  "properties": {
    "name": {
      "type": "string"
    },
    "touchable": {
      "type": "boolean",
      "default": true
    },
    "focusenabled": {
      "type": "boolean",
      "default": true
    },
    "visibility": {
      "type": "string",
      "enum": [
        "VISIBLE",
        "HIDDEN",
        "GONE",
        "PLACEHOLDER"
      ],
      "default": "VISIBLE"
    },
    "position": {
      "$ref": "../common/vector3f.json"
    },
    "rotation": {
      "type": "object",
      "properties": {
        "x": {
          "$ref": "../common/scalar.json"
        },
        "y": {
          "$ref": "../common/scalar.json"
        },
        "z": {
          "$ref": "../common/scalar.json"
        },
        "angle": {
          "type": "number"
        },
        "pivot": {
          "$ref": "../common/vector3f.json"
        }
      },
      "required": [
        "angle"
      ]
    },
    "scale": {
      "oneOf": [
        {
          "$ref": "../common/vector3f.json"
        },
        {
          "type": "number"
        }
      ]
    },
    "viewport": {
      "description": "Defines the area reserved for the Widget in the layout and, for some Widgets, that children are clipped to.",
      "$ref": "../common/vector3f.json"
    },
    "children": {
      "description": "Can be \u0027null\u0027, an array of Widgets, or a map of Widgets, which is handy for direct access. If it\u0027s a map, each child will be added as it is encountered in the key set. An \u0027$unkeyed\u0027 array can optionally be specified, filled with any other children that direct access is not needed for; these children will be added *after* the \u0027keyed\u0027 children -- however, if the name of a \u0027keyed\u0027 child is present in the array, it will be added according to its place in the array",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "$unkeyed": {
              "type": "array",
              "items": {
                "type": [
                  "string",
                  {
                    "$ref": "widget.json"
                  }
                ]
              }
            }
          },
          "additionalProperties": {
            "$ref": "widget.json"
          }
        },
        {
          "type": "array",
          "items": {
            "type": [
              {
                "$ref": "widget.json"
              }
            ]
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "create_children": {
      "description": "Specifies whether to create child Widgets for all sub-objects of the Widget\u0027s GVRSceneObject (true) or to handle sub-objects as being part of the same Widget (false).",
      "type": "boolean",
      "default": true
    }
  },
  "anyOf": [
    {
      "$ref": "../common/mesh.json"
    }
  ],
  "oneOf": [
    {
      "description": "The \u0027levels\u0027 field is mutually exclusive with non-null \u0027states\u0027 field",
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "minimum": 0
        },
        "levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/level_type"
          }
        }
      },
      "required": [
        "levels"
      ],
      "dependencies": {
        "level": "levels"
      },
      "not": {
        "$ref": "#/definitions/states_not"
      }
    },
    {
      "description": "The \u0027states\u0027 field is mutually exclusive with non-null \u0027levels\u0027 field and with \u0027level\u0027 field",
      "type": "object",
      "properties": {
        "states": {
          "type": "object",
          "anyOf": [
            {
              "normal": {
                "$ref": "#/definitions/state_type"
              }
            },
            {
              "focused": {
                "$ref": "#/definitions/state_type"
              }
            },
            {
              "selected": {
                "$ref": "#/definitions/state_type"
              }
            }
          ]
        }
      },
      "required": [
        "states"
      ],
      "not": {
        "anyOf": [
          {
            "$ref": "#/definitions/level_not"
          },
          {
            "$ref": "#/definitions/levels_not"
          }
        ]
      }
    },
    {
      "description": "Makes it possible to have neither \u0027levels\u0027 nor \u0027states\u0027, or either (or both) of them present, but null",
      "not": {
        "anyOf": [
          {
            "$ref": "#/definitions/level_not"
          },
          {
            "$ref": "#/definitions/levels_not"
          },
          {
            "$ref": "#/definitions/states_not"
          }
        ]
      }
    }
  ]
}